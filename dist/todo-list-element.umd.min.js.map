{"version":3,"sources":["webpack://TodoListElement/webpack/universalModuleDefinition","webpack://TodoListElement/webpack/bootstrap","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/styles/host.css?e250","webpack://TodoListElement/external \"(window.Map.Map = window.Map)\"","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://TodoListElement/./src/styles/show-on-hover.css?82dc","webpack://TodoListElement/external \"(window.WeakMap.WeakMap = window.WeakMap)\"","webpack://TodoListElement/./node_modules/css-loader/lib/css-base.js","webpack://TodoListElement/external \"(window.Symbol.Symbol = window.Symbol)\"","webpack://TodoListElement/external \"(window.Set.Set = window.Set)\"","webpack://TodoListElement/(webpack)/buildin/global.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/styles/host.css","webpack://TodoListElement/./src/styles/show-on-hover.css","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/throwIfThisIsPrototype.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Ev.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/utils.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/polyfill-support.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/ComponentElement.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/decorators/prop.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/decorators/bind.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/generatePropGetterSetter.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/uuid.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/utils.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/isTemplateElement.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domRemoveChild.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/NodeHandler.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/Directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/TemplateInstance.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/render.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/bindings/text-binding.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/Template.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/view.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/DomDataBind.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/attr-directive.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/class-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/each-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/html-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/if-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/on-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/prop-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/show-directive.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domSetStyle.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/style-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/index.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/DomDataBindElement.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/ElementDecorator.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/base/Icon.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.boxicons.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.office-ui-fabric.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.twemoji.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/Icon.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domToggleClass.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/ConfirmAction/ConfirmAction.js","webpack://TodoListElement/./src/TodoInput.js","webpack://TodoListElement/./src/TodoAction.js","webpack://TodoListElement/./src/TodoItem.js","webpack://TodoListElement/./src/TodoAdd.js","webpack://TodoListElement/./src/TodoList.js","webpack://TodoListElement/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","result","toString","Map","global","__webpack_exports__","GLOBAL","self","Function","WeakMap","useSourceMap","list","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","Set","g","e","_toArray","arr","Array","isArray","_arrayWithHoles","iter","iterator","from","_iterableToArray","TypeError","_nonIterableRest","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","get_get","target","receiver","Reflect","base","_superPropBase","desc","getOwnPropertyDescriptor","_defineProperty","obj","configurable","writable","functionBind","functionBindCall","isObject","isString","isNull","isUndefined","objectDefineProperty","objectKeys","defineProperties","keys","prop","setter","descriptor","set","getPropertyDescriptor","arrayForEach","forEach","arraySplice","indexOf","splice","arraySlice","slice","consoleLog","console","log","consoleError","error","consoleWarn","warn","HTMLElementPrototype","HTMLElement","doc","document","head","createElement","tagName","createTextNode","data","appendChild","hasAttribute","insertBefore","getAttribute","setAttribute","removeAttribute","isDocFragment","node","objectExtend","mergeIntoObj","mergeObjects","response","total","deepMerge","shift","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","fn","then","catch","immediates","processing","processPending","setTimeout","isQueued","queuedCallbacks","flushQueue","callbacks","clear","queue","callback","add","throwIfThisIsPrototype","THIS","constructor","Error","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","querySelectorAll","dataStore","stash","LISTENER_STORAGE","Ev","on","getStoreFor","delete","emit","inst","has","PRIVATE","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","instance","state","isCssScopingDone","templateEle","ev","destroyCallbacks","destroyQueued","isMounted","getPropsDefinition","ComponentClass","getComponentClassState","propsDef","statePropsDef","componentPropsDef","propName","propAliasDef","_isAlias","propNameAlias","observedAttrs","supportsShadyCSS","ShadyCSS","removeElement","parentNode","removeChild","supportsNativeShadowDom","createShadowRoot","attachShadow","nativeShadow","prepareRenderedContent","renderOutput","eleInstance","isRenderOutputString","ComponentClassState","view","innerHTML","cloneNode","template","prepareTemplate","scopeCss","prepareTemplateDom","importNode","reStyleComponentInstanceSubtree","componentInstance","styleSubtree","SHADOW_DOM_SUPPORTED","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","PROPS_NOOP","freeze","EVENT_ANY","lazySetupUnderway","ComponentElement","args","super","component","useShadow","shadowMode","shadowRoot","_$ui","onPropsChange","update","didInit","setupComponent","[object Object]","delayDestroy","process","eventInitOptions","observedAttributes","propList","filter","attr","props","undefined","propDefinitions","notifyAnyListeners","_for","_ev","propValue","default","notifyPropListeners","boolean","attrVal","geAttributeValueForProp","newValue","hasRequiredProps","required","every","$ui","destroy","clearTimeout","cb","didDestroy","onDestroy","$","querySelector","$$","_update","shouldRender","willRender","_setView","render","didRender","queueUpdate","_queueUpdate","__queueUpdate","_polyfillDone","textContent","init","didMount","ready","mounted","didUnmount","unmounted","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","detail","dispatchEvent","eventNames","attributeChangedCallback","oldValue","connectedCallback","styleElement","styleComponentInstanceElement","disconnectedCallback","RE_UPPER_CASE_LETTERS","NOOP","val","options","kind","_propDecorator","initializer","propDefinition","validator","propertyDefinition","realHtmlPropValue","str","replace","match","p1","getKebabCase","getPropSetup","newDescriptor","getDecoratorDescriptor","extras","aliasName","proxyToPropName","componentPropDefinition","DecoratorDescriptor","placement","finisher","Klass","_bound","decoratorDescriptor","isDoingLazySetup","method","boundMethod","storage","createObject","counter","pad","num","size","substr","globalCount","count","fingerprint","navigator","mimeTypes","userAgent","uuid","generate","timestamp","Date","getTime","nextCounter","random","Math","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","VALUE_GETTERS","DOM_DATA_BIND_PROP","UUID","now","bindCallTo","isPureObject","createComment","isTemplate","eleToStringValue","logError","createValueGetter","evalCode","trim","getNodeAttrNames","attrNames","attributes","domInsertBefore","newNode","referenceNode","domRemoveChild","childNode","queueCallback","cbList","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","executeCallbacksNow","callOnDestroyCallback","getInstanceState","getFactory","staticMethods","extend","Class","reduce","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","protoKey","arguments","getDestroyCallback","instanceState","stateStore","Node","Compose","ComposeConstructor","getNewConstructor","NodeHandler","directive","directives","_directives","_d","_directive","_n","_node","tracker","stopWatchingAll","Directive","handler","handlerState","_tokenValueGetter","cleanNode","_attr","nodeType","getNodeHandler","NodeHandlerConstructor","TemplateInstance","docFrag","bindings","templateId","_frag","_bindings","_childNodes","childNodes","fromTemplateId","recover","nodeEle","setData","html","viewTemplate","Template","applyBindingsToTemplateInstance","ID","isAttached","TextBinding","tokenText","_tokenText","nodeValue","_placeholderEle","_externalNodes","_template","_templateInst","setPlaceholder","DomDataBind","isCurrentExternal","storeExternals","removeExternals","newNodeEle","destroyTemplateView","DROPS_NODES_ON_CLONE","frag","createDocumentFragment","NODE_CONTAINS_MISSES_TEXT_NODES","div","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","getBindingFor","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","onlyElementsWithAttributes","findAllNodes","skip","ignoredParent","values","compareDocumentPosition","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","parent","unshift","Directives","directivesInstances","getNodeAt","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","TEMPLATES","cacheKey","hasTemplate","$ele","Factory","binding","AttrDirective","directiveAttr","_matches","_htmlAttr","_isProp","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","className","domRemoveClass","DIRECTIVE","ClassDirective","newClasses","oldClasses","EACH","KEY_DIRECTIVE","destroyBinder","binder","_destroy","defaultRowKey","isEmptyList","EachDirective","iteratorArgs","listVar","matches","argName","parseDirectiveValue","_iteratorArgs","destroyChildBinders","binders","_isSoleChild","parentEle","getDataForIteration","dataObj","rowData","iterateOverList","newData","iterationDataList","isDataArray","currentBinders","binderToBeDestroyed","totalItems","usesKey","getKey","_viewTemplate","$root","$parent","$data","rowKey","_loop","bindersByKey","pos","positionRowInDom","recycleBinderKey","recycleBinder","entries","next","destroyRowElement","_handler","binderIndex","defaultInsertMarkerElement","hasDedicatedParent","firstChildNode","setupViewTemplate","newList","listIterator","HtmlDirective","IfDirective","showElement","_renderedEle","_renderTemplate","teardown","matchesDirective","escapeString","isNumber","keyAliases","13","27","9","46","32","38","40","37","39","keyCodesAliases","OnDirective","_info","directiveString","hasModifiers","modifiers","Boolean","parseDirectiveString","_eventName","_filter","modifier","setup","handleEvent","domEv","whichKey","which","KeyboardEvent","tokenValue","returnValue","$ev","once","stop","stopPropagation","prevent","preventDefault","_evListener","matchRegExp","PropDirective","ShowDirective","_origDisplayStyle","style","display","eleStyleList","domSetStyle","styles","StyleDirective","DomDataBindAll","allDirectives","directiveName","BINDING","STATE_OBSERVABLE","DomDataBindElement","current","getDomDataBindMeta","scopeTemplate","addToState","stateSetter","setupState","_isSettingUp","stateGetter","addReactivityToState","getOwnPropertyDescriptors","isGetterSetter","getterSetter","valueInitializer","notifier","thisContext","contextStorage","isNotifying","generatePropGetterSetter","DomDataBindEleProto","memberToApply","dataBoundTemplates","optionsOrClassDescriptor","opt","applyDirectiveToClass","classDescriptor","memberName","elements","SOURCE_SETUP","SOURCE_STYLES","STATE","SOURCES","CACHE","fromCharCode","getStyleEle","cssCode","styleEle","type","Icon","_decorate","_initialize","_ComponentElement","F","static","iconUrl","reject","request","XMLHttpRequest","status","responseText","onerror","onabort","open","send","fontFaceCss","codepoint","code","parseInt","decorators","$icon","_handlePropChanges","_renderDone","iconSource","doSetup","getStyles","getIcon","_showIconElement","iconEle","TEMPLATE","boxicons","cdnUrl","iconInstance","fetchSvg","returnNewElement","handleReject","svgString","OFFICE_ICON_ELEMENT","ICON_TEMPLATE","IS_CODEPOINT","fromCodePoint","officeUiFabric","isIconLoaded","iconMap","iconAliases","IconClass","setupFont","getFontFaceCss","twemoji","getSvgImgNameFromCode","domToggleClass","toggle","ConfirmAction","hostStyles","_$confirm","_handleShowHideConfirm","_handleConfirm","_handlePropsChange","disabled","TodoInput","focus","TodoAction","TodoItem","_docEv","_id","_newDescription","showOnHoverStyles","_removeDocEv","_getDescription","noEdit","edit","displayView","_setupDocEv","editView","_emitSave","noCheck","done","TodoAdd","todoInputTagName","TodoList","todoItemTagName","todoAddTagName","newItem","title","todoData","TodoList_TodoList","TodoItem_TodoItem","TodoAdd_TodoAdd"],"mappings":"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","file":"todo-list-element.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TodoListElement\"] = factory();\n\telse\n\t\troot[\"TodoListElement\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","\n        var result = require(\"!!../../../../css-loader/index.js??ref--7-oneOf-1-1!./host.css?inline\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = (window.Map.Map = window.Map);","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","\n        var result = require(\"!!../../node_modules/css-loader/index.js??ref--7-oneOf-1-1!./show-on-hover.css?inline\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","module.exports = (window.WeakMap.WeakMap = window.WeakMap);","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = (window.Symbol.Symbol = window.Symbol);","module.exports = (window.Set.Set = window.Set);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    font-family: var(--theme-font-family, Arial);\\r\\n    color: var(--theme-color-fg, black);\\r\\n    font-size: var(--theme-font-size, 16px);\\r\\n}\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".show-on-hover {\\r\\n    opacity: 0;\\r\\n    transition: opacity 0.5s;\\r\\n}\\r\\n:host(:hover) .show-on-hover {\\r\\n    opacity: 0.9;\\r\\n}\", \"\"]);\n\n// exports\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const isNull                   = obj => toString(obj) === \"[object Null]\";\r\nexport const isUndefined              = obj => toString(obj) === \"[object Undefined]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const getPropertyDescriptor    = (value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n    return descriptor;\r\n};\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    objectDefineProperty(obj, prop, getPropertyDescriptor(value, getter, setter, configurable, enumerable, writable));\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\n// *** In a NodeJS env - set HTMLElement to an empty object ***\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (typeof HTMLElement === \"undefined\") {\r\n        global.HTMLElement = class {}; // eslint-disable-line\r\n        global.document = class {};\r\n    }\r\n    consoleWarn(\"DEPRECATION WARNING: DOM aliases exposed via '@purtuga/common/src/jsutils/runtime-aliases.js' no longer valid. Use '@purtuga/common/src/domutils/dom-runtime-aliases.js' instead\");\r\n}\r\n// *!*!*!*!*!      IMPORTANT      *!*!*!*!*!!*\r\n//      THESE ARE DEPRECATED AND MOVED TO\r\n//      src/domutils/dom-runtime-aliases.js\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);\r\nexport const isDocFragment = node => toString(node) === \"[object DocumentFragment]\";\r\n","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nfunction queueForNextTick(callback) {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n}\r\n\r\n/**\r\n * Queue a callback for next tick\r\n * @type {queueForNextTick}\r\n */\r\nnextTick.queue = queueForNextTick;\r\n\r\n//-----------------------------------------------------------[ EXPORTS ]---\r\nexport default nextTick;\r\nexport {\r\n    nextTick,\r\n    queueForNextTick\r\n}\r\n","/**\r\n * Check if the given `this` value matches its own Constructor's prototype, and\r\n * if so, throw an error.\r\n * Good to use with lazy properties that set themselves up on first access\r\n *\r\n * @param {Object} THIS\r\n * @throws\r\n */\r\nexport function throwIfThisIsPrototype(THIS) {\r\n    if (THIS.constructor && THIS === THIS.constructor.prototype) {\r\n        throw new Error(\"Can not be accessed directly on constructor.prototype!\");\r\n    }\r\n}","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","const LISTENER_STORAGE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny minimalist EventEmitter\r\n * @implements MinimalEventEmitter\r\n */\r\nexport class Ev {\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        /**\r\n         * @typedef {Function} EvOff\r\n         */\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @return {Map|Set}\r\n *  If called with no `evName`, then the entire store is returned (a `Map`)\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[LISTENER_STORAGE]) {\r\n        inst[LISTENER_STORAGE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[LISTENER_STORAGE];\r\n    }\r\n    if (!inst[LISTENER_STORAGE].has(evName)) {\r\n        inst[LISTENER_STORAGE].set(evName, new Set());\r\n    }\r\n    return inst[LISTENER_STORAGE].get(evName);\r\n}\r\n\r\n\r\n/**\r\n * Minimal EventEmitter interface provinding only the basics\r\n *\r\n * @interface MinimalEventEmitter\r\n */\r\n\r\n/**\r\n * Set an event listener\r\n * @function\r\n * @name MinimalEventEmitter#on\r\n * @param {String} evName\r\n * @param {Function} callback\r\n * @returns {EvOff}\r\n */\r\n\r\n/**\r\n * Emit an event\r\n *\r\n * @function\r\n * @name MinimalEventEmitter#emit\r\n * @param {String} evName\r\n * @param {*} data\r\n */\r\n\r\n/**\r\n * Clear the all the event listeners\r\n * @function\r\n * @name MinimalEventEmitter#clear\r\n */","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport dataStore from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport {Ev} from \"@purtuga/common/src/jsutils/Ev\"\r\nimport { isArray, objectKeys } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"@purtuga/common/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\n/**\r\n * Get the prop value from the possible HTML attributes (propName + aliases)\r\n *\r\n * @param ele\r\n * @param propDef\r\n * @returns {string}\r\n */\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            isCssScopingDone: false,\r\n            templateEle: null,\r\n            ev: new Ev(),\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false\r\n        };\r\n\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        const statePropsDef = state.propsDef = {};\r\n        const componentPropsDef = ComponentClass.propsDef;\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (componentPropsDef) {\r\n            objectKeys(componentPropsDef).forEach(propName => {\r\n                statePropsDef[propName] = componentPropsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(statePropsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, componentPropsDef[propName], { _isAlias: true });\r\n                    statePropsDef[propName].aliases.forEach(\r\n                        propNameAlias => !statePropsDef[propNameAlias] &&\r\n                                        (statePropsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            templateEle: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"@purtuga/common/src/jsutils/getGlobal\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {createElement, head, isString} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {getComponentClassState} from \"./utils.js\"\r\n\r\n//===========================================================================================\r\nexport const supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\nconst removeElement = ele => ele.parentNode.removeChild(ele);\r\n\r\n/**\r\n * if runtime env. supports shadowRoot\r\n * @returns {boolean}\r\n */\r\nexport function supportsNativeShadowDom() {\r\n    return (head.createShadowRoot || head.attachShadow) &&\r\n        (!supportsShadyCSS() || GLOBAL.ShadyCSS.nativeShadow)\r\n}\r\n\r\n/**\r\n * Scopes the CSS of a given template for the Component by using ShadyCSS.\r\n *\r\n * @param template\r\n * @param eleInstance\r\n */\r\nexport function scopeCss (template, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(template, eleInstance.constructor.tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Prepares the rendered content by ensuring that the the first time the Element is\r\n * rendered, that the styles are extracted and scoped on the page (vai ShadyCSS). From\r\n * that point forward, the rendered content will only have its element css classes scoped.\r\n *\r\n * @param renderedContent\r\n * @param componentInstance\r\n *\r\n * @return {HTMLElement|DocumentFragment}\r\n */\r\nexport function prepareRenderedContent(renderOutput, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        const isRenderOutputString = isString(renderOutput);\r\n        const ComponentClassState = getComponentClassState(eleInstance.constructor);\r\n        let {templateEle} = ComponentClassState;\r\n        let view;\r\n\r\n        // If Styles have not yet been scoped in the HEAD of the element for this CE Class,\r\n        // then do it now this occurs only once per Component.\r\n        if (!templateEle) {\r\n            ComponentClassState.templateEle = templateEle = createElement(\"template\");\r\n            if (isRenderOutputString || renderOutput.innerHTML) {\r\n                templateEle.innerHTML = renderOutput.innerHTML || renderOutput;\r\n            } else {\r\n                // Maybe its a DocumentFragment\r\n                templateEle.appendChild(renderOutput.cloneNode(true));\r\n            }\r\n            scopeCss(templateEle , eleInstance);\r\n        }\r\n\r\n        // If the input was a string, then get a document fragment out of it\r\n        if (isRenderOutputString) {\r\n            view = createElement(\"template\");\r\n            view.innerHTML = renderOutput;\r\n        } else {\r\n            view = renderOutput;\r\n        }\r\n\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        // FIXME: prepareTemplateDom now seems to assume/expect the input to be an instance HTMLElement - they are doing a getAttribute() on it.\r\n        // let view2;\r\n        // if (!view.content) {\r\n        //     view2 = view;\r\n        //     view = document.createElement(\"div\");\r\n        //     view.appendChild(view2);\r\n        //     view.content = view;\r\n        // }\r\n        //\r\n        // GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n        //\r\n        // // Remove <style> element\r\n        // domFind(view, \"style\").forEach(removeElement);\r\n        //\r\n        // if (view2) {\r\n        //     [].slice.call(view.childNodes).forEach(node => view2.appendChild(node));\r\n        //     view = view2;\r\n        // }\r\n\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        if (!view.content) { // FIXME: should use isTemplate()\r\n            view.content = view;\r\n        }\r\n\r\n        // FIXME: this is dangerous because it expects a certain internal implementation in prepareTemplateDom()\r\n        GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n\r\n        // TODO: any momoization can happen here?\r\n\r\n        // Remove <style> element\r\n        domFind(view.content || view, \"style\").forEach(removeElement);\r\n\r\n        if (isRenderOutputString) {\r\n            view = document.importNode(view.content, true);\r\n        }\r\n\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {nextTick} from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {\r\n    objectKeys,\r\n    defineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils.js\"\r\nimport {\r\n    styleComponentInstanceElement,\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom,\r\n    reStyleComponentInstanceSubtree\r\n} from \"./polyfill-support.js\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst PROPS_NOOP = Object.freeze(Object.create(null));\r\nconst EVENT_ANY = Symbol(\"ev.props.any\");\r\nlet lazySetupUnderway = false;\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nclass ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n    static propsDef = PROPS_NOOP;\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 0; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() {\r\n        // fixme: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.template is Deprecated! Use .render() method`);\r\n        }\r\n        return \"<div></div>\";\r\n    }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(/*eleInstance*/) {\r\n        // FIXME: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.renderTemplate is NO LONGER SUPPORTED! Use .render() method`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        lazySetupUnderway = true;\r\n\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n        const ev = getState(this).ev;\r\n        const notifyAnyListeners = () => ev.emit(EVENT_ANY);\r\n        notifyAnyListeners._for = this;\r\n        notifyAnyListeners._ev = EVENT_ANY;\r\n\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n                const notifyPropListeners = () => ev.emit(propName);\r\n\r\n                notifyPropListeners._for = this;\r\n                notifyPropListeners._ev = propName;\r\n\r\n                // FIXME: Can this be more efficient? create just one prop notifier funciton and store list of props in an outer-scoped array?\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                defineProperty(\r\n                    props,\r\n                    propName,\r\n                    undefined,\r\n                    function getProp () {\r\n                        return propValue;\r\n                    },\r\n                    newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n\r\n                        // Only schedule event notification is the component is mounted\r\n                        if (this.isMounted) {\r\n                            nextTick.queue(notifyPropListeners);\r\n                            nextTick.queue(notifyAnyListeners);\r\n                        }\r\n\r\n                        return propValue = newValue;\r\n                    },\r\n                    true,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n\r\n        defineProperty(this, \"props\", props, undefined, undefined, true, true, false);\r\n        lazySetupUnderway = false;\r\n\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if Component has all required props fulfilled\r\n     */\r\n    get hasRequiredProps() {\r\n        throwIfThisIsPrototype(this);\r\n        return objectKeys(this.constructor.propsDef)\r\n            .filter(propName => this.constructor.propsDef[propName].required)\r\n            .every(propName => !!this.props[propName]);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean indicating if component is connected to DOM\r\n     * @return {Boolean}\r\n     */\r\n    get isMounted() {\r\n        throwIfThisIsPrototype(this);\r\n        return getState(this).isMounted\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n        this.didDestroy();\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    /**\r\n     * Updates the component's DOM by running through the render lifecycle of:\r\n     *\r\n     *  `willRender()`\r\n     *  `render()`\r\n     *  `didRender()`\r\n     *\r\n     * This method probably should not be called directly. It is automatically\r\n     * called when props change\r\n     */\r\n    get update() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const _update = () => {\r\n            if (!this.isMounted) {\r\n                return;\r\n            }\r\n\r\n            const shouldRender = this.willRender();\r\n\r\n            if (\"boolean\" !== typeof shouldRender || shouldRender) {\r\n                this._setView(this.render());\r\n                this.didRender();\r\n            }\r\n        };\r\n\r\n        _update._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"update\", _update);\r\n        lazySetupUnderway = false;\r\n\r\n        return _update;\r\n    }\r\n\r\n    /**\r\n     * An instance bound method used to queue the render update cycle which is async (nextTick)\r\n     * @type Function\r\n     * @private\r\n     */\r\n    get queueUpdate() {\r\n        return this._queueUpdate;\r\n    }\r\n    get _queueUpdate() { // FIXME: remove this in favor of `queueUpdate()`\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const __queueUpdate = () => {\r\n            nextTick.queue(this.update);\r\n        };\r\n\r\n        __queueUpdate._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"_queueUpdate\", __queueUpdate);\r\n        lazySetupUnderway = false;\r\n\r\n        return __queueUpdate;\r\n    }\r\n\r\n    /**\r\n     * Handles the render output - which normally means flush it ot DOM.\r\n     * Override for different render libraries\r\n     *\r\n     * @protected\r\n     * @param renderOutput\r\n     */\r\n    _setView(renderOutput) {\r\n        let view = renderOutput;\r\n\r\n        // If ShadowDom NOT supported, then on first render, we prepare the template\r\n        // which means styles will get scoped using ShadyCSS.\r\n        if (!supportsNativeShadowDom() && !this._polyfillDone) {\r\n            this._polyfillDone = true;\r\n            view = prepareRenderedContent(renderOutput, this) || renderOutput;\r\n        }\r\n\r\n        // If it looks like html, then use innerHTML\r\n        if (\"string\" === typeof view) {\r\n            this.$ui.innerHTML = view;\r\n        } else {\r\n            this.$ui.textContent = \"\";\r\n            this.$ui.appendChild(view);\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            reStyleComponentInstanceSubtree(this);\r\n        }\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n    //--------------------------------------------------------------\r\n\r\n    /**\r\n     * Called to initialize the component. At this point `this.$ui` has been set\r\n     * (to either `shadowRoot` or `this`), but nothing has ben rendered.\r\n     */\r\n    didInit() {\r\n        // FIXME: delete after v2\r\n        if (\"init\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.init() is Deprecated! Use .didInit()`);\r\n            }\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was mounted (attached to DOM)\r\n     */\r\n    didMount() {\r\n        // FIXME: delete after v2\r\n        if (\"ready\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.ready() is Deprecated! Use .didMount()`);\r\n            }\r\n            this.ready();\r\n        }\r\n        // FIXME: delete after v2\r\n        if (\"mounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.mounted() is Deprecated! Use .didMount()`);\r\n            }\r\n\r\n            // mounted() {}\r\n            this.mounted(); // FIXME: remove post v2\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component's render function is about to be called. if a `Boolean` `false` is\r\n     * returned, `render()` will be canceled.\r\n     * @return {Boolean}\r\n     */\r\n    willRender() {}\r\n\r\n    /**\r\n     * Render the Component's content.\r\n     *\r\n     * __IMPORTANT__: Note that by default, this view handler (`_setView`) does not support\r\n     * dynamic styles in polyfilled environments. Styles will be scooped only on first render.\r\n     *\r\n     * @return {String|HTMLElement|DocumentFragment}\r\n     */\r\n    render(){ return `<span></span>`; }\r\n\r\n    /**\r\n     * Component has been rendered and dates flushed to DOM\r\n     */\r\n    didRender() {}\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    didUnmount() {\r\n        // FIXME: delete after v2\r\n        if (\"unmounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.unmounted() is Deprecated! Use .didUnmount()`);\r\n            }\r\n            this.unmounted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was destroyed (destroy callback were already called)\r\n     */\r\n    didDestroy() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} [data]\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {Function}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return getState(this).ev.on(propName || EVENT_ANY, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ NATIVE METHODS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const state = getState(this);\r\n\r\n        if (state.destroyQueued) {\r\n            clearTimeout(state.destroyQueued);\r\n            state.destroyQueued = null;\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            styleComponentInstanceElement(this);\r\n        }\r\n\r\n        state.isMounted = true;\r\n        this.didMount();\r\n        this.update();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n        }\r\n\r\n        this.didUnmount();\r\n    }\r\n}\r\n\r\n\r\nfunction setupComponent (component) {\r\n    const { useShadow, shadowMode } = component.constructor;\r\n    if (useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.onPropsChange(component.update);\r\n    component.didInit();\r\n}\r\n\r\n//=======================================================================================\r\n//                                                               MODULE EXPORTS\r\n//=======================================================================================\r\nexport default ComponentElement;\r\nexport { ComponentElement }\r\n","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport {defineProperty, removeAttribute, setAttribute } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype\"\r\nimport {getKebabCase, elementHasAttributeForProp} from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object|ComponentElement~PropDefinition} [options|Descriptor]\r\n *\r\n * @returns {Function|Descriptor}\r\n */\r\nexport function prop(options = {}) {\r\n    if (options.key && options.kind) {\r\n        return _propDecorator({}, options);\r\n    }\r\n    return _propDecorator.bind(null, options);\r\n}\r\n\r\nfunction _propDecorator(options, {key, initializer, descriptor}) {\r\n    const propDefinition = getPropSetup(\r\n        key,\r\n        initializer || descriptor.get,\r\n        descriptor.set,\r\n        options\r\n    );\r\n    const newDescriptor = getDecoratorDescriptor(key, key, propDefinition);\r\n\r\n    // Setup the aliases to proxy the values to the same `key`\r\n    if (propDefinition.aliases) {\r\n        newDescriptor.extras = propDefinition\r\n            .aliases\r\n            .filter(aliasName => aliasName !== key) // Skip the Key name, which is also in the list of aliases\r\n            .map(aliasName => getDecoratorDescriptor(aliasName, key));\r\n    }\r\n\r\n    return newDescriptor;\r\n\r\n    //--------------------------------------------------------------------\r\n    // typical Descriptor, for something done like:\r\n    //          @prop myTest = \"value here\"\r\n    //  {\r\n    //     \"kind\": \"field\",\r\n    //     \"key\": \"myTest\",\r\n    //     \"placement\": \"field\",\r\n    //     \"initializer\": function(){ return \"value here\"; },\r\n    //     \"descriptor\": {\r\n    //         \"configurable\": true,\r\n    //         \"writable\": true,\r\n    //         \"enumerable\": true\r\n    //     }\r\n    // }\r\n    //--------------------------------------------------------------------\r\n}\r\n\r\nfunction getDecoratorDescriptor(key, proxyToPropName, componentPropDefinition) {\r\n    const DecoratorDescriptor = {\r\n        key,\r\n        kind: \"method\",\r\n        placement: \"prototype\",\r\n        descriptor: {\r\n            configurable: true,\r\n            get() {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName];\r\n            },\r\n            set(newValue) {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName] = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (componentPropDefinition) {\r\n        DecoratorDescriptor.finisher = function (Klass) {\r\n            // Create Class \"propsDef\" that inherits from super class\r\n            if (!Klass.hasOwnProperty(\"propsDef\")) {\r\n                defineProperty(\r\n                    Klass,\r\n                    \"propsDef\",\r\n                    objectExtend(Object.create(null), Klass.propsDef)\r\n                );\r\n            }\r\n            Klass.propsDef[key] = componentPropDefinition;\r\n        };\r\n    }\r\n\r\n    return DecoratorDescriptor;\r\n}\r\n\r\n\r\n/**\r\n * A property definition\r\n *\r\n * @private\r\n *\r\n * @param name\r\n * @param {Function} initializer\r\n * @param {Function} validator\r\n * @param {Object} propDef\r\n *\r\n * @returns {ComponentElement~PropDefinition}\r\n */\r\nfunction getPropSetup(name, initializer, validator, propDef) {\r\n    /**\r\n     * A Class prop definition\r\n     *\r\n     * @typedef {Object} ComponentElement~PropDefinition\r\n     * @property {String} name              Then name of the prop\r\n     * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n     * @property {Boolean} required         Is the prop required\r\n     * @property {Boolean} boolean          Is the prop value meant to be a boolean (note: also forces `attr` to true)\r\n     * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n     * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n     * @property {Array<String>} aliases    An array of aliases for the prop, including the prop name itself\r\n     */\r\n    const propertyDefinition = objectExtend(\r\n        {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: initializer || NOOP,\r\n            filter: validator || NOOP,\r\n            aliases: [ name ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        },\r\n        propDef\r\n    );\r\n\r\n    // If this is a boolean, then force `attr` to `true`, and\r\n    // redefine default adn filter values\r\n    if (propertyDefinition.boolean) {\r\n        propertyDefinition.attr = true;\r\n        propertyDefinition.default = propertyDefinition.filter = function (newValue) {\r\n            const realHtmlPropValue = elementHasAttributeForProp(this, propertyDefinition);\r\n\r\n            // If called with a Boolean, then it must have been set via a instance prop,\r\n            // and thus its value takes precedence over HTML property. In this case, we\r\n            // reflect the value to the HTML prop - because in most cases, styles are\r\n            // driven boolean attributes\r\n            if (\"boolean\" === typeof newValue) {\r\n                if (realHtmlPropValue !== newValue) {\r\n                    if (newValue) {\r\n                        setAttribute(this, name, newValue);\r\n                    } else {\r\n                        removeAttribute(this, name);\r\n                    }\r\n                }\r\n                return newValue;\r\n            }\r\n\r\n            return realHtmlPropValue;\r\n        }\r\n    }\r\n\r\n    // Add name lowercase alias - if applicable\r\n    if (name.toLowerCase() !== name) {\r\n        propertyDefinition.aliases.push(name.toLowerCase());\r\n    }\r\n\r\n    // If the prop name has upper case letters, then its possible that it is\r\n    // defined as camelCase - create ka-bab alias.\r\n    if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n        propertyDefinition.aliases.push(getKebabCase(name));\r\n    }\r\n\r\n    return propertyDefinition;\r\n}\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\n/**\r\n * Binds the given method to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(options) {\r\n    if (options.key && options.kind) {\r\n        return _bound(options);\r\n    }\r\n    return _bound;\r\n}\r\n\r\nfunction _bound(decoratorDescriptor) {\r\n    const {kind, key, descriptor} = decoratorDescriptor;\r\n    if (kind === \"method\" && descriptor.value) {\r\n        let isDoingLazySetup = false; // Fuck you IE!\r\n        const method = descriptor.value;\r\n\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            throwIfThisIsPrototype(this);\r\n\r\n            if (isDoingLazySetup) {\r\n                return;\r\n            }\r\n            isDoingLazySetup = true;\r\n\r\n            const boundMethod = method.bind(this);\r\n            defineProperty(this, key, boundMethod);\r\n            isDoingLazySetup = false;\r\n\r\n            return boundMethod;\r\n        }\r\n    }\r\n\r\n    return decoratorDescriptor;\r\n\r\n    // {\r\n    //     \"kind\": \"method\",\r\n    //     \"key\": \"private\",\r\n    //     \"placement\": \"prototype\",\r\n    //     \"descriptor\": {\r\n    //         \"writable\": true,\r\n    //         \"configurable\": true,\r\n    //         \"enumerable\": false,\r\n    //         \"value\": function(){}\r\n    //     }\r\n    // }\r\n}\r\n","import {throwIfThisIsPrototype} from \"./throwIfThisIsPrototype.js\";\r\n\r\n\r\n//=================================================================================\r\nconst storage = new WeakMap();\r\nconst createObject = () => Object.create(null);\r\n\r\n/**\r\n * Generate a getter/setter function to be used `Object.defineProperty` that allows\r\n * for a callback to be executed when the prop's value changes.\r\n *\r\n * @param {String} key\r\n *\r\n * @param {Function} [valueInitializer]\r\n *  A callback whose return value will be used as the initial value for the prop.\r\n *  If this is defined, then `value` argument will be ignored.\r\n * @param {*} [value]\r\n *  The initial property value.\r\n * @param {Function} [notifier]\r\n *  A callback to be executed when the value changes\r\n * @param {*} [thisContext=this]\r\n *  The context for when calling `notifier`. Defaults to the object instance\r\n * @param {Array} [args=[]]\r\n *  Any argument to be passed on to the notifier\r\n * @returns {function(): any}\r\n *\r\n * @example\r\n *\r\n * const descriptor = { configurable: true };\r\n * descriptor.get = descriptor.set = generatePropGetterSetter(() => console.log(\"prop updated\"));\r\n * const obj = Object.create({}, { name: descriptor });\r\n *\r\n * obj.name = \"paul\"; // console output: prop updated\r\n */\r\nexport function generatePropGetterSetter (key, valueInitializer, value, notifier, thisContext, args = []) {\r\n    if (!key){\r\n        throw new TypeError(\"key is required\");\r\n    }\r\n\r\n    function getterSetter () {\r\n        throwIfThisIsPrototype(this);\r\n        let contextStorage;\r\n\r\n        if (!storage.has(this)) {\r\n            contextStorage = createObject();\r\n            contextStorage.isNotifying = false;\r\n            contextStorage.props = createObject();\r\n\r\n            storage.set(this, contextStorage);\r\n\r\n        } else {\r\n            contextStorage = storage.get(this);\r\n        }\r\n\r\n        if (!(key in contextStorage.props)) {\r\n            contextStorage.props[key] = valueInitializer ? valueInitializer() : value;\r\n        }\r\n\r\n        if (arguments.length && arguments[0] !== contextStorage.props[key]) {\r\n            contextStorage.props[key] = arguments[0];\r\n\r\n            if (notifier && !contextStorage.isNotifying) {\r\n                contextStorage.isNotifying = true;\r\n                try {\r\n                    notifier.call(thisContext || this, ...args);\r\n                } catch(e) {\r\n                    contextStorage.isNotifying = false;\r\n                    throw e;\r\n                }\r\n                contextStorage.isNotifying = false;\r\n            }\r\n        }\r\n\r\n        return contextStorage.props[key];\r\n    }\r\n    getterSetter.isGetterSetter = true;\r\n    return getterSetter;\r\n}\r\n","// Some of the code below was taken from from https://github.com/ericelliott/cuid/\r\n\r\n/**\r\n * Generates a unique id. This is really a CUID.\r\n *\r\n * @namespace uuid\r\n */\r\nvar\r\n    base    = 36,\r\n    counter = 1,\r\n    letter  = \"c\",\r\n    pad     = function(num, size) {\r\n        var s = \"000000000\" + num;\r\n        return s.substr(s.length-size);\r\n    },\r\n\r\n    globalCount = (function() {\r\n        var i, count = 0; // eslint-disable-line\r\n        for (i in window) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }()),\r\n\r\n    fingerprint = (function() {\r\n        return pad(\r\n            (navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + globalCount.toString(36),\r\n            4\r\n        );\r\n    }());\r\n\r\n\r\nvar uuid = Object.create(/** @lends uuid */{\r\n    generate: function(){\r\n        var\r\n            timestamp   = (new Date().getTime()).toString(base),\r\n            nextCounter = pad((counter++).toString(base), 4),\r\n            random      = 'xxxxxxxx'.replace(/[x]/g, function() {\r\n            // This code from: http://stackoverflow.com/a/2117523/471188\r\n                var v = Math.random()*16|0;\r\n                return v.toString(16);\r\n            });\r\n\r\n        return (letter + timestamp + nextCounter + fingerprint + random);\r\n\r\n    }\r\n});\r\n\r\nexport default uuid;\r\nexport { uuid };\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore.js\"\r\nimport {Map}        from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {\r\n    functionBindCall,\r\n    isObject,\r\n    isString,\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    consoleError,\r\n    functionBind\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {isTemplateElement} from \"@purtuga/common/src/domutils/isTemplateElement.js\"\r\n\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nlet counter = 1;\r\n\r\nexport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    isString\r\n};\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = functionBindCall;\r\nexport const isPureObject       = isObject;\r\nexport const removeChild        = functionBindCall(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = functionBind(DOCUMENT.createComment, DOCUMENT);\r\nexport const isTemplate         = isTemplateElement;\r\nexport const logError           = consoleError;\r\n\r\n\r\n/**\r\n * Create a Function to be used in retrieving a given value from a data structure\r\n * @param evalCode\r\n * @param name\r\n * @returns {*}\r\n */\r\nexport function createValueGetter(evalCode, name = \"runtime\") {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$DATA\", `\r\nwith ($DATA) {\r\n    if ($DATA.$data) {\r\n        with ($DATA.$data) {\r\n            return (${ evalCode });\r\n        }\r\n    } \r\n    return (${ evalCode });\r\n}\r\n//# sourceURL=valueGetter:${name}.${counter++}.js`);\r\n\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\n/**\r\n * Returns an array of attributes names found on a given HTML node\r\n *\r\n * @param {HTMLElement} node\r\n * @returns {Array}\r\n */\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}\r\n\r\n/**\r\n * Parses a directive string and returns an object with its values.\r\n * @param directiveString\r\n * @returns {{value: string, hasModifiers: boolean, modifiers: object}}\r\n */\r\nexport function parseDirectiveString(directiveString) {\r\n    const response = {\r\n        value: \"\",\r\n        hasModifiers: true,\r\n        modifiers: directiveString.split(/\\./)\r\n    };\r\n    response.value = response.modifiers.shift();\r\n    response.hasModifiers = Boolean(response.modifiers.length);\r\n    response.modifiers = response.modifiers.reduce((modifiers, key) => {\r\n        modifiers[key] = true;\r\n        return modifiers;\r\n    }, {});\r\n    return response;\r\n}","import {toString} from \"../jsutils/runtime-aliases.js\";\r\n\r\n/**\r\n * Returns a boolean indicating if provided element on input is a HTML Template element (like).\r\n *\r\n * @param {HTMLElement} ele\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isTemplateElement(ele) {\r\n    const eleToStringValue = toString(ele);\r\n    return eleToStringValue === \"[object HTMLTemplateElement]\" ||\r\n        (eleToStringValue === \"[object HTMLUnknownElement]\" && !!ele.content);\r\n}","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","/**\r\n * Safely remove a node from its parent. Check if node has a parent and if so,\r\n * then it removes it from that parent.\r\n *\r\n * @param {Node} childNode\r\n * @returns {Node}\r\n */\r\nexport function domRemoveChild(childNode) {\r\n    if (childNode && childNode.parentNode) {\r\n        childNode.parentNode.removeChild(childNode);\r\n    }\r\n    return childNode;\r\n}\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\";\r\nimport {PRIVATE} from \"../utils.js\";\r\n\r\n//============================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A Directive Node handler\r\n *\r\n * @extends Compose\r\n *\r\n * @param {Directive} directive Directive instance\r\n * @param {Node} node\r\n */\r\nexport class NodeHandler extends Compose {\r\n    init(directive, node, directives) {\r\n        this._directives = directives;\r\n        this._d = this._directive = directive;\r\n        this._n = this._node = node;\r\n    }\r\n\r\n    /**\r\n     * List of directives that were used during parsing of the template\r\n     * @name NodeHandler#_directives\r\n     * @type Array<Directive>\r\n     */\r\n\r\n    /**\r\n     * The Directive instance that is tied to this node handler\r\n     * @name NodeHandler#_directive\r\n     * @type Directive\r\n     * @protected\r\n     */\r\n\r\n    /**\r\n     * The Node associated with this node handler\r\n     * @name NodeHandler#_node\r\n     * @type Node\r\n     * @protected\r\n     */\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Template.\r\n     * (By default, it proxies to the Directive#render())\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Shoudl be overwritten to contain the logic as to how a new value (generated by the Directive's `render()`)\r\n     * should be applied to the live HTML. Should be overwritten.\r\n     *\r\n     * @param {*} newValue\r\n     */\r\n    update(/*newValue*/) {}// eslint-disable-line\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//===================================================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * The Class that will be used to initialize a new node handler for the directive\r\n     *\r\n     * @type NodeHandler\r\n     * @constructor\r\n     */\r\n    static NodeHandlerConstructor = NodeHandler;\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            /**\r\n             * Directive Node Handler state\r\n             *\r\n             * @typedef {Object} NodeHandlerState\r\n             *\r\n             * @property {*} data\r\n             * @property {*} value\r\n             * @property {Boolean} isQueued\r\n             * @property {Function} tracker\r\n             * @property {Function} update\r\n             */\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            // With use of observables, the tracker function get a `stopWatchingAll()` method\r\n            // which removes this tracker from all property dependency lists.\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        this.update(handler);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans the node by removing Directive specific attribute. By default, the `_attr`\r\n     * that was given to this constructor will be removed from the node.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    cleanNode(node) {\r\n        if (this._attr && node.nodeType !== 8 /* don't process comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a node handler for this Directive on the provided Node\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node, directives) {\r\n        this.cleanNode(node);\r\n        return new this.constructor.NodeHandlerConstructor(this, node, directives);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n","import {arraySlice} from \"./utils.js\";\r\n\r\n/**\r\n * Interface for a template instance.\r\n */\r\nexport class TemplateInstance {\r\n    /**\r\n     *\r\n     * @param {DocumentFragment} docFrag\r\n     * @param {Array<NodeHandler>} bindings\r\n     * @param {String} [templateId]\r\n     */\r\n    constructor(docFrag, bindings, templateId = \"\") {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n        this._childNodes = arraySlice(docFrag.childNodes, 0);\r\n        this.fromTemplateId = templateId;\r\n    }\r\n\r\n    /**\r\n     * Recovers the original nodes rendered from the template into\r\n     * the DocumentFragment\r\n     */\r\n    recover() {\r\n        this._childNodes.forEach(nodeEle => this._frag.appendChild(nodeEle));\r\n    }\r\n\r\n    /**\r\n     * Destroys all bindings of the Template\r\n     */\r\n    destroy() {\r\n        this.recover();\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets data on the Template by passing it to all directives to act on.\r\n     * @param data\r\n     */\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n","import {view} from \"./view.js\";\r\nimport {DOM_DATA_BIND_PROP} from \"./utils.js\";\r\nimport {TemplateInstance} from \"./TemplateInstance.js\";\r\nimport {applyBindingsToTemplateInstance, Template} from \"./Template.js\";\r\n\r\n\r\n//==========================================================================\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String|HTMLTemplateElement|Template} html\r\n * @param {Object} [data]\r\n * @param {Array<Directive>} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n *  a TemplateInstance class instance\r\n */\r\nexport function render(html, data, directives) {\r\n    const viewTemplate = html instanceof Template ? html : view(html, directives);\r\n    const response = document.importNode(viewTemplate.ele.content, true);\r\n\r\n    response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n        response,\r\n        applyBindingsToTemplateInstance(response, viewTemplate._bindings, viewTemplate._directives),\r\n        viewTemplate.id\r\n    );\r\n    response[DOM_DATA_BIND_PROP].setData(data);\r\n    return response;\r\n}\r\n\r\nexport default render;\r\n","import {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {domRemoveChild} from \"@purtuga/common/src/domutils/domRemoveChild.js\"\r\nimport {\r\n    isUndefined,\r\n    isNull,\r\n    isDocFragment\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"../directives/Directive.js\"\r\nimport {\r\n    UUID,\r\n    PRIVATE,\r\n    createTextNode,\r\n    createValueGetter,\r\n    createComment,\r\n    arraySlice\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"../directives/NodeHandler.js\";\r\nimport {Template} from \"../Template.js\";\r\nimport {render} from \"../render.js\";\r\n\r\n//===========================================================\r\nconst ID = \"text.binding\";\r\nconst isAttached = node => !!node.parentNode;\r\n\r\nclass TextBindingNodeHandler extends NodeHandler {\r\n    init(...args) {\r\n        super.init(...args);\r\n\r\n        let node = this._node;\r\n\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements.\r\n        // If that is the case here, then use that HTMLComment as a placeholder\r\n        // and create a \"real\" textNode for the content\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            this._placeholderEle = node;\r\n            this._placeholderEle.data = ID;\r\n            this._node = domInsertBefore(createTextNode(\"\"), this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n\r\n        // If no placeholder element yet, create it now\r\n        if (!this._placeholderEle) {\r\n            this._placeholderEle = createComment(ID);\r\n        }\r\n\r\n        this._externalNodes = null; // Array\r\n        this._template = null;\r\n        this._templateInst = null;\r\n    }\r\n\r\n    update(newValue) {\r\n        // Null and Undefined values\r\n        if (isNull(newValue) || isUndefined(newValue)) {\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            return;\r\n        }\r\n\r\n        // Is it a Template?\r\n        if (newValue instanceof Template) {\r\n            const data = PRIVATE.get(this).data;\r\n            if (this._template && this._template.id === newValue.id) {\r\n                this._templateInst.DomDataBind.setData(data);\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this._template = newValue;\r\n            this._templateInst = render(newValue, data, this._directives);\r\n            domInsertBefore(this._templateInst, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // A regular HTML node(s)\r\n        if (newValue instanceof Node) {\r\n            // Is it already displayed here? - then do nothing\r\n            if (this.isCurrentExternal(newValue)) {\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this.storeExternals(newValue);\r\n            domInsertBefore(newValue, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // ElSE, handle text content (or something can be stringified (toString))\r\n        if (!isAttached(this._node)) {\r\n            this.clear();\r\n            domInsertBefore(this._node, this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n        if (newValue !== this._node.nodeValue) {\r\n            this._node.nodeValue = newValue;\r\n        }\r\n    }\r\n\r\n    storeExternals(nodeEle) {\r\n        if (this._externalNodes) {\r\n            this.removeExternals();\r\n        }\r\n        this._externalNodes = isDocFragment(nodeEle) ? arraySlice(nodeEle.childNodes, 0) : [ nodeEle ];\r\n    }\r\n\r\n    removeExternals() {\r\n        if (this._externalNodes) {\r\n            for (let i = 0, t = this._externalNodes.length; i < t; i++) {\r\n                domRemoveChild(this._externalNodes[i]);\r\n            }\r\n            this._externalNodes = null;\r\n        }\r\n    }\r\n\r\n    isCurrentExternal(nodeEle) {\r\n        return this._externalNodes &&\r\n            (\r\n                (\r\n                    !isDocFragment(nodeEle) &&\r\n                    this._externalNodes.length === 1 &&\r\n                    this._externalNodes[0] === nodeEle\r\n                ) ||\r\n                arraySlice(nodeEle).every((newNodeEle, i) => newNodeEle === this._externalNodes[i])\r\n            );\r\n    }\r\n\r\n    destroyTemplateView() {\r\n        if (this._templateInst) {\r\n            this._templateInst.DomDataBind.destroy();\r\n            this._templateInst = this._template = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.removeExternals();\r\n        this.destroyTemplateView();\r\n        this._node.nodeValue = \"\";\r\n    }\r\n\r\n    setPlaceholder() {\r\n        if (!isAttached(this._placeholderEle)) {\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            domRemoveChild(this._node);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.clear();\r\n    }\r\n}\r\n\r\nexport class TextBinding extends Directive {\r\n    static NodeHandlerConstructor = TextBindingNodeHandler;\r\n\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText, ID);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {uuid} from \"@purtuga/common/src/jsutils/uuid.js\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError,\r\n    createElement,\r\n    isTemplate\r\n} from \"./utils.js\"\r\nimport TextBinding from \"./bindings/text-binding.js\"\r\n\r\n\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n// FIXME: use insertBefore() alias in several places below\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this.id = uuid.generate();\r\n\r\n        if (!isTemplate(html)) {\r\n            this.ele = createElement(\"template\");\r\n            this.ele.innerHTML = html;\r\n        } else {\r\n            this.ele = html;\r\n        }\r\n\r\n        this._directives = directives;\r\n\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            // DEV MODE:: warn about directive positioning\r\n            if (directives.length) {\r\n                const directivesPosition = directives.reduce(function(positions, Directive, index){\r\n                    positions[Directive.name] = index;\r\n                    positions[`has${Directive.name}`] = true;\r\n                    return positions;\r\n                }, {});\r\n\r\n                if (directivesPosition.hasEachDirective && directivesPosition.EachDirective !== 0) {\r\n                    console.warn(`DomDataBind: 'EachDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                }\r\n\r\n                if (!directivesPosition.hasEachDirective && directivesPosition.hasIfDirective) {\r\n                    if (directivesPosition.hasEachDirective && directivesPosition.IfDirective !== 1) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 1 (right after 'EachDirective')!`); // eslint-disable-line\r\n                    } else if (directivesPosition.IfDirective !== 0) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._bindings = getBindingFor(this.ele.content, directives);\r\n    }\r\n\r\n    /**\r\n     * The template unique id\r\n     * @name Template#id\r\n     * @type {String}\r\n     */\r\n\r\n    /**\r\n     * The HTMLTemplateElement\r\n     * @name Template#ele\r\n     * @type {HTMLTemplateElement}\r\n     */\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    // FIXME: convert to singleton function\r\n    //          Arguments should be:\r\n    //                  Directive, domEle, eleToBindings, ignoreChildren\r\n    //          Returns a boolean\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    // FIXME: convert to singleton Function\r\n    //          Arguments needed:\r\n    //              child, eleToBindings,\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FIXME: convert to for() loop - Perf!\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n    // FIXME: use for loop here.\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\n","import {Map} from \"@purtuga/common/src/jsutils/Map.js\";\r\nimport Template from \"./Template.js\"\r\nimport {isString} from \"./utils.js\";\r\nimport {isTemplate} from \"./utils.js\";\r\n\r\n\r\n//==========================================================================\r\n// Keeps a map between `html string` and `Template` instance\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Create a UI view template for the given html string. Returned view (Template) are cached (memoized)\r\n * and thus a previously view template will just return the previous Template instance\r\n *\r\n * @param {String|HTMLTemplateElement} html\r\n * @param {Array<Directive>} directives\r\n *\r\n * @returns {Template}\r\n */\r\nexport function view(html, directives = view.directives || []) {\r\n    const isHtmlString = isString(html);\r\n    const cacheKey = isHtmlString ? html : html.innerHTML;\r\n\r\n    if (!hasTemplate(cacheKey)) {\r\n        TEMPLATES.set(\r\n            cacheKey,\r\n            new Template(html, directives)\r\n        );\r\n    }\r\n\r\n    // DEVELOPMENT MODE (is removed during webpack build)\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (!isString(html) && !isTemplate(html)) {\r\n            console.warn(`dom-data-bind.view(): 'html' argument must be either String or HTMLTemplateElement!`); //eslint-disable-line\r\n        }\r\n    }\r\n\r\n    return TEMPLATES.get(cacheKey);\r\n}\r\n\r\n/**\r\n * A list of directives that might be used in views. Used as the default value to the\r\n * `directives` input argument of `view()`.\r\n *\r\n * @type {Array<Directive>>|null}\r\n */\r\nview.directives = null;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n *\r\n * @type {function(*=): boolean}\r\n */\r\nview.has = hasTemplate;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n * @param html\r\n * @returns {boolean}\r\n */\r\nfunction hasTemplate(html) {\r\n    return TEMPLATES.has(html);\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils.js\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template.js\"\r\nimport { render } from \"./render.js\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be view and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._bindings;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            const state = PRIVATE.get(this);\r\n            const _htmlAttr = this._directive._htmlAttr;\r\n\r\n            if (this._directive.constructor._isProp) {\r\n                if (newValue !== state.value) {\r\n                    this._node[_htmlAttr] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                if (newValue && state.value !== newValue) {\r\n                    setAttribute(this._node, _htmlAttr, newValue);\r\n                }\r\n                else if (state.value && !newValue) {\r\n                    removeAttribute(this._node, _htmlAttr);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static _matches = attrRegExp;\r\n\r\n    static _isProp = false;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"attr\");\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass.js\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass.js\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static NodeHandlerConstructor = class ClassDirectiveNodeHandler extends NodeHandler {\r\n        update(newClasses) {\r\n            const { _node: node } = this;\r\n            const oldClasses = PRIVATE.get(this).value || {};\r\n\r\n            Object.keys(newClasses)\r\n                .concat(Object.keys(oldClasses))\r\n                .forEach(className => {\r\n                    if (newClasses[className] && !domHasClass(node, className)) {\r\n                        domAddClass(node, className);\r\n                    }\r\n                    else if (!newClasses[className] && domHasClass(node, className)) {\r\n                        domRemoveClass(node, className);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"class\");\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n","import {Map} from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {\r\n    arraySplice,\r\n    isArray,\r\n    objectKeys\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"./Directive.js\"\r\nimport {\r\n    arrayForEach,\r\n    createComment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\n\r\nimport {render} from \"../render.js\";\r\nimport {view} from \"../view.js\";\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst EACH = Symbol(\"directive.each.setup\");\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst destroyBinder = binder => binder && binder._destroy();\r\nconst defaultRowKey = data => data;\r\nconst isEmptyList   = list => (isArray(list) && !list.length) || (isPureObject(list) && !objectKeys(list).length);\r\n\r\nclass EachDirectiveNodeHandler extends NodeHandler {\r\n\r\n    binders = [];\r\n\r\n    bindersByKey = new Map();\r\n\r\n    listIterator = () => this._directive.iterateOverList(this, PRIVATE.get(this).value);\r\n\r\n    init(directive, node, directives) {\r\n        super.init(directive, node, directives);\r\n        this._placeholderEle = createComment(\"directive.each\");\r\n        this._isSoleChild = hasDedicatedParent(this._node);\r\n\r\n        // create the template for the row content, which is stored in the Comment node data\r\n        this._viewTemplate = view(node.data, directives);\r\n        if (!this._viewTemplate[EACH]) {\r\n            setupViewTemplate(this._viewTemplate);\r\n        }\r\n\r\n        domInsertBefore(this._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n    }\r\n\r\n\r\n    update(newList) {\r\n        const state = PRIVATE.get(this);\r\n\r\n        if (newList !== state.value) {\r\n            state.value = null;\r\n\r\n            if (this.listIterator.stopWatchingAll) {\r\n                this.listIterator.stopWatchingAll();\r\n            }\r\n        }\r\n\r\n        if (!newList) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n            return;\r\n        }\r\n\r\n        state.value = newList;\r\n\r\n        if (isEmptyList(newList) && this.binders) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n        }\r\n        else {\r\n            this.listIterator();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Support for Observables\r\n        if (this.listIterator.stopWatchingAll) {\r\n            this.listIterator.stopWatchingAll();\r\n        }\r\n        this.bindersByKey.clear();\r\n        this._directive.destroyChildBinders(this.binders, this);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static NodeHandlerConstructor = EachDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"), \"each\");\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) { // Supper fast way to just clear the UI\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        /** @type NodeHandlerState */\r\n        const state = PRIVATE.get(handler);\r\n        let isDataArray             = isArray(newData);\r\n        let iterationDataList;\r\n\r\n\r\n        if (isDataArray) {\r\n            isDataArray = true;\r\n            iterationDataList = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            iterationDataList = objectKeys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const currentBinders        = handler.binders;\r\n        const binderToBeDestroyed   = new Map();    // Will be recycled\r\n        const totalItems            = iterationDataList.length;\r\n        const { usesKey, getKey }   = handler._viewTemplate[EACH];\r\n\r\n        // Loop through each piece of data and build a DOM binder for it.\r\n        // The data should be in sync with `currentBinders`\r\n        for (let i = 0; i < totalItems; i++) {\r\n            let rowData = { // FIXME: can this object creation be avoided? For Arrays - it should be possible. Objects - not sure.\r\n                $root: state.data.$root || state.data,\r\n                $parent: state.data,\r\n                $data: state.data.$data || state.data\r\n            };\r\n\r\n            // Adjust the rowData to have the `key` and/or `value` and `index` as top level items\r\n            // These are added to the rowData object just created above.\r\n            if (isDataArray) {\r\n                this.getDataForIteration([ iterationDataList[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ iterationDataList[i] ], iterationDataList[i], i ], rowData);\r\n            }\r\n\r\n            const rowKey = getKey(\r\n                usesKey\r\n                    ? rowData                               // => Use rowData created above - getKey() will run a value getter on it.\r\n                    : isDataArray\r\n                        ? iterationDataList[i]              // => Use the object from the newData\r\n                        : newData[ iterationDataList[i] ]   // => Use the Object key\r\n            );\r\n\r\n            // If a binder currently exists, then see if it is the one previously\r\n            // created for this row's data\r\n            if (currentBinders[i] && currentBinders[i]._loop.rowKey === rowKey) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // If there is a binder at the current position, then its not the one need.\r\n            // move it to the `to be destroyed` list.\r\n            if (currentBinders[i]) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                binderToBeDestroyed.set(\r\n                    currentBinders[i]._loop.rowKey,\r\n                    currentBinders[i]\r\n                );\r\n                currentBinders[i] = null;\r\n            }\r\n\r\n            // Do we have a rowBinder for this data item in the existing list,\r\n            // but perhaps at a different location? Get it and move it to the new position.\r\n            // Old position in the existing array is set to null (avoids mutating array)\r\n            let binder = handler.bindersByKey.get(rowKey);\r\n\r\n            if (binder) {\r\n                if (binder._loop.pos !== null && currentBinders[binder._loop.pos] === binder) {\r\n                    currentBinders[binder._loop.pos] = null;\r\n                }\r\n            } else {\r\n                binder = binderToBeDestroyed.get(rowKey);\r\n\r\n                if (binder) {\r\n                    binderToBeDestroyed.delete(rowKey);\r\n                }\r\n            }\r\n\r\n            if (binder) {\r\n                currentBinders[i] = binder;\r\n                binder._loop.pos = i;\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // Create new binder\r\n            // First check if we can recycle one that is tagged to be destroyed.\r\n            // if not, then create a new one.\r\n            if (binderToBeDestroyed.size) {\r\n                const [recycleBinderKey, recycleBinder] = binderToBeDestroyed.entries().next().value;\r\n                binder = recycleBinder;\r\n                binder[DOM_DATA_BIND_PROP].setData(rowData);\r\n                binderToBeDestroyed.delete(recycleBinderKey);\r\n                binder._loop.rowKey = rowKey;\r\n                binder._loop.pos = i;\r\n            } else {\r\n                binder = render(handler._viewTemplate, rowData, handler._directives);\r\n                binder._destroy = destroyRowElement;\r\n                binder._handler = handler; // needed by destroyRowElement()\r\n                binder._loop  = { rowKey, pos: i };\r\n            }\r\n\r\n            currentBinders[i] = binder;\r\n            handler.bindersByKey.set(rowKey, binder);\r\n            positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n        }\r\n\r\n        // Destroy binders that were not used\r\n        if (binderToBeDestroyed.size) {\r\n            arrayForEach(binderToBeDestroyed.values(), destroyBinder);\r\n            binderToBeDestroyed.clear();\r\n        }\r\n\r\n        // remove any left over items in currentBinders where is no longer part of newData\r\n        if (totalItems < currentBinders.length) {\r\n            arrayForEach(arraySplice(currentBinders, totalItems), destroyBinder);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupViewTemplate (viewTemplate) {\r\n    if (!viewTemplate[EACH]) {\r\n        viewTemplate[EACH] = {\r\n            usesKey: false,\r\n            getKey: defaultRowKey\r\n        };\r\n        const firstChildNode = viewTemplate.ele.content.firstChild;\r\n\r\n        if (\r\n            firstChildNode &&\r\n            firstChildNode.hasAttribute &&\r\n            hasAttribute(firstChildNode, KEY_DIRECTIVE)\r\n        ) {\r\n            viewTemplate[EACH].usesKey = true;\r\n            viewTemplate[EACH].getKey = createValueGetter(getAttribute(firstChildNode, KEY_DIRECTIVE), \"each.key\");\r\n            removeAttribute(firstChildNode, KEY_DIRECTIVE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction positionRowInDom(currentBinders, binderIndex, defaultInsertMarkerElement) {\r\n    const binder = currentBinders[binderIndex];\r\n\r\n    // Get all original nodes from binder back to the DocumentFragment\r\n    binder[DOM_DATA_BIND_PROP].recover();\r\n\r\n    // If we have a binder after this one, then do an insertBefore using the first node of the nextSibling\r\n    if (currentBinders[binderIndex + 1]) {\r\n        domInsertBefore(binder, currentBinders[binderIndex + 1][DOM_DATA_BIND_PROP]._childNodes[0]);\r\n    } else {\r\n        // Just place the binder before the marker\r\n        domInsertBefore(binder, defaultInsertMarkerElement);\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // remove all elements/nodes of this row from DOM\r\n    this[DOM_DATA_BIND_PROP].recover();\r\n\r\n    if (this._loop.rowKey) {\r\n        this._handler.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue === PRIVATE.get(this).value) {\r\n                return;\r\n            }\r\n\r\n            this._node.innerHTML = newValue;\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"html\");\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import Directive    from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    hasAttribute,\r\n    createComment,\r\n    removeChild,\r\n    createValueGetter } from \"../utils.js\"\r\nimport {render} from \"../render.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n\r\n        _renderedEle = null;\r\n\r\n        _renderTemplate = this._node.data;\r\n\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._placeholderEle = createComment(\"directive.if\");\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            removeChild(this._node.parentNode, this._node);\r\n        }\r\n        update(showElement) {\r\n            const state = PRIVATE.get(this);\r\n\r\n            // If there is no change in Element visibility, then only update its data.\r\n            if (state.value === showElement) {\r\n                if (this._renderedEle) {\r\n                    this._renderedEle[DOM_DATA_BIND_PROP].setData(state.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (showElement && !this._renderedEle) {\r\n                this._renderedEle = render(this._renderTemplate, state.data, this._directives);\r\n                domInsertBefore(this._renderedEle, this._placeholderEle);\r\n            } else if (!showElement)  {\r\n                this.teardown();\r\n            }\r\n        }\r\n\r\n        teardown() {\r\n            if (this._renderedEle) {\r\n                this._renderedEle[DOM_DATA_BIND_PROP].recover();\r\n                this._renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n                this._renderedEle = null;\r\n            }\r\n        }\r\n\r\n        destroy() {\r\n            this.teardown();\r\n            super.destroy();\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"if\");\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport Directive            from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError,\r\n    parseDirectiveString\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {objectKeys} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\nconst isNumber = /^\\d+$/;\r\nconst keyAliases = {\r\n    \"13\": \"enter\",\r\n    \"27\": \"esc\",\r\n    \"9\":  \"tab\",\r\n    \"46\": \"delete\",\r\n    \"32\": \"space\",\r\n    \"38\": \"up\",\r\n    \"40\": \"down\",\r\n    \"37\": \"left\",\r\n    \"39\": \"right\"\r\n};\r\nconst keyCodesAliases = Object.values(keyAliases);\r\n\r\nclass OnDirectiveNodeHandler extends NodeHandler {\r\n\r\n    init(...args) {\r\n        super.init(...args);\r\n        this.setup();\r\n    }\r\n\r\n    handleEvent(domEv) {\r\n        const {hasModifiers, modifiers} = this._directive._info;\r\n        const whichKey = domEv.which;\r\n\r\n        // If this is a Keyboard event and the directive has modifiers that filters\r\n        // out the type of events to which the callback should be invoked, then\r\n        // only proceed if they match\r\n        if (\r\n            this._directive._filter &&\r\n            domEv instanceof KeyboardEvent &&\r\n            !modifiers[whichKey] &&\r\n            !modifiers[keyAliases[whichKey]]\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const state = PRIVATE.get(this);\r\n\r\n        let tokenValue;\r\n        let returnValue;\r\n        state.data.$ev = domEv;\r\n\r\n        // The call to the token value getter is done with the context of the HTML Node.\r\n        try {\r\n            tokenValue = this._directive._tokenValueGetter.call(this._node, state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            returnValue = tokenValue.call(this._node, domEv);\r\n        }\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            // DOM EventHandler interface: object having a `handleEvent` method\r\n            returnValue = tokenValue.handleEvent(domEv);\r\n        }\r\n\r\n        // Handle post callback modifiers\r\n        if (hasModifiers) {\r\n            if (modifiers.once) {\r\n                this.teardown();\r\n            }\r\n            if (modifiers.stop) {\r\n                domEv.stopPropagation();\r\n            }\r\n            if (modifiers.prevent) {\r\n                domEv.preventDefault();\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    setup() {\r\n        this._evListener = domAddEventListener(\r\n            this._node,\r\n            this._directive._eventName,\r\n            this\r\n        );\r\n    }\r\n\r\n    teardown() {\r\n        if (this._evListener) {\r\n            this._evListener.remove();\r\n            this._evListener = null;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.teardown();\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nexport class OnDirective extends Directive {\r\n    static NodeHandlerConstructor = OnDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._info              = parseDirectiveString((new RegExp(matchesDirective)).exec(directiveAttr)[1]);\r\n        this._eventName         = this._info.value;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"on\");\r\n\r\n        // Set the flag that indicates there are Events should be filtered\r\n        const modifiers = this._info.modifiers;\r\n        this._filter = objectKeys(modifiers).some(modifier => (\r\n            keyCodesAliases.indexOf(modifier) !== -1 || isNumber.test(modifier)\r\n        ));\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import AttrDirective from \"./attr-directive.js\"\r\n\r\n//==========================================================\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","import Directive        from \"./Directive.js\"\r\nimport {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._origDisplayStyle = this._node.style.display || \"\";\r\n        }\r\n        update(newValue) {\r\n            const eleStyleList = this._node.style;\r\n\r\n            if (newValue) {\r\n                eleStyleList.display = this._origDisplayStyle;\r\n            }\r\n            else if (eleStyleList.display !== HIDDEN)  {\r\n                eleStyleList.display = HIDDEN;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"show\");\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","/**\r\n * Sets styles on an element\r\n *\r\n * @function domSetStyle\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} styles\r\n *\r\n * @example\r\n *\r\n * domSetStyle(document.body, {\"background-color\", \"yellow\"});\r\n */\r\nexport function domSetStyle(el, styles){\r\n    if (!el || typeof styles !== \"object\"){\r\n        return;\r\n    }\r\n    Object.keys(styles).forEach(function(prop){\r\n        el.style[prop] = styles[prop];\r\n    });\r\n}\r\nexport default domSetStyle;\r\n","import {\r\n    createValueGetter,\r\n    hasAttribute\r\n}   from \"../utils.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domSetStyle} from \"@purtuga/common/src/domutils/domSetStyle.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            domSetStyle(this._node, newValue);\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"style\");\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import {DomDataBind}        from \"./DomDataBind.js\"\r\nimport {render}             from \"./render.js\"\r\nimport {view}               from \"./view.js\";\r\nimport {Directive}          from \"./directives/Directive.js\"\r\nimport * as directives   from \"./directives/index.js\";\r\n\r\n//----------------------------------------------------------------------\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nconst allDirectives = [directives.EachDirective, directives.IfDirective];\r\n\r\nObject.keys(directives).forEach(directiveName => {\r\n    if (allDirectives.indexOf(directives[directiveName]) === -1) {\r\n        allDirectives.push(directives[directiveName]);\r\n    }\r\n});\r\n\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport * from \"./directives/index.js\"\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    view,\r\n    allDirectives,\r\n    directives,\r\n    Directive\r\n};","//------------------------------------------------------------------------\r\n//\r\n//  NOTE:   THIS MODULE IS NOT INCLUDED IN A BUILD.\r\n//          TO USE IT, YOU MUST FIRST INSTALL ComponentElement\r\n//          AND THEN IMPORT THIS DIRECTLY FROM SOURCE\r\n//\r\n//------------------------------------------------------------------------\r\nimport {ComponentElement} from \"@purtuga/component-element/src/ComponentElement.js\"\r\nimport {\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom,\r\n    reStyleComponentInstanceSubtree\r\n} from \"@purtuga/component-element/src/polyfill-support.js\"\r\nimport {objectExtend} from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {createElement, defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport {generatePropGetterSetter} from \"@purtuga/common/src/jsutils/generatePropGetterSetter.js\";\r\nimport {view} from \"./view.js\"\r\nimport {render} from \"./render.js\"\r\n\r\n\r\n//==============================================================================\r\nexport * from \"@purtuga/component-element\"\r\nexport * from \"./index\"\r\n\r\nconst BINDING = Symbol(\"dom-data-bind\");\r\nconst STATE_OBSERVABLE = \"__$STATE$\";\r\nconst SHADOW_DOM_SUPPORTED = supportsNativeShadowDom();\r\n\r\n/**\r\n * Base class around ComponentElement that allows for `template` to\r\n * take advantage of DomDataBind as its templating engine.\r\n *\r\n * Private state data can be assigned to the `this.state` property (an `Object`),\r\n * which will automatically trigger `render()` to be executed if any of its shallow\r\n * properties change.\r\n *\r\n * Render templates will be given the entire component instance as input (`data`) for\r\n * rendering, thus the entire component members (like `props` and `state`) will be available\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @example\r\n *\r\n * import {DomDataBindElement} from \"@purtuga/dom-data-bind/src/DomDataBindElement.js\"\r\n *\r\n * export class TestComponent extends DomDataBindElement {\r\n *      static tagName = \"test-component\";\r\n *\r\n *      didInit() {\r\n *          this.state = {\r\n *              title: \"test\"\r\n *          };\r\n *      }\r\n *\r\n *      willRender() {\r\n *          return this._templateDone;\r\n *      }\r\n *\r\n *      render() {\r\n *          this._templateDone = true; // will cancel future .render()'s\r\n *         return `<h1>{{state.title}}</h1>`;\r\n *      }\r\n * }\r\n *\r\n */\r\nexport class DomDataBindElement extends ComponentElement {\r\n\r\n    /**\r\n     * The list of directives that will be used when rendering the template.\r\n     * By default, no directives are defined\r\n     * @type {Array}\r\n     */\r\n    static directives = [];\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    _setView(renderOutput) {\r\n        // the view template is rendered with `this` as the `data` argument\r\n\r\n\r\n        // FIXME: needs to handle DOMElements + DocumentFragments?\r\n\r\n        const binding = getDomDataBindMeta(this);\r\n\r\n        if (!SHADOW_DOM_SUPPORTED) {\r\n            // renderOutput, before being recreated as a View Template, MUST\r\n            // be processed by ShadyCSS - so that the resulting string has scoped DOM.\r\n            // This is needed because DomDataBind will manipulate the html for the\r\n            // template and may actually remove nodes (ex. if, each directives) that\r\n            // are inserted/added dynamically later.\r\n            const scopeTemplate = createElement(\"template\");\r\n            scopeTemplate.innerHTML = renderOutput;\r\n            prepareRenderedContent(scopeTemplate, this);\r\n            renderOutput = scopeTemplate.innerHTML;\r\n        }\r\n\r\n        let viewTemplate = view(renderOutput, this.constructor.directives);\r\n\r\n        // If it is the same as the template currently displayed - exit; Nothing to do.\r\n        if (binding.current && binding.current.DomDataBind.fromTemplateId === viewTemplate.id) {\r\n            binding.current.DomDataBind.setData(this);\r\n            reStyleComponentInstanceSubtree(this);\r\n            return;\r\n        }\r\n\r\n        if (binding.current) {\r\n            binding.current.DomDataBind.destroy();\r\n        }\r\n\r\n        // Create a new instance of this template\r\n        binding.current = render(viewTemplate, this, this.constructor.directives);\r\n\r\n        this.$ui.textContent = \"\";\r\n        this.$ui.appendChild(binding.current);\r\n\r\n        if (!SHADOW_DOM_SUPPORTED) {\r\n            reStyleComponentInstanceSubtree(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds the members of a given object ot the state object. Use this when wanting to\r\n     * add additional props to state after it has already been initialized\r\n     *\r\n     * @param {Object} obj\r\n     */\r\n    addToState(obj) {\r\n        return stateSetter.call(this, obj);\r\n    }\r\n\r\n    /**\r\n     * Element's private state. Object is an observable structure.\r\n     *\r\n     * @property DomDataBindElement#state\r\n     * @type {Object}\r\n     */\r\n    get state() {\r\n        throwIfThisIsPrototype(this);\r\n        return setupState(this)\r\n    }\r\n    set state(data) {\r\n        throwIfThisIsPrototype(this);\r\n        return setupState(this, data);\r\n    }\r\n}\r\n\r\nfunction getDomDataBindMeta(instance) {\r\n    if (!instance[BINDING]) {\r\n        instance[BINDING] = {\r\n            current: null\r\n        };\r\n    }\r\n    return instance[BINDING];\r\n}\r\n\r\nfunction setupState(instance, data = {}) {\r\n    if (instance._isSettingUp) {\r\n        return;\r\n    }\r\n    instance._isSettingUp = true;\r\n    defineProperty(instance, STATE_OBSERVABLE, data);\r\n    defineProperty(instance, \"state\", undefined, stateGetter, stateSetter);\r\n    addReactivityToState(instance);\r\n    delete instance._isSettingUp;\r\n    return data;\r\n}\r\n\r\nfunction stateGetter() {\r\n    return this[STATE_OBSERVABLE];\r\n}\r\n\r\nfunction stateSetter(data) {\r\n    objectExtend(true, this[STATE_OBSERVABLE], data);\r\n    addReactivityToState(this);\r\n    return this[STATE_OBSERVABLE];\r\n}\r\n\r\nfunction addReactivityToState(instance) {\r\n    // this === DomDataBindElement!!!!\r\n    Object\r\n        .entries(Object.getOwnPropertyDescriptors(instance[STATE_OBSERVABLE]))\r\n        .forEach(([key, descriptor]) => {\r\n            if (!descriptor.get || !descriptor.get.isGetterSetter) {\r\n                const getterSetter = generatePropGetterSetter(\r\n                    key,\r\n                    undefined,\r\n                    instance[STATE_OBSERVABLE][key],\r\n                    instance._queueUpdate,\r\n                    instance\r\n                );\r\n                defineProperty(instance[STATE_OBSERVABLE], key, undefined, getterSetter, getterSetter, true, true);\r\n            }\r\n        });\r\n}\r\n\r\nexport default DomDataBindElement;\r\n","import {DomDataBindElement} from \"./DomDataBindElement.js\";\r\n\r\n//======================================================================\r\nconst DomDataBindEleProto = DomDataBindElement.prototype;\r\nconst memberToApply = [\r\n    \"_setView\",\r\n    \"addToState\",\r\n    \"state\"\r\n];\r\n\r\n/**\r\n * Decorates a sub-class of `@purtuga/ComponentElement` so that rendered content\r\n * uses data binding. (essentially, copies the methods from `DomDataBindElement`\r\n * to the given class.\r\n *\r\n * @param {Object} [optionsOrClassDescriptor]\r\n * @param {Array} [optionsOrClassDescriptor.directives]\r\n *\r\n * @returns {function(*): *}\r\n *\r\n * @example\r\n *\r\n * @dataBoundTemplates()\r\n * class NewElement extends ComponentElement {}\r\n */\r\nexport function dataBoundTemplates(optionsOrClassDescriptor) {\r\n    const opt = optionsOrClassDescriptor;\r\n\r\n    function applyDirectiveToClass(classDescriptor) {\r\n        memberToApply.forEach(memberName => {\r\n            classDescriptor.elements.push({\r\n                key: memberName,\r\n                kind: \"method\",\r\n                placement: \"prototype\",\r\n                descriptor: Object.getOwnPropertyDescriptor(DomDataBindEleProto, memberName)\r\n            });\r\n        });\r\n\r\n        // Add directive list if one was set\r\n        if (opt && opt.directives) {\r\n            classDescriptor.elements.push({\r\n                kind: \"field\",\r\n                key: \"directives\",\r\n                placement: \"static\",\r\n                descriptor: { configurable: true },\r\n                initializer() {\r\n                    return opt.directives;\r\n                }\r\n            });\r\n        }\r\n\r\n        return classDescriptor\r\n    }\r\n\r\n    // If this is being called with the actual Class decoratorDescriptor,\r\n    // then decorate the class\r\n    if (optionsOrClassDescriptor && optionsOrClassDescriptor.kind) {\r\n        applyDirectiveToClass(optionsOrClassDescriptor);\r\n    }\r\n\r\n    return applyDirectiveToClass;\r\n}","import {\r\n    ComponentElement,\r\n    prop,\r\n    bind\r\n} from \"@purtuga/component-element/src/index.js\"\r\nimport {\r\n    appendChild,\r\n    createElement,\r\n    createTextNode,\r\n    setAttribute,\r\n    doc\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//=============================================================\r\nconst SOURCE_SETUP = Symbol(\"SOURCE_SETUP\");\r\nconst SOURCE_STYLES = Symbol(\"SOURCE_STYLES\");\r\nconst STATE = Symbol(\"STATE\");\r\nconst SOURCES = {};\r\nconst CACHE = Object.create(null);\r\n\r\n// Aliases\r\nconst fromCharCode = String.fromCharCode;\r\n\r\n/**\r\n * Display icons from various sources.\r\n *\r\n * Usage:\r\n *\r\n * ```html\r\n * <i-con\r\n *      from=\"source-name\"\r\n *      name=\"icon-name\"\r\n *      size=\"xs|sm|md|lg\"\r\n *  ></i-con>\r\n * ```\r\n *\r\n * __Supported CSS Variables__\r\n *\r\n * -    `--icon-size`: set custom icon size\r\n *\r\n * @extends ComponentElement\r\n */\r\nexport class Icon extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"i-con\";\r\n\r\n    /**\r\n     * An array of icons sources. Object key is the value that should be used in\r\n     * the `from` attribute.\r\n     *\r\n     * @returns {Object<String, IconSource>}\r\n     */\r\n    static sources = SOURCES;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n    /**\r\n     * Fetches a given svg Icon from the given url, unless its already cached,\r\n     * in which case, the cached value is returned\r\n     *\r\n     * @param {String} iconUrl\r\n     * @returns {Promise<String, Error>}\r\n     */\r\n    static fetchSvg(iconUrl) {\r\n        if (!CACHE[iconUrl]) {\r\n            CACHE[iconUrl] = new Promise((resolve, reject) => {\r\n                const request = new XMLHttpRequest();\r\n                request.addEventListener('load', function () {\r\n                    if (this.status < 200 || this.status >= 300) {\r\n                        reject(new Error(`${this.status} ${this.responseText}`));\r\n                        return;\r\n                    }\r\n                    resolve(this.responseText);\r\n                });\r\n                request.onerror = reject;\r\n                request.onabort = reject;\r\n                request.open(\"GET\", iconUrl);\r\n                request.send();\r\n            });\r\n        }\r\n\r\n        return CACHE[iconUrl];\r\n    }\r\n\r\n    /**\r\n     * Sets up a Font for use in Font icons.\r\n     *\r\n     * @param {String} fontFaceCss\r\n     *  The css `@font-face` definition.\r\n     */\r\n    static setupFont(fontFaceCss) {\r\n        doc.head.appendChild(getStyleEle(fontFaceCss));\r\n    }\r\n\r\n    /**\r\n     * Given an HEX Unicode codepoint, returns UTF16 surrogate pairs.\r\n     *\r\n     * @param   string  generic codepoint, i.e. '1F4A9'\r\n     * @return  string  codepoint transformed into utf16 surrogates pair,\r\n     *          i.e. \\uD83D\\uDCA9\r\n     *\r\n     * @link https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n     *\r\n     * @example\r\n     *  twemoji.convert.fromCodePoint('1f1e8');\r\n     *  // \"\\ud83c\\udde8\"\r\n     *\r\n     *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')\r\n     *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"\r\n     */\r\n    static fromCodePoint(codepoint) {\r\n        // From: https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n        //       But changed to string up `U+` if its present in the given value\r\n\r\n        // TODO: should we momoize?\r\n        var code = typeof codepoint === 'string' ?\r\n            parseInt(codepoint.replace(/U\\+/i, \"\"), 16) : codepoint;\r\n        if (code < 0x10000) {\r\n            return fromCharCode(code);\r\n        }\r\n        code -= 0x10000;\r\n        return fromCharCode(\r\n            0xD800 + (code >> 10),\r\n            0xDC00 + (code & 0x3FF)\r\n        );\r\n    }\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The source from where the icon should be served\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    from = \"\";\r\n\r\n    /**\r\n     * The icons name. Source should know how ot deal with this value\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    name = \"\";\r\n\r\n    /**\r\n     * The icon code. Optional approach to defining an icon when using Font based icons.\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    code = \"\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    didInit() {\r\n        if (!this[STATE]) {\r\n            this[STATE] = {\r\n                $icon: null,\r\n                from: null,\r\n                name: null\r\n            };\r\n            this[SOURCE_STYLES] = {};\r\n            this.onPropsChange(this._handlePropChanges);\r\n        }\r\n    }\r\n\r\n    willRender() {\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        this._renderDone = true;\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        contain: content;\r\n        font-size: initial;\r\n        width: 24px;\r\n        height: 24px;\r\n        vertical-align: baseline;\r\n        overflow: hidden;\r\n        \r\n        /* -- var support -- */\r\n        width: var(--icon-size, 24px);\r\n        height: var(--icon-size, 24px);\r\n    }\r\n    \r\n    .i-con-font {\r\n        font-size: 24px;\r\n        font-size: var(--icon-size, 24px);\r\n    }\r\n    \r\n    /* -------------------------------------------\r\n            SIZES\r\n       ------------------------------------------- */\r\n    :host([size=xs]) {\r\n        width: 0.8rem;\r\n        height: 0.8rem;\r\n    }\r\n    :host([size=xs]) .i-con-font {\r\n        font-size: 0.8rem;\r\n    }\r\n    \r\n    :host([size=sm]) {\r\n        width: 1.55rem;\r\n        height: 1.55rem;\r\n    }\r\n    :host([size=sm]) .i-con-font {\r\n        font-size: 1.55rem;\r\n    }\r\n    \r\n    :host([size=md]) {\r\n        width: 2.25rem;\r\n        height: 2.25rem;\r\n    }\r\n    :host([size=md]) .i-con-font {\r\n        font-size: 2.25rem;\r\n    }\r\n    \r\n    :host([size=lg]) {\r\n        width: 3.0rem;\r\n        height: 3.0rem;\r\n    }\r\n    :host([size=lg]) .i-con-font {\r\n        font-size: 3.0rem;\r\n    }\r\n    :host([size=xl]) {\r\n        width: 3.75rem;\r\n        height: 3.75rem;\r\n    }\r\n    :host([size=xl]) .i-con-font {\r\n        font-size: 3.75rem;\r\n    }\r\n    \r\n    .i-con,\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .i-con {\r\n        box-sizing: border-box;\r\n    } \r\n</style>\r\n`;\r\n    }\r\n\r\n    didRender() {\r\n        this._handlePropChanges();\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n    @bind\r\n    _handlePropChanges() {\r\n        const state = this[STATE];\r\n        const props = this.props;\r\n\r\n        // Reset current state\r\n        if (\r\n            props.name !== state.name ||\r\n            props.code !== state.code ||\r\n            props.from !== state.from\r\n        ) {\r\n            // If there is a source currently in use, and that source has a custom stylesheet,\r\n            // then remove it from DOM.\r\n            if (\r\n                state.from &&\r\n                this[SOURCE_STYLES][state.from]\r\n            ) {\r\n                this[SOURCE_STYLES][state.from].remove();\r\n            }\r\n\r\n            state.name = state.from = state.code = state.source = null;\r\n\r\n            if (state.$icon) {\r\n                if (state.$icon.parentNode) {\r\n                    state.$icon.parentNode.removeChild(state.$icon);\r\n                }\r\n                state.$icon = null;\r\n            }\r\n        }\r\n\r\n        if ((props.name || props.code) && props.from) {\r\n            state.name = props.name;\r\n            state.code = props.code;\r\n            state.from = props.from;\r\n\r\n            const iconSource = this.constructor.sources[props.from];\r\n\r\n            if (iconSource) {\r\n                state.source = iconSource;\r\n\r\n                // If this source needs setup, do it now\r\n                if (!iconSource[SOURCE_SETUP]) {\r\n                    iconSource[SOURCE_SETUP] = true;\r\n\r\n                    if (\"doSetup\" in iconSource) {\r\n                        iconSource.doSetup(this.constructor);\r\n                    }\r\n                }\r\n\r\n                // If this source has Styles, then set them up now for this instance\r\n                if (!this[SOURCE_STYLES][state.from] && \"getStyles\" in iconSource) {\r\n                    this[SOURCE_STYLES][state.from] = getStyleEle(iconSource.getStyles());\r\n                }\r\n\r\n                iconSource\r\n                    .getIcon(this.props, this)\r\n                    .then(this._showIconElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _showIconElement(iconEle) {\r\n        if (iconEle && this.props.name === this[STATE].name) {\r\n            // If iconEle is a documentFragment, then use only its first element\r\n            // TODO: maybe in the future support everything in the fagment\r\n            if (iconEle.nodeType === 11) {\r\n                iconEle = iconEle.firstChild;\r\n\r\n                if (!iconEle) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this[STATE].$icon = iconEle;\r\n            appendChild(this.$ui, iconEle);\r\n\r\n            // If this source requires some styles to be injected, do it now\r\n            if (this[SOURCE_STYLES][this[STATE].from]) {\r\n                this.$ui.insertBefore(\r\n                    this[SOURCE_STYLES][this[STATE].from],\r\n                    this[STATE].$icon\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getStyleEle(cssCode, id) {\r\n    const styleEle = createElement(\"style\");\r\n    styleEle.type = \"text/css\";\r\n    appendChild(styleEle, createTextNode(cssCode));\r\n    if (id) {\r\n        setAttribute(styleEle, \"data-id\", id);\r\n    }\r\n    return styleEle;\r\n}\r\n\r\n\r\n/**\r\n * An Icon Source definition\r\n *\r\n * @typedef {Object} IconSource\r\n *\r\n * @property {Function} getIcon\r\n *  Must return a promise that resolves to an Element that represents the icon.\r\n *  This icon, if not an SVG, should have a CSS class name of `i-con`\r\n *\r\n * @property {Function} doSetup\r\n *  Called only once to do global setup. Example: to load font-face for font icons\r\n *\r\n * @property {Function} getStyles\r\n *  Called to get styles for the icon.\r\n */\r\n\r\nexport default Icon;\r\n","import { consoleError, createElement } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//============================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n/**\r\n * Support for [BoxIcons](https://boxicons.com/)\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const boxicons = {\r\n    cdnUrl: \"//unpkg.com/boxicons@latest/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.name) {\r\n            const iconUrl = `${this.cdnUrl}/regular/bx-${props.name}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"boxicon 'name' missing\"));\r\n    }\r\n};\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}\r\n","import { createElement, doc } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//===========================================================================\r\nconst OFFICE_ICON_ELEMENT = Symbol(\"OFFICE\");\r\nconst ICON_TEMPLATE = createElement(\"template\");\r\nconst IS_CODEPOINT = /^U\\+/i;\r\nlet fromCodePoint;\r\n\r\nICON_TEMPLATE.innerHTML = `<span class=\"i-con i-con-font ms-Icon\"></span>`;\r\n\r\n/**\r\n * Font support for [Office UI Fabric](https://developer.microsoft.com/en-us/fabric#/styles/icons)\r\n * Icon can be defined by name, using the `iconMap` property below, or by `code` - the Unicode that\r\n * represents the icon. The `code` value can the actual unicode character (the escape sequence -\r\n * ex. `\\uF505`) or the Unicode codepoint (ex. `U+F505`).\r\n *\r\n * @type {IconSource}\r\n *\r\n * @example\r\n *\r\n * // Extend to icon name to code maps\r\n *\r\n * import {officeUiFabric} from \"common-widget-elements/src/Icon/source.office-ui-fabric\"\r\n * import * as iconMap from \"common-widget-elements/src/Icon/source.office-ui-fabric-icon-codes\"\r\n *\r\n * officeUiFabric.iconMap = iconMap;\r\n * officeUiFabric.iconAliases = {\r\n *    \"12PointStar\": iconMap.twelvePointStar,\r\n *    \"6PointStar\": iconMap.sixPointStar\r\n * };\r\n *\r\n * export { officeUiFabric };\r\n */\r\nexport const officeUiFabric = {\r\n    cdnUrl: \"//static2.sharepointonline.com/files/fabric/assets/icons\",\r\n    isIconLoaded: false,\r\n\r\n    /**\r\n     * A map (object) of \"icon name\" to \"icon Unicode code point\" that represents the icon.\r\n     * (NOTE: unicode should be represented as `U+<code>`, not the UTF16 escaped sequence).\r\n     * See `source.office-ui-fabric-icon-codes.js` for a list of code along with names, which\r\n     * can be used set this object.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconMap: {},\r\n\r\n    /**\r\n     * A map of \"icon name alias\" to \"Icon unicode\". These names might have had to be\r\n     * changed due to constrains in the icon-codes.js file\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconAliases: {},\r\n\r\n    doSetup(IconClass) {\r\n        fromCodePoint = IconClass.fromCodePoint;\r\n        IconClass.setupFont(this.getFontFaceCss());\r\n    },\r\n\r\n    getIcon({ code, name }, iconInstance) {\r\n        // Setup the instance\r\n        // Create the Internal element that will be used to display the icon\r\n        if (!iconInstance[OFFICE_ICON_ELEMENT]) {\r\n            iconInstance[OFFICE_ICON_ELEMENT] = doc.importNode(ICON_TEMPLATE.content, true).firstChild;\r\n\r\n        }\r\n        iconInstance[OFFICE_ICON_ELEMENT].textContent = code\r\n            ? IS_CODEPOINT.test(code)\r\n                ? fromCodePoint(code)\r\n                : code\r\n            : fromCodePoint(this.iconMap[name] || this.iconAliases[name]);\r\n        return Promise.resolve(iconInstance[OFFICE_ICON_ELEMENT]);\r\n    },\r\n\r\n    getFontFaceCss() {\r\n        return `\r\n@font-face {\r\n    font-family: FabricMDL2Icons;\r\n    src: url(${this.cdnUrl}/fabricmdl2icons-2.68.woff2) format(\"woff2\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.woff) format(\"woff\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.ttf) format(\"truetype\");\r\n    font-weight: 400;\r\n    font-style: normal;\r\n}\r\n`;\r\n    },\r\n\r\n    getStyles() {\r\n        return `\r\n${this.getFontFaceCss()}\r\n\r\n.ms-Icon {\r\n    display: inline-block;\r\n    font-family: FabricMDL2Icons;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    speak: none;\r\n}\r\n`;\r\n    }\r\n};\r\n","import {consoleError, createElement} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//======================================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n// FIXME: create emoji tables - similar to: https://unicode.org/emoji/charts/full-emoji-list.html\r\n\r\n/**\r\n * Shows Emoji from Twenmoji.\r\n * Get code from https://unicode.org/emoji/charts/full-emoji-list.html\r\n * Images served from unpkg - https://unpkg.com/twemoji@latest/2/svg/\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const twemoji = {\r\n    cdnUrl: \"//unpkg.com/twemoji@latest/2/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.code) {\r\n            const iconUrl = `${this.cdnUrl}/${getSvgImgNameFromCode(props.code)}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"twemoji 'node' missing\"));\r\n    }\r\n};\r\n\r\nfunction getSvgImgNameFromCode(code) {\r\n    return code\r\n        .toLowerCase()\r\n        .replace(/^u\\+/, \"\");\r\n}\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}","//--------------------------------------------------------------------------------\r\n// Exports `Icon` with all currently available sources.\r\n// If wanting to avoid the \"bulk\", use the `Icon/Base/Icon` class instead\r\n// add your own custom sources to that.\r\n//--------------------------------------------------------------------------------\r\nimport Icon from \"./base/Icon.js\";\r\nimport {boxicons} from \"./source.boxicons.js\";\r\nimport {officeUiFabric} from \"./source.office-ui-fabric.js\";\r\nimport {twemoji} from \"./source.twemoji.js\";\r\n\r\nIcon.sources.boxicons = boxicons;\r\nIcon.sources.twemoji = twemoji;\r\nIcon.sources[\"office-ui-fabric\"] = officeUiFabric;\r\n\r\n\r\nexport { Icon };\r\nexport default Icon;\r\n","/**\r\n * Toggles a CSS class on/off on an element\r\n *\r\n * @function domToggleClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domToggleClass(el, cssClass){\r\n    if (el) {\r\n        return el.classList.toggle(cssClass);\r\n    }\r\n}\r\nexport default domToggleClass;","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport {domToggleClass} from \"@purtuga/common/src/domutils/domToggleClass.js\";\r\nimport {domAddClass} from \"@purtuga/common/src/domutils/domAddClass.js\";\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\nimport {hasAttribute} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * Provides the user with a confirmation upon clicking the component that\r\n * allows them to either proceed or cancel\r\n *\r\n * __SUPPORTED CSS VARS__\r\n *\r\n * tbd...\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @property disabled\r\n *\r\n * @fires ConfirmAction#confirmed\r\n */\r\nclass ConfirmAction extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"confirm-action\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop({ boolean: true }) disabled = false;\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n\r\n    willRender(){\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        if (this._renderDone) {\r\n            return;\r\n        }\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        --confirm-bg: var(--theme-color-bg, white);\r\n        --confirm-border-radius: 0;\r\n        --yes-bg: var(--theme-color-accent-success-0, #b6eeb5);\r\n        --yes-bg-hover: var(--theme-color-accent-success-1, #9ecf99);\r\n        --no-bg: transparent;\r\n        --no-bg-hover: var(--theme-color-1, #e8e8e8);\r\n    }\r\n    ${ hostStyles  }\r\n    .action {\r\n        cursor: pointer;\r\n    }\r\n    .confirm {\r\n        display: flex;\r\n        align-content: space-between;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        background-color: var(--confirm-bg);\r\n        color: var(--theme-color-fg);\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--confirm-border-radius, 0);\r\n        left: -1px;\r\n        top: -1px;\r\n        height: calc(100% + 4px);\r\n        min-width: calc(100% + 4px);\r\n        max-width: var(--confirm-width, 300px);\r\n        line-height: 1.3em;\r\n        user-select: none;\r\n        overflow: hidden;\r\n    }\r\n    .confirm > * {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    :host([confirm-align-right]) .confirm {\r\n        left: auto;\r\n        right: -1px;\r\n    }\r\n    .hide {\r\n        display: none;\r\n    }\r\n    .msg {\r\n        flex: auto;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        padding: 0 var(--theme-spacing-1, 0.2em);\r\n    }\r\n    .no,\r\n    .yes {\r\n        padding-left: var(--theme-spacing, 0.5em);\r\n        padding-right: var(--theme-spacing, 0.5em);\r\n        transition: background-color 0.3s;\r\n    }\r\n    .no {\r\n        background-color: var(--no-bg);\r\n    }\r\n    .no:hover {\r\n        background-color: var(--no-bg-hover);\r\n    }\r\n    .yes {\r\n        background-color: var(--yes-bg);\r\n    }\r\n    .yes:hover {\r\n        background-color: var(--yes-bg-hover);\r\n    }\r\n\r\n    :host([disabled]) {\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    }\r\n    :host([disabled]) .action {\r\n        cursor: auto;\r\n    }\r\n</style>\r\n<span class=\"action\"><slot>&#9654;</slot></span>\r\n<div class=\"confirm hide\">\r\n    <span class=\"msg\">\r\n        <slot name=\"message\">Proceed?</slot>\r\n    </span>\r\n    <span class=\"no action\">\r\n        <slot name=\"cancel\">No</slot>\r\n    </span>\r\n    <span class=\"yes action\">\r\n        <slot name=\"confirm\">Yes</slot>\r\n    </span>\r\n</div>`;\r\n    }\r\n\r\n    didRender() {\r\n        if (!this._renderDone) {\r\n            this._renderDone = true;\r\n            this._$confirm = this.$(\".confirm\");\r\n            domAddEventListener(this.$(\".action\"), \"click\", this._handleShowHideConfirm);\r\n            domAddEventListener(this.$(\".yes\"), \"click\", this._handleConfirm);\r\n            domAddEventListener(this.$(\".no\"), \"click\", this._handleShowHideConfirm);\r\n            this.onPropsChange(this._handlePropsChange, \"disabled\");\r\n        }\r\n    }\r\n\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    @bind\r\n    _handlePropsChange() {\r\n        if (this.props.disabled) {\r\n            domAddClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleShowHideConfirm() {\r\n        if (!hasAttribute(this, \"disabled\")) {\r\n            domToggleClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleConfirm() {\r\n        /**\r\n         * The action has been confirmed by the user\r\n         *\r\n         * @event ConfirmAction#confirmed\r\n         */\r\n        this.emit(\"confirmed\");\r\n        this._handleShowHideConfirm();\r\n    }\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n// Private functions here...\r\n\r\n//------------------------------------------ EXPORTS ----------\r\nexport default ConfirmAction;\r\nexport {\r\n    ConfirmAction\r\n}\r\n","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\";\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\";\r\nimport {\r\n    PropDirective,\r\n    AttrDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The Todo item Input area (a textarea)\r\n * @extends ComponentElement\r\n * @fires TodoInput#change\r\n */\r\n@dataBoundTemplates({\r\n    directives: [PropDirective, AttrDirective, OnDirective]\r\n})\r\nclass TodoInput extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-input\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop()\r\n    value = \"\";\r\n\r\n    @prop({ attr: true })\r\n    placeholder = \"Enter value...\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        min-height: 1.5em;\r\n        border: var(--theme-border-light, 1px solid #eeeeee);\r\n    }\r\n    :host(:focus-within) {\r\n        border: var(--theme-border, 1px solid lightgrey);\r\n    }\r\n    input {\r\n        font-size: var(--theme-font-size, 16px);\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n        resize: none;\r\n        outline: none;\r\n        padding: var(--theme-spacing-3, 0.5em);\r\n    }\r\n</style>\r\n<input\r\n    type=\"text\"\r\n    _prop.value=\"props.value\"\r\n    _on.input=\"emit('change', $ev.target.value)\"\r\n    _attr.placeholder=\"props.placeholder\" />\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    focus() {\r\n        this.$(\"input\").focus();\r\n    }\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\nexport default TodoInput;\r\nexport {\r\n    TodoInput\r\n}","import {ComponentElement} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\n\r\n//=============================================================\r\n\r\n/**\r\n * Wraps an action. Action is initially faded and then emphasized on hover\r\n * @extends ComponentElement\r\n * @property {String} [invisible]\r\n *  Only as HTML Attribute. Makes action hidden and only visible on hover.\r\n */\r\nclass TodoAction extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-action\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        fill: var(--theme-color-3, lightgrey);\r\n        color: var(--theme-color-3, lightgrey);\r\n        transition: all 0.3s;\r\n        cursor: pointer;\r\n    }\r\n    :host([invisible]) {\r\n        opacity: 0;\r\n    } \r\n    :host(:hover) {\r\n        fill: var(--theme-color-7, darkgrey);\r\n        color: var(--theme-color-7, darkgrey);\r\n        opacity: 1;\r\n    }\r\n</style>\r\n<slot></slot>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    // Other instance methods\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n// Private functions here...\r\n\r\n//------------------------------------------ EXPORTS ----------\r\nexport default TodoAction;\r\nexport {\r\n    TodoAction\r\n}\r\n","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {Icon} from \"@purtuga/common-widget-elements/src/Icon/Icon.js\";\r\nimport {ConfirmAction} from \"@purtuga/common-widget-elements/src/ConfirmAction/ConfirmAction.js\";\r\nimport {\r\n    IfDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {view} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\nimport {doc} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport showOnHoverStyles from \"./styles/show-on-hover.css?inline\";\r\nimport {TodoInput} from \"./TodoInput.js\";\r\nimport {TodoAction} from \"./TodoAction.js\";\r\n\r\n//=============================================================\r\nconst directives = [\r\n    IfDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective\r\n];\r\nConfirmAction.define();\r\nIcon.define();\r\n\r\n/**\r\n * Display a TodoItem\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @fires TodoItem#item-check\r\n * @fires TodoItem#item-un-check\r\n * @fires TodoItem#item-edit\r\n * @fires TodoItem#item-edit-done\r\n * @fires TodoItem#item-edit-cancel\r\n * @fires TodoItem#item-delete\r\n */\r\n@dataBoundTemplates({ directives })\r\nclass TodoItem extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-item\";\r\n\r\n    /**\r\n     * The Input widget that will be used to collect user data\r\n     * @type {TodoInput}\r\n     */\r\n    static TodoInput = TodoInput;\r\n\r\n    /**\r\n     * The View Template for showing a Todo Item\r\n     * @type {Template}\r\n     */\r\n    static displayView = view(`\r\n<todo-action _on.click=\"_emitCheckUncheck()\" _attr.class=\"props.noCheck ? 'disabled' : ''\">\r\n    <i-con\r\n        class=\"checkmark\"\r\n        _attr.from=\"props.iconSource\" \r\n        _attr.name=\"props.done ? props.iconDoneName : props.iconNotDoneName\"></i-con>\r\n</todo-action>\r\n<span class=\"description\" _attr.title=\"props.noEdit ? '' : props.tooltipEdit\" _on.click=\"_emitEdit()\">\r\n    <slot></slot>\r\n</span>\r\n<confirm-action _if=\"!props.noDelete\" confirm-align-right _on.confirmed=\"emit('item-delete')\">\r\n    <todo-action class=\"show-on-hover\">\r\n        <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconTrashName\"></i-con>\r\n    </todo-action>\r\n    <span slot=\"message\">{{ props.confirmText }}</span>\r\n    <span slot=\"cancel\">{{ props.confirmCancelText }}</span>\r\n    <span slot=\"confirm\">{{ props.confirmProceedText }}</span>\r\n</confirm-action>\r\n`, directives);\r\n\r\n\r\n    /**\r\n     * The View Template for Editing a Todo Item\r\n     * @type {Template}\r\n     */\r\n    static editView = view(`\r\n<span class=\"description\">\r\n    <${ this.TodoInput.tagName } \r\n        _prop.value=\"_getDescription()\"\r\n        _on.change=\"_storeNewDescription($ev)\"\r\n        _on.keyup.enter=\"_emitSave()\"></${this.TodoInput.tagName}>\r\n</span>\r\n<todo-action _on.click=\"_emitSave()\">\r\n    <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconSaveName\"></i-con>\r\n</todo-action>\r\n<todo-action _on.click=\"_emitCancel()\">\r\n    <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconCancelName\"></i-con>\r\n</todo-action>\r\n`, directives);\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoInput.define();\r\n        TodoAction.define(); // TODO: should it be exposed as class static?\r\n    }\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop\r\n    data = null;\r\n\r\n    /**\r\n     * Show the edit UI. Will only work if `noEdit` is false\r\n     * @type {boolean}\r\n     */\r\n    @prop({ boolean: true }) edit = false;\r\n\r\n    @prop({ boolean: true }) noEdit = false;\r\n\r\n    @prop({ boolean: true }) noCheck = false;\r\n\r\n    @prop({ boolean: true }) noDelete = false;\r\n\r\n    @prop({ boolean: true }) done = false;\r\n\r\n    @prop({ attr: true }) tooltipEdit = \"Click to Edit\";\r\n\r\n    @prop({ attr: true }) confirmText = \"Remove Item?\";\r\n\r\n    @prop({ attr: true }) confirmCancelText = \"No\";\r\n\r\n    @prop({ attr: true }) confirmProceedText = \"Yes\";\r\n\r\n    @prop({ attr: true }) iconSource = \"boxicons\";\r\n\r\n    @prop({ attr: true }) iconDoneName = \"check-circle\";\r\n\r\n    @prop({ attr: true }) iconNotDoneName = \"circle\";\r\n\r\n    @prop({ attr: true }) iconTrashName = \"trash\";\r\n\r\n    @prop({ attr: true }) iconSaveName = \"save\";\r\n\r\n    @prop({ attr: true }) iconCancelName = \"reset\";\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    didInit(){\r\n        this._docEv = null;\r\n        this._id = Symbol(\"todoitem\");\r\n        this._newDescription = \"\";\r\n    }\r\n\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        padding: var(--theme-spacing-2, 0.5em);\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--theme-border-radius, 6px);\r\n        margin-bottom: var(--theme-spacing-1, 0.2em);\r\n        transition: border 0.5s;\r\n    }\r\n    :host(:last-child) {\r\n        margin-bottom: 0;\r\n    }\r\n    ${ showOnHoverStyles }\r\n    .content {\r\n        display: flex;\r\n    }\r\n    .description {\r\n        flex: auto;\r\n        flex-wrap: wrap;\r\n        padding: 0 var(--theme-spacing-3, 1em);\r\n    }\r\n    :host([done]) .description {\r\n        text-decoration: line-through;\r\n    }\r\n    :host([done]:hover) .description {\r\n        text-decoration: none;\r\n    }\r\n    .clickable {\r\n        cursor: pointer;\r\n    }\r\n    :host(:hover) {\r\n        border-color: var(--theme-border-color, grey);\r\n    }\r\n    :host([done]) i-con.checkmark {\r\n        fill: var(--theme-color-accent-success-4, green);\r\n        color: var(--theme-color-accent-success-4, green);\r\n    }\r\n    .disabled {\r\n        cursor: auto;\r\n        pointer-events: none;\r\n    }\r\n</style>\r\n<div class=\"content\" _on.click=\"$ev[_id] = this\">\r\n    {{ _getView() }}\r\n</div>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    didDestroy() {\r\n        this._removeDocEv();\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _getView() {\r\n        this._newDescription = this._getDescription();\r\n\r\n        if (this.props.noEdit || !this.props.edit) {\r\n            this._removeDocEv();\r\n            return this.constructor.displayView;\r\n        }\r\n\r\n        setTimeout(this._setupDocEv, 200);\r\n        return this.constructor.editView;\r\n    }\r\n\r\n    @bind\r\n    _setupDocEv() {\r\n        if (!this._docEv && this.props.edit) {\r\n            this.$(this.constructor.TodoInput.tagName).focus();\r\n\r\n            this._docEv = domAddEventListener(doc, \"click\", event => {\r\n                if (!event[this._id] || !this.$ui.contains(event[this._id])) {\r\n                    this._emitSave();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _removeDocEv() {\r\n        if (this._docEv) {\r\n            this._docEv.remove();\r\n            this._docEv = null;\r\n        }\r\n    }\r\n\r\n    _getDescription() {\r\n        return this.textContent;\r\n    }\r\n\r\n    _storeNewDescription(event) {\r\n        this._newDescription = event.detail;\r\n    }\r\n\r\n    _emitEdit() {\r\n        if (!this.props.noEdit) {\r\n            this.emit('item-edit');\r\n        }\r\n    }\r\n\r\n    _emitCheckUncheck() {\r\n        if (!this.props.noCheck) {\r\n            this.emit(this.props.done ? 'item-un-check' : 'item-check', this.props.data);\r\n        }\r\n    }\r\n\r\n    _emitSave() {\r\n        // FIXME: document this event\r\n        this.emit(\"item-edit-done\", this._newDescription);\r\n        this._removeDocEv();\r\n    }\r\n\r\n    _emitCancel() {\r\n        // FIXME: document this event\r\n        this.emit(\"item-edit-cancel\");\r\n        this._removeDocEv();\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\n\r\n//================================================ EXPORTS ====\r\nexport default TodoItem;\r\nexport {\r\n    TodoItem\r\n}","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {OnDirective, PropDirective} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {TodoInput} from \"./TodoInput.js\";\r\nimport {TodoAction} from \"./TodoAction.js\";\r\nimport showOnHoverStyles from \"./styles/show-on-hover.css?inline\"\r\n\r\n//=============================================================\r\n\r\n/**\r\n *\r\n * @extends ComponentElement\r\n */\r\n@dataBoundTemplates({\r\n    directives: [PropDirective, OnDirective]\r\n})\r\nclass TodoAdd extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-add\";\r\n\r\n    /**\r\n     * The Input widget that will be used to collect user data\r\n     * @type {TodoInput}\r\n     */\r\n    static TodoInput = TodoInput;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoInput.define();\r\n        TodoAction.define(); // TODO: should TodoAction be exposed as Static prop\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop() value = \"\";\r\n\r\n    @prop() placeholder=\"\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        const todoInputTagName = this.constructor.TodoInput.tagName;\r\n\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--theme-border-radius, 6px);\r\n        overflow: hidden;\r\n    }\r\n    ${ showOnHoverStyles }\r\n    div {\r\n        display: flex;\r\n    }\r\n    ${todoInputTagName} {\r\n        margin: var(--theme-spacing-1, 0.2em);\r\n        flex: auto;\r\n        border: none;\r\n    }\r\n    todo-action {\r\n        padding: 0 var(--theme-spacing-2, 0.5em);\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n</style>\r\n<div>\r\n    <${ todoInputTagName }\r\n        _on.change=\"_handleNewValue($ev)\"\r\n        _on.keyup.enter=\"_handleAdd()\"\r\n        _on.keyup.esc=\"props.value = ''\"\r\n        _prop.placeholder=\"props.placeholder\"\r\n        _prop.value=\"value\"></${ todoInputTagName }>\r\n    <todo-action _on.click=\"_handleAdd()\" class=\"show-on-hover\">\r\n        <i-con from=\"boxicons\" name=\"plus-circle\">Add</i-con>\r\n    </todo-action>\r\n</div>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _handleNewValue(ev) {\r\n        this.value = ev.detail;\r\n    }\r\n\r\n    _handleAdd() {\r\n        this.value = this.value ? this.value.trim() : \"\";\r\n\r\n        if (this.value) {\r\n            this.emit(\"add\", this.value);\r\n            this.value = \"\";\r\n            this._queueUpdate();\r\n            this.focus();\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        this.$(this.constructor.TodoInput.tagName).focus();\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\nexport default TodoAdd;\r\nexport {\r\n    TodoAdd\r\n}","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {\r\n    EachDirective,\r\n    IfDirective,\r\n    PropDirective,\r\n    AttrDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {isObject} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\nimport {TodoItem} from \"./TodoItem.js\";\r\nimport {TodoAdd} from \"./TodoAdd.js\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * A container that displays a set of todo items.\r\n *\r\n * __Supported CSS Vars__\r\n *\r\n * TODO: document css vars\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @fires TodoList#data-change\r\n */\r\n@dataBoundTemplates({\r\n    directives: [ EachDirective, IfDirective, PropDirective, AttrDirective, OnDirective ]\r\n})\r\nclass TodoList extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-list\";\r\n\r\n    /**\r\n     * The Constructor (`CustomElement`) for each individual todo item\r\n     * @type {TodoItem}\r\n     */\r\n    static TodoItem = TodoItem;\r\n\r\n    /**\r\n     * The Todo Add area Constructor (`CustomElement)\r\n     * @type {TodoAdd}\r\n     */\r\n    static TodoAdd = TodoAdd;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoAdd.define();\r\n        this.TodoItem.define();\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The list of todo items. By default, it support an array of strings or\r\n     * array of objects, with each object having at least a `title` attribute\r\n     * @type {Array<String|Object>}\r\n     */\r\n    @prop data = [];\r\n\r\n    /**\r\n     * The message that should be shown when there are no items\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true }) emptyMsg = \"No Items\";\r\n\r\n    @prop({ attr: true, boolean: true}) noAdd = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noEdit = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noCheck = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noDelete = false;\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){ }\r\n\r\n    render() {\r\n        // this._renderDone = true;\r\n\r\n        const {\r\n            TodoItem: { tagName: todoItemTagName },\r\n            TodoAdd: { tagName: todoAddTagName }\r\n        } = this.constructor;\r\n\r\n        return `\r\n<style>\r\n    ${hostStyles}\r\n    :host {\r\n        display: block;\r\n        padding: var(--theme-spacing, 0.5em);\r\n        border: var(--theme-border-light, 1px solid, #ececec);\r\n        box-shadow: var(--them--e-box-shadow-s, 0 8px 10px 1px rgba(0,0,0,0.14));\r\n        border: var(--theme-border-light, 1px solid #efefef);\r\n        border-radius: var(--theme-border-radius, 5px);\r\n    }\r\n    .body {\r\n        min-height: 3em;\r\n    }\r\n    ${todoAddTagName} {\r\n        margin-top: var(--theme-spacing-5, 1em);\r\n    }\r\n</style>\r\n<div class=\"body\">\r\n    <div _if=\"!props.data.length\">{{ props.emptyMsg }}</div>\r\n    <${todoItemTagName}\r\n        _each=\"(todoData, i) in props.data\"\r\n        _attr.no-edit=\"props.noEdit\"\r\n        _attr.no-check=\"props.noCheck\"\r\n        _attr.no-delete=\"props.noDelete\"\r\n        _prop.data=\"todoData\"\r\n        _attr.done=\"todoData.done\"\r\n        _attr.edit=\"todoData.edit\"\r\n        _on.item-edit=\"todoData.edit = true, _queueUpdate()\"\r\n        _on.item-edit-done=\"_handleEditDone($ev, todoData, i)\"\r\n        _on.item-edit-cancel=\"todoData.edit = false, _queueUpdate()\"\r\n        _on.item-delete=\"_handleDelete($ev, todoData, i)\"\r\n        _on.item-check=\"todoData.done = true, _queueUpdate()\"\r\n        _on.item-un-check=\"todoData.done = false, _queueUpdate()\">{{ _isObject(todoData) ? todoData.title : todoData }}</${todoItemTagName}>\r\n</div>\r\n<${todoAddTagName} _if=\"!props.noAdd\" _on.add=\"_addNew($ev)\"></${todoAddTagName}>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _isObject(obj) {\r\n        return isObject(obj);\r\n    }\r\n\r\n    _addNew(event) {\r\n        const newItem = { title: event.detail };\r\n        this.props.data.push(newItem);\r\n        this._queueUpdate();\r\n        this.emit(\"data-change\");\r\n    }\r\n\r\n    _handleEditDone(event, todoData) {\r\n        todoData.edit = false;\r\n        todoData.title = event.detail;\r\n        this._queueUpdate();\r\n        /**\r\n         * @event TodoList#data-change\r\n         */\r\n        this.emit(\"data-change\");\r\n    }\r\n\r\n    _handleDelete(event, todoData, i) {\r\n        this.props.data.splice(i, 1);\r\n        this._queueUpdate();\r\n        this.emit(\"data-change\");\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\n//------------------------------------------ OTHER EXPORTS ----\r\nexport default TodoList;\r\nexport {\r\n    TodoList,\r\n    TodoItem,\r\n    TodoAdd\r\n}\r\n","export * from \"./TodoList.js\";\r\n"],"sourceRoot":""}