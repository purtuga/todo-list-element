{"version":3,"sources":["webpack://TodoListElement/webpack/universalModuleDefinition","webpack://TodoListElement/webpack/bootstrap","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/getGlobal.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/styles/host.css?e250","webpack://TodoListElement/./src/styles/show-on-hover.css?82dc","webpack://TodoListElement/./node_modules/css-loader/lib/css-base.js","webpack://TodoListElement/(webpack)/buildin/global.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/styles/host.css","webpack://TodoListElement/./src/styles/show-on-hover.css","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/runtime-aliases.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/objectExtend.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/nextTick.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/throwIfThisIsPrototype.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domAddEventListener.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domFind.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/WeakMap.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/dataStore.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Ev.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Iterator.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Symbol.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/utils.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/polyfill-support.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/ComponentElement.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/decorators/prop.js","webpack://TodoListElement/./node_modules/@purtuga/component-element/src/decorators/bind.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://TodoListElement/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/generatePropGetterSetter.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Map.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/uuid.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/utils.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/isTemplateElement.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domInsertBefore.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domRemoveChild.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Set.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/queueCallback.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/jsutils/Compose.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/NodeHandler.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/Directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/TemplateInstance.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/render.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/bindings/text-binding.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/Template.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/view.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/DomDataBind.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/attr-directive.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domHasClass.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domAddClass.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domRemoveClass.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/class-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/each-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/html-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/if-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/on-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/prop-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/show-directive.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domSetStyle.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/directives/style-directive.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/index.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/DomDataBindElement.js","webpack://TodoListElement/./node_modules/@purtuga/dom-data-bind/src/ElementDecorator.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/base/Icon.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.boxicons.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.office-ui-fabric.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/source.twemoji.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/Icon/Icon.js","webpack://TodoListElement/./node_modules/@purtuga/common/src/domutils/domToggleClass.js","webpack://TodoListElement/./node_modules/@purtuga/common-widget-elements/src/ConfirmAction/ConfirmAction.js","webpack://TodoListElement/./src/TodoInput.js","webpack://TodoListElement/./src/TodoAction.js","webpack://TodoListElement/./src/TodoItem.js","webpack://TodoListElement/./src/TodoAdd.js","webpack://TodoListElement/./src/TodoList.js","webpack://TodoListElement/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof2","obj","iterator","constructor","_typeof","__webpack_exports__","GLOBAL","_babel_runtime_helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__","global","self","Function","result","toString","useSourceMap","list","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","g","e","_classCallCheck","instance","Constructor","TypeError","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","esm_typeof","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","writable","configurable","_arrayWithHoles","arr","Array","isArray","_iterableToArray","iter","from","_nonIterableRest","_toArray","_getPrototypeOf","getPrototypeOf","get_get","target","receiver","Reflect","base","_superPropBase","desc","getOwnPropertyDescriptor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","construct_construct","Parent","args","Class","construct","sham","Proxy","Date","isNativeReflectConstruct","a","apply","arguments","wrapNativeSuper_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","_isNativeFunction","has","set","Wrapper","_defineProperty","functionBind","functionBindCall","isObject","isString","objectDefineProperty","objectDefineProperties","defineProperties","objectKeys","keys","prop","setter","getPropertyDescriptor","arrayForEach","forEach","arrayIndexOf","arraySplice","splice","arraySlice","slice","consoleLog","console","log","consoleError","error","consoleWarn","warn","SymbolIterator","HTMLElementPrototype","HTMLElement","doc","document","head","createElement","tagName","createTextNode","data","appendChild","hasAttribute","insertBefore","getAttribute","setAttribute","removeAttribute","isDocFragment","node","objectExtend","mergeIntoObj","response","_len","mergeObjects","_key","total","deepMerge","shift","_toConsumableArray","arr2","_arrayWithoutHoles","_nonIterableSpread","reIsNativeCode","nextTick","setImediate","test","Promise","resolved","resolve","then","catch","immediates","processing","processPending","setTimeout","isQueued","queuedCallbacks","Set","flushQueue","callbacks","clear","queue","callback","add","throwIfThisIsPrototype","THIS","Error","domAddEventListener","ele","event","capture","events","split","evListeners","evName","addEventListener","remove","removeEventListener","listeners","domFind","domEle","selector","querySelectorAll","FakeWeakMap","WeakMap","counter","now","Math","random","entry","delete","dataStore","stash","LISTENER_STORAGE","Ev","_this","getStoreFor","inst","FakeIterator","values","idx","next","done","_","nextIdx","UNIQUE","substring","COUNTER","SYMBOL_PROTOTYPE","description","_id","valueOf","FakeSymbol","PRIVATE","elementHasAttributeForProp","propDef","aliases","some","propAlias","getState","state","isCssScopingDone","templateEle","ev","destroyCallbacks","destroyQueued","isMounted","getPropsDefinition","ComponentClass","getComponentClassState","propsDef","statePropsDef","componentPropsDef","propName","propAliasDef","_isAlias","propNameAlias","observedAttrs","supportsShadyCSS","ShadyCSS","removeElement","parentNode","removeChild","supportsNativeShadowDom","createShadowRoot","attachShadow","nativeShadow","prepareRenderedContent","renderOutput","eleInstance","view","isRenderOutputString","ComponentClassState","innerHTML","cloneNode","template","prepareTemplate","scopeCss","prepareTemplateDom","importNode","reStyleComponentInstanceSubtree","componentInstance","styleSubtree","SHADOW_DOM_SUPPORTED","EV_DEFAULT_INIT","bubbles","cancelable","composed","CE_REGISTRY","customElements","PROPS_NOOP","freeze","EVENT_ANY","lazySetupUnderway","ComponentElement","_getPrototypeOf2","component","_component$constructo","useShadow","shadowMode","shadowRoot","_$ui","onPropsChange","update","didInit","setupComponent","clearTimeout","cb","didDestroy","$ui","querySelector","_polyfillDone","textContent","init","ready","mounted","unmounted","eventName","eventInit","eventNameLowercase","toLowerCase","CustomEvent","eventInitOptions","detail","dispatchEvent","eventNames","on","oldValue","newValue","styleElement","styleComponentInstanceElement","didMount","destroy","delayDestroy","didUnmount","_this2","propDefinitions","notifyAnyListeners","emit","_for","_ev","propValue","default","notifyPropListeners","attr","boolean","attrVal","geAttributeValueForProp","filter","_this3","required","every","_this4","_update","shouldRender","willRender","_setView","render","didRender","_queueUpdate","_this5","__queueUpdate","process","propList","RE_UPPER_CASE_LETTERS","NOOP","val","options","kind","_propDecorator","_ref","initializer","propDefinition","validator","propertyDefinition","realHtmlPropValue","str","replace","match","p1","getKebabCase","getPropSetup","newDescriptor","getDecoratorDescriptor","extras","aliasName","proxyToPropName","componentPropDefinition","DecoratorDescriptor","placement","finisher","Klass","_bound","decoratorDescriptor","isDoingLazySetup","method","boundMethod","_slicedToArray","_arr","_n","_d","_e","_s","_i","err","_iterableToArrayLimit","storage","createObject","FakeMap","size","entries","thisArg","pad","num","substr","globalCount","count","fingerprint","navigator","mimeTypes","userAgent","uuid","generate","timestamp","getTime","nextCounter","DOCUMENT","FUNCTION","ELEMENT_PROTOTYPE","Element","VALUE_GETTERS","DOM_DATA_BIND_PROP","UUID","bindCallTo","isPureObject","createComment","isTemplate","eleToStringValue","logError","createValueGetter","evalCode","trim","getNodeAttrNames","attrNames","attributes","domInsertBefore","newNode","referenceNode","domRemoveChild","childNode","FakeSet","queueCallback","cbList","COMMON_DESTROY_METHOD_NAME","k","baseMethods","isDestroyed","executeCallbacksNow","callOnDestroyCallback","onDestroy","getInstanceState","getFactory","staticMethods","extend","reduce","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","protoKey","getDestroyCallback","instanceState","stateStore","Node","Compose","ComposeConstructor","_len2","_key2","getNewConstructor","NodeHandler","_Compose","directive","directives","_directives","_directive","_node","tracker","stopWatchingAll","Directive","handler","handlerState","_tokenValueGetter","_attr","nodeType","cleanNode","NodeHandlerConstructor","TemplateInstance","docFrag","bindings","templateId","_frag","_bindings","_childNodes","childNodes","fromTemplateId","nodeEle","recover","html","viewTemplate","Template","applyBindingsToTemplateInstance","setData","ID","isAttached","TextBindingNodeHandler","_get2","nodeValue","_placeholderEle","_externalNodes","_template","_templateInst","isNull","isUndefined","setPlaceholder","DomDataBind","isCurrentExternal","storeExternals","removeExternals","newNodeEle","destroyTemplateView","TextBinding","_Directive","tokenText","_tokenText","DROPS_NODES_ON_CLONE","frag","createDocumentFragment","NODE_CONTAINS_MISSES_TEXT_NODES","div","text","contains","nodeSplitText","Text","splitText","reHasDataToken","RegExp","reTokenMatch","getNodeValue","hasToken","getBindingFor","eleToBindings","ignoredChildren","directiveIterator","attrName","attrValue","managesNode","elePlaceholder","manages","getArrayForNodeFromMap","getDirectiveForAttribute","fakeEle","addTextNodes","onlyElementsWithAttributes","findAllNodes","skip","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ignoredParent","compareDocumentPosition","return","child","lastIndex","childTokenMatches","exec","getTextBindingForToken","tokenTextNode","index","fixEmptyTextNode","tokenPlaceholder","processTextNode","directiveBindings","bindingEle","path","walkEle","parent","unshift","Directives","directivesInstances","getNodeAt","getNodeHandler","directiveInstances","directiveSignature","resultArr","hasChildNodes","firstChild","nextSibling","TEMPLATES","cacheKey","hasTemplate","$ele","Factory","binding","AttrDirective","_htmlAttr","_matches","directiveAttr","_isProp","domHasClass","el","cssClass","classList","domAddClass","classNameList","String","className","domRemoveClass","ClassDirective","newClasses","oldClasses","EACH","KEY_DIRECTIVE","destroyBinder","binder","_destroy","defaultRowKey","EachDirectiveNodeHandler","iterateOverList","_isSoleChild","hasDedicatedParent","_viewTemplate","usesKey","getKey","firstChildNode","setupViewTemplate","newList","listIterator","isEmptyList","binders","destroyChildBinders","bindersByKey","EachDirective","_parseDirectiveValue2","matches","argName","parseDirectiveValue","iteratorArgs","listVar","_iteratorArgs","parentEle","dataObj","rowData","newData","iterationDataList","isDataArray","currentBinders","binderToBeDestroyed","totalItems","_handler$_viewTemplat","$root","$parent","$data","getDataForIteration","rowKey","_loop","pos","positionRowInDom","_binderToBeDestroyed$","recycleBinderKey","destroyRowElement","_handler","binderIndex","defaultInsertMarkerElement","HtmlDirective","IfDirective","_temp","showElement","_renderedEle","_renderTemplate","teardown","matchesDirective","escapeString","isNumber","keyAliases","13","27","9","46","32","38","40","37","39","keyCodesAliases","OnDirectiveNodeHandler","setup","domEv","_this$_directive$_inf","_info","hasModifiers","modifiers","whichKey","which","_filter","KeyboardEvent","tokenValue","returnValue","$ev","handleEvent","once","stop","stopPropagation","prevent","preventDefault","_evListener","_eventName","OnDirective","directiveString","Boolean","parseDirectiveString","modifier","matchRegExp","PropDirective","_AttrDirective","ShowDirective","_class","_origDisplayStyle","style","display","eleStyleList","domSetStyle","styles","StyleDirective","DomDataBindAll","allDirectives","directiveName","BINDING","STATE_OBSERVABLE","DomDataBindElement","_ComponentElement","current","getDomDataBindMeta","scopeTemplate","stateSetter","setupState","_isSettingUp","stateGetter","addReactivityToState","getOwnPropertyDescriptors","_ref2","isGetterSetter","getterSetter","valueInitializer","notifier","thisContext","contextStorage","isNotifying","generatePropGetterSetter","DomDataBindEleProto","memberToApply","dataBoundTemplates","optionsOrClassDescriptor","opt","applyDirectiveToClass","classDescriptor","memberName","elements","SOURCE_SETUP","SOURCE_STYLES","STATE","SOURCES","CACHE","fromCharCode","getStyleEle","cssCode","styleEle","type","Icon","_decorate","_initialize","F","_ComponentElement2","static","iconUrl","reject","request","XMLHttpRequest","status","responseText","onerror","onabort","open","send","fontFaceCss","codepoint","code","parseInt","decorators","$icon","_handlePropChanges","_renderDone","iconSource","doSetup","getStyles","getIcon","_showIconElement","iconEle","TEMPLATE","boxicons","cdnUrl","iconInstance","fetchSvg","returnNewElement","handleReject","svgString","fromCodePoint","OFFICE_ICON_ELEMENT","ICON_TEMPLATE","IS_CODEPOINT","officeUiFabric","isIconLoaded","iconMap","iconAliases","IconClass","setupFont","getFontFaceCss","twemoji","getSvgImgNameFromCode","domToggleClass","toggle","ConfirmAction","hostStyles","_$confirm","$","_handleShowHideConfirm","_handleConfirm","_handlePropsChange","disabled","TodoInput","focus","TodoAction","TodoItem","_docEv","_newDescription","showOnHoverStyles","_removeDocEv","_getDescription","noEdit","edit","displayView","_setupDocEv","editView","_emitSave","noCheck","TodoAdd","todoInputTagName","TodoList","_this$constructor","todoItemTagName","todoAddTagName","newItem","title","todoData","TodoList_TodoList","TodoItem_TodoItem","TodoAdd_TodoAdd"],"mappings":"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","file":"todo-list-element.legacy.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TodoListElement\"] = factory();\n\telse\n\t\troot[\"TodoListElement\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","\r\nexport const GLOBAL = (() => {\r\n    const undef = 'undefined';\r\n    /* global self, window, global */\r\n    if (typeof window !== undef) { return window; }\r\n    if (typeof global !== undef) { return global; }\r\n    if (typeof self !== undef) { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;","\n        var result = require(\"!!../../../../css-loader/index.js??ref--7-oneOf-1-1!./host.css?inline\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","\n        var result = require(\"!!../../node_modules/css-loader/index.js??ref--7-oneOf-1-1!./show-on-hover.css?inline\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host {\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    box-sizing: border-box;\\r\\n    font-family: var(--theme-font-family, Arial);\\r\\n    color: var(--theme-color-fg, black);\\r\\n    font-size: var(--theme-font-size, 16px);\\r\\n}\\r\\n* {\\r\\n    box-sizing: border-box;\\r\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".show-on-hover {\\r\\n    opacity: 0;\\r\\n    transition: opacity 0.5s;\\r\\n}\\r\\n:host(:hover) .show-on-hover {\\r\\n    opacity: 0.9;\\r\\n}\", \"\"]);\n\n// exports\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\r\n * return a value to a given method\r\n *\r\n * @function\r\n * @param {Function} fn\r\n * @param {*} ctx The context to be assigned to `fn`\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * f = functionBin(function() { console.log(`Hello ${this.name}`); }, { name: \"Jackson\" });\r\n * f(); // => \"Hello Jackson\"\r\n */\r\nexport const functionBind = Function.bind.call.bind(Function.bind);\r\n\r\n/**\r\n * return a bound `.call` to the given method.\r\n *\r\n * @type function\r\n * @param {Function} fn\r\n * @return {Function}\r\n * @example\r\n *\r\n * forEach = functionBindCall(Array.prototype.forEach);\r\n * // same as doing: Array.prototype.forEach.call (but returns a new \"call\" method);\r\n */\r\nexport const functionBindCall = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object ===============================================================================\r\nexport const toString                 = functionBindCall(Object.prototype.toString);\r\nexport const isObject                 = obj => toString(obj) === \"[object Object]\";\r\nexport const isString                 = obj => toString(obj) === \"[object String]\";\r\nexport const isFunction               = obj => toString(obj) === \"[object Function]\";\r\nexport const isNull                   = obj => toString(obj) === \"[object Null]\";\r\nexport const isUndefined              = obj => toString(obj) === \"[object Undefined]\";\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\nexport const getPropertyDescriptor    = (value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    const descriptor = {\r\n        configurable,\r\n        enumerable\r\n    };\r\n\r\n    if (getter || setter) {\r\n        descriptor.get = getter;\r\n        descriptor.set = setter;\r\n    } else {\r\n        descriptor.writable = writable;\r\n        descriptor.value = value;\r\n    }\r\n    return descriptor;\r\n};\r\nexport const defineProperty = (obj, prop, value, getter, setter, configurable = true, enumerable = false, writable = true) => {\r\n    objectDefineProperty(obj, prop, getPropertyDescriptor(value, getter, setter, configurable, enumerable, writable));\r\n    return obj;\r\n};\r\n\r\n\r\n// Array ===============================================================================\r\nconst arr = [];\r\nexport const isArray        = Array.isArray;\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\r\nexport const arraySlice    = functionBindCall(arr.slice);\r\n\r\n\r\n// Logging ===============================================================================\r\nexport const consoleLog = console.log; // eslint-disable-line\r\nexport const consoleError = console.error || consoleLog; // eslint-disable-line\r\nexport const consoleWarn = console.warn || consoleLog; // eslint-disable-line\r\n\r\n\r\n// Iterators ===============================================================================\r\nexport const SymbolIterator = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n\r\n// DOM ===============================================================================\r\n// *** In a NodeJS env - set HTMLElement to an empty object ***\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (typeof HTMLElement === \"undefined\") {\r\n        global.HTMLElement = class {}; // eslint-disable-line\r\n        global.document = class {};\r\n    }\r\n    consoleWarn(\"DEPRECATION WARNING: DOM aliases exposed via '@purtuga/common/src/jsutils/runtime-aliases.js' no longer valid. Use '@purtuga/common/src/domutils/dom-runtime-aliases.js' instead\");\r\n}\r\n// *!*!*!*!*!      IMPORTANT      *!*!*!*!*!!*\r\n//      THESE ARE DEPRECATED AND MOVED TO\r\n//      src/domutils/dom-runtime-aliases.js\r\nconst HTMLElementPrototype = HTMLElement.prototype;\r\nexport const doc = document;\r\nexport const head = doc.head;\r\nexport const createDocFragment = () => doc.createDocumentFragment();\r\nexport const createElement = tagName => doc.createElement(tagName);\r\nexport const createTextNode = data => doc.createTextNode(data || \"\");\r\nexport const appendChild = functionBindCall(HTMLElementPrototype.appendChild);\r\nexport const insertBefore = functionBindCall(HTMLElementPrototype.insertBefore);\r\nexport const hasAttribute = functionBindCall(HTMLElementPrototype.hasAttribute);\r\nexport const getAttribute = functionBindCall(HTMLElementPrototype.getAttribute);\r\nexport const setAttribute = functionBindCall(HTMLElementPrototype.setAttribute);\r\nexport const removeAttribute = functionBindCall(HTMLElementPrototype.removeAttribute);\r\nexport const isDocFragment = node => toString(node) === \"[object DocumentFragment]\";\r\n","import {isObject} from \"./runtime-aliases.js\";\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)) {\r\n                if (\r\n                    deepMerge &&\r\n                    isObject(response[key]) &&\r\n                    isObject(mergeObjects[i][key])\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n\r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/* global setImediate:true */\r\nlet reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTickPromise(fn) {\r\n            resolved.then(fn).catch(e => console.error(e)); // eslint-disable-line\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTickSetTimeout(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nlet isQueued = false;\r\nconst queuedCallbacks = new Set();\r\nlet i, t;\r\nconst flushQueue = () => {\r\n    const callbacks = [ ...queuedCallbacks ];\r\n    queuedCallbacks.clear();\r\n    isQueued = false;\r\n    for (i = 0, t = callbacks.length; i < t; i++) {\r\n        callbacks[i]();\r\n    }\r\n};\r\n\r\n/**\r\n * Queues a callback to be executed on nextTick. Unlike calling `nextTick` directly\r\n * `queue()` will ensure that the same callback is not executed more than once when\r\n * `nextTick` runs.\r\n *\r\n * @param {Function} callback\r\n */\r\nfunction queueForNextTick(callback) {\r\n    queuedCallbacks.add(callback);\r\n    if (!isQueued) {\r\n        isQueued = true;\r\n        nextTick(flushQueue);\r\n    }\r\n}\r\n\r\n/**\r\n * Queue a callback for next tick\r\n * @type {queueForNextTick}\r\n */\r\nnextTick.queue = queueForNextTick;\r\n\r\n//-----------------------------------------------------------[ EXPORTS ]---\r\nexport default nextTick;\r\nexport {\r\n    nextTick,\r\n    queueForNextTick\r\n}\r\n","/**\r\n * Check if the given `this` value matches its own Constructor's prototype, and\r\n * if so, throw an error.\r\n * Good to use with lazy properties that set themselves up on first access\r\n *\r\n * @param {Object} THIS\r\n * @throws\r\n */\r\nexport function throwIfThisIsPrototype(THIS) {\r\n    if (THIS.constructor && THIS === THIS.constructor.prototype) {\r\n        throw new Error(\"Can not be accessed directly on constructor.prototype!\");\r\n    }\r\n}","/**\r\n * Adds an event handler to a DOM element and returns back an\r\n * object that allows for removal of the event.\r\n *\r\n * @function domAddEventListener\r\n *\r\n * @param {HTMLElement} ele\r\n * @param {String} event\r\n *  The event to listen to (ex. `click`). Multiple events can be defined\r\n *  by separating them with whitespace\r\n * @param {Function} callback\r\n * @param {Boolean} [capture]\r\n *\r\n * @return DOMEventListener\r\n *\r\n * @example\r\n *\r\n * var listener = domAddEventHandler(myEle, \"click\", function(){});\r\n * ...\r\n * listener.remove();\r\n */\r\nexport function domAddEventListener(ele, event, callback, capture) {\r\n    let events      = event.split(/\\s+/);\r\n    let evListeners = {};\r\n\r\n    events.forEach(evName => {\r\n        ele.addEventListener(evName, callback, capture);\r\n        evListeners[evName] = {\r\n            remove: () => ele.removeEventListener(evName, callback, capture)\r\n        }\r\n    });\r\n\r\n    /**\r\n     * A DOM Event listener.\r\n     *\r\n     * @typedef {Object} DOMEventListener\r\n     *\r\n     * @property {Function} remove\r\n     * @property {Object} listeners\r\n     *  List of listeners that were bound to the DOM element. Each listeners has a\r\n     *  corresponding `.remove()` method.\r\n     */\r\n    return Object.create({\r\n        listeners: evListeners,\r\n        remove: function () {\r\n            events.forEach(evName => evListeners[evName].remove());\r\n        }\r\n    });\r\n}\r\nexport default domAddEventListener;\r\n","/**\r\n * Finds Elements within a given HTML Element using `querySelectorAll` and\r\n * return an Array with those elements.\r\n *\r\n * @function domFind\r\n *\r\n * @param {HTMLElement} domEle\r\n * @param {String} selector\r\n *\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function domFind(domEle, selector){\r\n    return Array.prototype.slice.call(domEle.querySelectorAll(selector));\r\n}\r\nexport default domFind;\r\n","// POLYFILL FOR WeakMap\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nvar FakeWeakMap;\r\nif (typeof WeakMap === 'undefined') {\r\n    (function() {\r\n        var defineProperty = Object.defineProperty;\r\n        var counter = Date.now() % 1e9;\r\n\r\n        var WeakMap = FakeWeakMap = function() {\r\n            this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n        };\r\n\r\n        WeakMap.prototype = {\r\n            set: function(key, value) {\r\n                var entry = key[this.name];\r\n                if (entry && entry[0] === key)\r\n                    entry[1] = value;\r\n                else\r\n                    defineProperty(key, this.name, {value: [key, value], writable: true});\r\n                return this;\r\n            },\r\n            get: function(key) {\r\n                var entry;\r\n                return (entry = key[this.name]) && entry[0] === key ?\r\n                    entry[1] : undefined;\r\n            },\r\n            // [pt] Quotes around the delete property needed for IE8\r\n            \"delete\": function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry || entry[0] !== key) return false;\r\n                entry[0] = entry[1] = undefined;\r\n                return true;\r\n            },\r\n            has: function(key) {\r\n                var entry = key[this.name];\r\n                if (!entry) return false;\r\n                return entry[0] === key;\r\n            }\r\n        };\r\n\r\n        window.WeakMap = WeakMap;\r\n    })();\r\n} else {\r\n    FakeWeakMap = WeakMap\r\n}\r\n/* jshint ignore:end */\r\nexport { FakeWeakMap as WeakMap };\r\nexport default FakeWeakMap;\r\n","import {WeakMap} from \"./WeakMap\";\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n","const LISTENER_STORAGE = Symbol(\"state\");\r\n\r\n/**\r\n * Supper tiny minimalist EventEmitter\r\n * @implements MinimalEventEmitter\r\n */\r\nexport class Ev {\r\n    on(evName, callback) {\r\n        getStoreFor(this, evName).add(callback);\r\n        /**\r\n         * @typedef {Function} EvOff\r\n         */\r\n        return () => getStoreFor(this, evName).delete(callback);\r\n    }\r\n\r\n    emit(evName, data) {\r\n        getStoreFor(this, evName).forEach(callback => callback(data));\r\n    }\r\n\r\n    clear() {\r\n        getStoreFor(this).clear();\r\n    }\r\n}\r\n\r\n/**\r\n * @private\r\n * @return {Map|Set}\r\n *  If called with no `evName`, then the entire store is returned (a `Map`)\r\n */\r\nfunction getStoreFor(inst, evName) {\r\n    if (!inst[LISTENER_STORAGE]) {\r\n        inst[LISTENER_STORAGE] = new Map();\r\n    }\r\n    if (!evName) {\r\n        return inst[LISTENER_STORAGE];\r\n    }\r\n    if (!inst[LISTENER_STORAGE].has(evName)) {\r\n        inst[LISTENER_STORAGE].set(evName, new Set());\r\n    }\r\n    return inst[LISTENER_STORAGE].get(evName);\r\n}\r\n\r\n\r\n/**\r\n * Minimal EventEmitter interface provinding only the basics\r\n *\r\n * @interface MinimalEventEmitter\r\n */\r\n\r\n/**\r\n * Set an event listener\r\n * @function\r\n * @name MinimalEventEmitter#on\r\n * @param {String} evName\r\n * @param {Function} callback\r\n * @returns {EvOff}\r\n */\r\n\r\n/**\r\n * Emit an event\r\n *\r\n * @function\r\n * @name MinimalEventEmitter#emit\r\n * @param {String} evName\r\n * @param {*} data\r\n */\r\n\r\n/**\r\n * Clear the all the event listeners\r\n * @function\r\n * @name MinimalEventEmitter#clear\r\n */","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, SymbolIterator, { value(){ return this; } });\r\n\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\";\r\n\r\n//============================================================\r\nconst UNIQUE = Math.random().toString(36).substring(7);\r\nlet COUNTER = 1;\r\nconst SYMBOL_PROTOTYPE = {\r\n    toString() {\r\n        return `Symbol(${this.description}).${this._id}`;\r\n    },\r\n    valueOf() {\r\n        return this.toString();\r\n    }\r\n};\r\n\r\n\r\nexport const Symbol = GLOBAL.Symbol || FakeSymbol;\r\nexport default Symbol;\r\n\r\nexport function FakeSymbol(description) {\r\n    if (this instanceof FakeSymbol) {\r\n        throw new TypeError(\"FakeSymbol is not a constructor\");\r\n    }\r\n    return Object.create(SYMBOL_PROTOTYPE, {\r\n        description: {\r\n            value: arguments.length ? description : \"\"\r\n        },\r\n        _id: {\r\n            value: `${UNIQUE}.${COUNTER++}`\r\n        }\r\n    });\r\n}\r\n\r\nFakeIterator.iterator = FakeIterator;\r\n","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport dataStore from \"@purtuga/common/src/jsutils/dataStore\"\r\nimport {Ev} from \"@purtuga/common/src/jsutils/Ev\"\r\nimport { isArray, objectKeys } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {Symbol} from \"@purtuga/common/src/jsutils/Symbol\"\r\n\r\n//============================================================================\r\nexport const PRIVATE = dataStore.create();\r\nexport const STATE_SYMBOL = Symbol(\"state\");\r\n\r\n/**\r\n * Checks if the element has an attribute set that matches any of the aliases for a prop\r\n *\r\n * @param {ComponentElement} ele\r\n * @param {ComponentElement~PropDefinition} propDef\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function elementHasAttributeForProp(ele, propDef) {\r\n    return propDef.aliases.some(propAlias => ele.hasAttribute(propAlias));\r\n}\r\n\r\n/**\r\n * Get the prop value from the possible HTML attributes (propName + aliases)\r\n *\r\n * @param ele\r\n * @param propDef\r\n * @returns {string}\r\n */\r\nexport function geAttributeValueForProp(ele, propDef) {\r\n    let attrVal = \"\";\r\n    propDef.aliases.some(propAlias => {\r\n        if (ele.hasAttribute(propAlias)) {\r\n            attrVal = ele.getAttribute(propAlias);\r\n            return true;\r\n        }\r\n    });\r\n    return attrVal;\r\n}\r\n\r\nexport function getState(instance) {\r\n    if (!PRIVATE.has(instance)) {\r\n        let state = {\r\n            isCssScopingDone: false,\r\n            templateEle: null,\r\n            ev: new Ev(),\r\n            destroyCallbacks: [],\r\n            destroyQueued: null,\r\n            isMounted: false\r\n        };\r\n\r\n        PRIVATE.set(instance, state);\r\n    }\r\n    return PRIVATE.get(instance);\r\n}\r\n\r\n\r\n/**\r\n * Returns a kebab-case representation of the given string on input. Essentially, replaces\r\n * each Capital letter with a `-` followed by that letter in lower case.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n *\r\n * @example\r\n *\r\n * getKebabCase(\"Paul\"); // => -paul\r\n * getKebabCase(\"paulTavares\"); // => paul-tavares\r\n */\r\nexport function getKebabCase(str) {\r\n    return str.replace(/([A-Z])/g, (match, p1) => \"-\" + p1.toLowerCase())\r\n}\r\n\r\n\r\n/**\r\n * Given a string in kebab case (ex. paul-tavares), this will return a CamelCase\r\n * representation of that string.\r\n *\r\n * @param {String} str\r\n *\r\n * @return {String}\r\n */\r\nexport function getCamelCase(str) {\r\n    return str.replace(/(-[a-z])/g, (match, p1) => p1.toUpperCase().substr(1))\r\n}\r\n\r\n/**\r\n *\r\n * @param ComponentClass\r\n * @returns {Object<String,ComponentElement~PropDefinition>}\r\n */\r\nexport function getPropsDefinition(ComponentClass) {\r\n    let state = getComponentClassState(ComponentClass);\r\n\r\n    if (!state.propsDef) {\r\n        const statePropsDef = state.propsDef = {};\r\n        const componentPropsDef = ComponentClass.propsDef;\r\n\r\n        // The props are stored internally (weakmap) once for the Component Class.\r\n        // The internal definition has the \"aliases\" expanded as well.\r\n        if (componentPropsDef) {\r\n            objectKeys(componentPropsDef).forEach(propName => {\r\n                statePropsDef[propName] = componentPropsDef[propName];\r\n                // expand aliases as well\r\n                if (isArray(statePropsDef[propName].aliases)) {\r\n                    const propAliasDef = objectExtend({}, componentPropsDef[propName], { _isAlias: true });\r\n                    statePropsDef[propName].aliases.forEach(\r\n                        propNameAlias => !statePropsDef[propNameAlias] &&\r\n                                        (statePropsDef[propNameAlias] = propAliasDef));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return state.propsDef;\r\n}\r\n\r\n/**\r\n * Returns the internal state for the Component Class\r\n *\r\n * @param {ComponentElement} ComponentClass\r\n *\r\n * @return {Object}\r\n */\r\nexport function getComponentClassState(ComponentClass) {\r\n    if (!PRIVATE.has(ComponentClass)) {\r\n        PRIVATE.set(ComponentClass, {\r\n            propsDef: null,\r\n            templateEle: null,\r\n            observedAttrs: null\r\n        });\r\n    }\r\n    return PRIVATE.get(ComponentClass);\r\n}\r\n\r\n\r\n","//--------------------------------------------------------------\r\n// Utilities to work with polyfills like ShadyCSS\r\n//--------------------------------------------------------------\r\nimport {GLOBAL} from \"@purtuga/common/src/jsutils/getGlobal\"\r\nimport {domFind} from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {createElement, head, isString} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {getComponentClassState} from \"./utils.js\"\r\n\r\n//===========================================================================================\r\nexport const supportsShadyCSS = () => !!GLOBAL.ShadyCSS;\r\nconst removeElement = ele => ele.parentNode.removeChild(ele);\r\n\r\n/**\r\n * if runtime env. supports shadowRoot\r\n * @returns {boolean}\r\n */\r\nexport function supportsNativeShadowDom() {\r\n    return (head.createShadowRoot || head.attachShadow) &&\r\n        (!supportsShadyCSS() || GLOBAL.ShadyCSS.nativeShadow)\r\n}\r\n\r\n/**\r\n * Scopes the CSS of a given template for the Component by using ShadyCSS.\r\n *\r\n * @param template\r\n * @param eleInstance\r\n */\r\nexport function scopeCss (template, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.prepareTemplate(template, eleInstance.constructor.tagName);\r\n    }\r\n}\r\n\r\n/**\r\n * Prepares the rendered content by ensuring that the the first time the Element is\r\n * rendered, that the styles are extracted and scoped on the page (vai ShadyCSS). From\r\n * that point forward, the rendered content will only have its element css classes scoped.\r\n *\r\n * @param renderedContent\r\n * @param componentInstance\r\n *\r\n * @return {HTMLElement|DocumentFragment}\r\n */\r\nexport function prepareRenderedContent(renderOutput, eleInstance) {\r\n    if (supportsShadyCSS()) {\r\n        const isRenderOutputString = isString(renderOutput);\r\n        const ComponentClassState = getComponentClassState(eleInstance.constructor);\r\n        let {templateEle} = ComponentClassState;\r\n        let view;\r\n\r\n        // If Styles have not yet been scoped in the HEAD of the element for this CE Class,\r\n        // then do it now this occurs only once per Component.\r\n        if (!templateEle) {\r\n            ComponentClassState.templateEle = templateEle = createElement(\"template\");\r\n            if (isRenderOutputString || renderOutput.innerHTML) {\r\n                templateEle.innerHTML = renderOutput.innerHTML || renderOutput;\r\n            } else {\r\n                // Maybe its a DocumentFragment\r\n                templateEle.appendChild(renderOutput.cloneNode(true));\r\n            }\r\n            scopeCss(templateEle , eleInstance);\r\n        }\r\n\r\n        // If the input was a string, then get a document fragment out of it\r\n        if (isRenderOutputString) {\r\n            view = createElement(\"template\");\r\n            view.innerHTML = renderOutput;\r\n        } else {\r\n            view = renderOutput;\r\n        }\r\n\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        // FIXME: prepareTemplateDom now seems to assume/expect the input to be an instance HTMLElement - they are doing a getAttribute() on it.\r\n        // let view2;\r\n        // if (!view.content) {\r\n        //     view2 = view;\r\n        //     view = document.createElement(\"div\");\r\n        //     view.appendChild(view2);\r\n        //     view.content = view;\r\n        // }\r\n        //\r\n        // GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n        //\r\n        // // Remove <style> element\r\n        // domFind(view, \"style\").forEach(removeElement);\r\n        //\r\n        // if (view2) {\r\n        //     [].slice.call(view.childNodes).forEach(node => view2.appendChild(node));\r\n        //     view = view2;\r\n        // }\r\n\r\n\r\n        // Need to prepare this DOM by calling ShadyCSS.prepareTemplateDom so\r\n        // that scoping classes are applied\r\n        if (!view.content) { // FIXME: should use isTemplate()\r\n            view.content = view;\r\n        }\r\n\r\n        // FIXME: this is dangerous because it expects a certain internal implementation in prepareTemplateDom()\r\n        GLOBAL.ShadyCSS.prepareTemplateDom(view, eleInstance.constructor.tagName);\r\n\r\n        // TODO: any momoization can happen here?\r\n\r\n        // Remove <style> element\r\n        domFind(view.content || view, \"style\").forEach(removeElement);\r\n\r\n        if (isRenderOutputString) {\r\n            view = document.importNode(view.content, true);\r\n        }\r\n\r\n        return view;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Styles the instance of a custom element using ShadyCSS\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function styleComponentInstanceElement(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleElement(componentInstance);\r\n    }\r\n}\r\n\r\n/**\r\n * Restyles a component's sub-tree. Use it when DOM might have been altered dynamically\r\n * and polyfilled styles needs to be applied.\r\n *\r\n * @param {HTMLElement} componentInstance\r\n */\r\nexport function reStyleComponentInstanceSubtree(componentInstance) {\r\n    if (supportsShadyCSS()) {\r\n        GLOBAL.ShadyCSS.styleSubtree(componentInstance)\r\n    }\r\n}","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {nextTick} from \"@purtuga/common/src/jsutils/nextTick.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {\r\n    objectKeys,\r\n    defineProperty,\r\n    consoleWarn,\r\n    head\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport domAddEventListener from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {\r\n    getState,\r\n    PRIVATE,\r\n    getPropsDefinition,\r\n    getComponentClassState,\r\n    elementHasAttributeForProp,\r\n    geAttributeValueForProp\r\n} from \"./utils.js\"\r\nimport {\r\n    styleComponentInstanceElement,\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom,\r\n    reStyleComponentInstanceSubtree\r\n} from \"./polyfill-support.js\"\r\n\r\n//============================================================================\r\nconst SHADOW_DOM_SUPPORTED = head.createShadowRoot || head.attachShadow;\r\nconst EV_DEFAULT_INIT = { bubbles: true, cancelable: true, composed: true };\r\nconst CE_REGISTRY = window.customElements;\r\nconst PROPS_NOOP = Object.freeze(Object.create(null));\r\nconst EVENT_ANY = Symbol(\"ev.props.any\");\r\nlet lazySetupUnderway = false;\r\n\r\n/**\r\n * A generic class for building widgets based on HTML Custom Elements.\r\n *\r\n * @extends HTMLElement\r\n *\r\n */\r\nclass ComponentElement extends HTMLElement {\r\n    constructor(...args) {\r\n        const self = super(...args) || this;\r\n        setupComponent(self);\r\n        return self;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Static Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props definition\r\n     * @name propsDef\r\n     * @type {Object<String,ComponentElement~PropDefinition>}\r\n     */\r\n    static propsDef = PROPS_NOOP;\r\n\r\n    /**\r\n     * Return default registration tag name\r\n     *\r\n     * @type {String}\r\n     */\r\n    static get tagName() { throw new Error(\"tagName not defined\") }\r\n\r\n    /**\r\n     * Registers the web component. Uses tagName as default input param\r\n     */\r\n    static define(name) {\r\n        name = name || this.tagName;\r\n\r\n        if (CE_REGISTRY.get(name)) {\r\n            if (CE_REGISTRY.get(name) !== this) {\r\n                consoleWarn(`${name} is already a defined in customElementsRegistry as a different Class`);\r\n            }\r\n            return;\r\n        }\r\n\r\n        CE_REGISTRY.define(name, this);\r\n    }\r\n\r\n    /**\r\n     * The number of milliseconds to wait after an element has been detached from DOM before\r\n     * the `.destroy()` method is auto executed.\r\n     *\r\n     * @type {Number}\r\n     */\r\n    static get delayDestroy() { return 0; }\r\n\r\n    /**\r\n     * If Shadow DOM should be used. Default `true`\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    static get useShadow() { return true; }\r\n\r\n    /**\r\n     * The value for the `mode` option that will be used on the `attachShadow` method.\r\n     *\r\n     * @type {string}\r\n     */\r\n    static get shadowMode() { return \"open\"; }\r\n\r\n    /**\r\n     * Returns the HTML template for the component. Could also be a Template html element\r\n     *\r\n     * @type {String|HTMLTemplateElement}\r\n     */\r\n    static get template() {\r\n        // fixme: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.template is Deprecated! Use .render() method`);\r\n        }\r\n        return \"<div></div>\";\r\n    }\r\n\r\n    /**\r\n     * Renderer for the template and return what should be inserted into shadowDom.\r\n     * By default, this base class will simply clone the `template` defined in the\r\n     * static property above. This method will called prior to doing that, and if\r\n     * it returns a `truthy` value, then its assume to be either an HTMLElement or\r\n     * DocumentFragment with the element's instance UI (which will be inserted into\r\n     * shadowDom).\r\n     *\r\n     * **NOTE**: Should always use `getComponentInstanceTemplate` or `getComponentTemplate`\r\n     * to retrieve the template or its content, since it is manipulated in browsers that\r\n     * use the polyfills to make the template compatible in those platforms.\r\n     *\r\n     * @param {ComponentElement} eleInstance\r\n     *  The `ComponentElement` instance being initialized\r\n     *\r\n     * @return {HTMLElement|DocumentFragment}\r\n     */\r\n    static renderTemplate(/*eleInstance*/) {\r\n        // FIXME: remove post v2.\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            consoleWarn(`${this.name}.renderTemplate is NO LONGER SUPPORTED! Use .render() method`);\r\n        }\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * The default initialization options for the `emit()` method.\r\n     * See [Event.contructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @type EventInit\r\n     */\r\n    static get eventInitOptions() { return EV_DEFAULT_INIT; }\r\n\r\n    // Returns the list (Array) of props that were marked as `@attr`\r\n    static get observedAttributes() {\r\n        let state = getComponentClassState(this);\r\n\r\n        if (!state.observedAttrs) {\r\n            const propList = getPropsDefinition(this);\r\n            state.observedAttrs = objectKeys(propList).filter(p => propList[p].attr);\r\n        }\r\n\r\n        return state.observedAttrs;\r\n    }\r\n\r\n    //==============================================================\r\n    //  Instance Members\r\n    //==============================================================\r\n\r\n    /**\r\n     * The Component's props.\r\n     * @type {Object}\r\n     */\r\n    get props() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        lazySetupUnderway = true;\r\n\r\n        const propDefinitions = getPropsDefinition(this.constructor);\r\n        let props = {};\r\n        const ev = getState(this).ev;\r\n        const notifyAnyListeners = () => ev.emit(EVENT_ANY);\r\n        notifyAnyListeners._for = this;\r\n        notifyAnyListeners._ev = EVENT_ANY;\r\n\r\n\r\n        objectKeys(propDefinitions).forEach(propName => {\r\n            if (!propDefinitions[propName] || !propDefinitions[propName]._isAlias) {\r\n                let propValue = propDefinitions[propName].default.call(this);\r\n                const notifyPropListeners = () => ev.emit(propName);\r\n\r\n                notifyPropListeners._for = this;\r\n                notifyPropListeners._ev = propName;\r\n\r\n                // FIXME: Can this be more efficient? create just one prop notifier funciton and store list of props in an outer-scoped array?\r\n\r\n                if (\r\n                    propDefinitions[propName].attr &&\r\n                    !propDefinitions[propName].boolean &&\r\n                    elementHasAttributeForProp(this, propDefinitions[propName])\r\n                ) {\r\n                    propValue = geAttributeValueForProp(this, propDefinitions[propName]);\r\n                } else if (this.hasOwnProperty(propName)) {\r\n                    // if the current element has a prop by this same name set directly on the instance,\r\n                    // then this implies that it was set prior to the Element being upgraded.\r\n                    propValue = this[propName];\r\n                    delete this[propName]; // this sets functionality back to the getter/setter.\r\n                }\r\n\r\n                defineProperty(\r\n                    props,\r\n                    propName,\r\n                    undefined,\r\n                    function getProp () {\r\n                        return propValue;\r\n                    },\r\n                    newValue => {\r\n                        newValue = propDefinitions[propName].filter.call(this, newValue);\r\n\r\n                        // Only schedule event notification is the component is mounted\r\n                        if (this.isMounted) {\r\n                            nextTick.queue(notifyPropListeners);\r\n                            nextTick.queue(notifyAnyListeners);\r\n                        }\r\n\r\n                        return propValue = newValue;\r\n                    },\r\n                    true,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n\r\n        defineProperty(this, \"props\", props, undefined, undefined, true, true, false);\r\n        lazySetupUnderway = false;\r\n\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * Returns a boolean indicating if Component has all required props fulfilled\r\n     */\r\n    get hasRequiredProps() {\r\n        throwIfThisIsPrototype(this);\r\n        return objectKeys(this.constructor.propsDef)\r\n            .filter(propName => this.constructor.propsDef[propName].required)\r\n            .every(propName => !!this.props[propName]);\r\n    }\r\n\r\n    /**\r\n     * returns a boolean indicating if component is connected to DOM\r\n     * @return {Boolean}\r\n     */\r\n    get isMounted() {\r\n        throwIfThisIsPrototype(this);\r\n        return getState(this).isMounted\r\n    }\r\n\r\n    /**\r\n     * Pointer to the UI of the Component. Value is will either be the `showdowRoot` or the element\r\n     * itself.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    get $ui() {\r\n        return this._$ui;\r\n    }\r\n\r\n    /**\r\n     * Destroy the instance of the widget\r\n     */\r\n    destroy() {\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            PRIVATE.delete(this);\r\n            if (state.destroyQueued) {\r\n                clearTimeout(state.destroyQueued);\r\n                state.destroyQueued = null;\r\n            }\r\n            state.destroyCallbacks.splice(0).forEach(cb => cb());\r\n        }\r\n        if (this.parentNode) {\r\n            this.parentNode.removeChild(this);\r\n        }\r\n        this.didDestroy();\r\n    }\r\n\r\n    /**\r\n     * Adds a callback to be executed when Component is destroyed.\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback) {\r\n        getState(this).destroyCallbacks.push(callback);\r\n    }\r\n\r\n\r\n    /**\r\n     * Find an element in the `$ui` (alias for `querySelector()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @return {HTMLElement}\r\n     */\r\n    $(selector) {\r\n        return this.$ui.querySelector(selector);\r\n    }\r\n\r\n    /**\r\n     * Returns an array with matched set of DOM elements based on the given selector.\r\n     * (alias for `querySelectorAll()`)\r\n     *\r\n     * @param {String} selector\r\n     *\r\n     * @returns {Array<HTMLElement>}\r\n     */\r\n    $$(selector) {\r\n        return domFind(this.$ui, selector);\r\n    }\r\n\r\n    /**\r\n     * Updates the component's DOM by running through the render lifecycle of:\r\n     *\r\n     *  `willRender()`\r\n     *  `render()`\r\n     *  `didRender()`\r\n     *\r\n     * This method probably should not be called directly. It is automatically\r\n     * called when props change\r\n     */\r\n    get update() {\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const _update = () => {\r\n            if (!this.isMounted) {\r\n                return;\r\n            }\r\n\r\n            const shouldRender = this.willRender();\r\n\r\n            if (\"boolean\" !== typeof shouldRender || shouldRender) {\r\n                this._setView(this.render());\r\n                this.didRender();\r\n            }\r\n        };\r\n\r\n        _update._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"update\", _update);\r\n        lazySetupUnderway = false;\r\n\r\n        return _update;\r\n    }\r\n\r\n    /**\r\n     * An instance bound method used to queue the render update cycle which is async (nextTick)\r\n     * @type Function\r\n     * @private\r\n     */\r\n    get queueUpdate() {\r\n        return this._queueUpdate;\r\n    }\r\n    get _queueUpdate() { // FIXME: remove this in favor of `queueUpdate()`\r\n        throwIfThisIsPrototype(this);\r\n\r\n        if (lazySetupUnderway) {\r\n            return undefined;\r\n        }\r\n\r\n        const __queueUpdate = () => {\r\n            nextTick.queue(this.update);\r\n        };\r\n\r\n        __queueUpdate._for = this;\r\n        lazySetupUnderway = true;\r\n        defineProperty(this, \"_queueUpdate\", __queueUpdate);\r\n        lazySetupUnderway = false;\r\n\r\n        return __queueUpdate;\r\n    }\r\n\r\n    /**\r\n     * Handles the render output - which normally means flush it ot DOM.\r\n     * Override for different render libraries\r\n     *\r\n     * @protected\r\n     * @param renderOutput\r\n     */\r\n    _setView(renderOutput) {\r\n        let view = renderOutput;\r\n\r\n        // If ShadowDom NOT supported, then on first render, we prepare the template\r\n        // which means styles will get scoped using ShadyCSS.\r\n        if (!supportsNativeShadowDom() && !this._polyfillDone) {\r\n            this._polyfillDone = true;\r\n            view = prepareRenderedContent(renderOutput, this) || renderOutput;\r\n        }\r\n\r\n        // If it looks like html, then use innerHTML\r\n        if (\"string\" === typeof view) {\r\n            this.$ui.innerHTML = view;\r\n        } else {\r\n            this.$ui.textContent = \"\";\r\n            this.$ui.appendChild(view);\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            reStyleComponentInstanceSubtree(this);\r\n        }\r\n    }\r\n\r\n    //--------------------------------------------------------------\r\n    //~~~~~~~~~~~~~~~~~~~~~~ LIFE CYCLE HOOKS ~~~~~~~~~~~~~~~~~~~~~~\r\n    //--------------------------------------------------------------\r\n\r\n    /**\r\n     * Called to initialize the component. At this point `this.$ui` has been set\r\n     * (to either `shadowRoot` or `this`), but nothing has ben rendered.\r\n     */\r\n    didInit() {\r\n        // FIXME: delete after v2\r\n        if (\"init\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.init() is Deprecated! Use .didInit()`);\r\n            }\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was mounted (attached to DOM)\r\n     */\r\n    didMount() {\r\n        // FIXME: delete after v2\r\n        if (\"ready\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.ready() is Deprecated! Use .didMount()`);\r\n            }\r\n            this.ready();\r\n        }\r\n        // FIXME: delete after v2\r\n        if (\"mounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.mounted() is Deprecated! Use .didMount()`);\r\n            }\r\n\r\n            // mounted() {}\r\n            this.mounted(); // FIXME: remove post v2\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component's render function is about to be called. if a `Boolean` `false` is\r\n     * returned, `render()` will be canceled.\r\n     * @return {Boolean}\r\n     */\r\n    willRender() {}\r\n\r\n    /**\r\n     * Render the Component's content.\r\n     *\r\n     * __IMPORTANT__: Note that by default, this view handler (`_setView`) does not support\r\n     * dynamic styles in polyfilled environments. Styles will be scooped only on first render.\r\n     *\r\n     * @return {String|HTMLElement|DocumentFragment}\r\n     */\r\n    render(){ return `<span></span>`; }\r\n\r\n    /**\r\n     * Component has been rendered and dates flushed to DOM\r\n     */\r\n    didRender() {}\r\n\r\n    /**\r\n     * Called if component has been initialized (`init()` has run).\r\n     */\r\n    didUnmount() {\r\n        // FIXME: delete after v2\r\n        if (\"unmounted\" in this) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                consoleWarn(`${this.constructor.name}.unmounted() is Deprecated! Use .didUnmount()`);\r\n            }\r\n            this.unmounted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component was destroyed (destroy callback were already called)\r\n     */\r\n    didDestroy() {}\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ EVENTEMITTER INTERFACE ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    /**\r\n     * Dispatches a native `CustomEvent`. The `data` provided will be available\r\n     * in the customEvent.detail property\r\n     *\r\n     * @param {String} eventName\r\n     * @param {*} [data]\r\n     * @param {EventInit} [eventInit=ComponentElement.eventInitOptions]\r\n     *  Any other options for the CustomEvent initialization.\r\n     *  See [Event.constructor]{@link http://devdocs.io/dom/event/event} for more.\r\n     *\r\n     * @example\r\n     *\r\n     * document.body.addEventListener(\"my-event\", function (ev) { console.log(ev.detail); });\r\n     *\r\n     * // My component\r\n     * myComponent.emit(\"my-event\", { msg: \"hello\" });\r\n     *\r\n     */\r\n    emit(eventName, data, eventInit) {\r\n        const eventNameLowercase = eventName.toLowerCase();\r\n        const event = new CustomEvent(\r\n            eventName,\r\n            objectExtend({}, this.constructor.eventInitOptions, eventInit, { detail: data })\r\n        );\r\n\r\n        if (\"function\" === typeof this[eventNameLowercase]) {\r\n            this[eventNameLowercase](event);\r\n        }\r\n\r\n        this.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Set an event listener on the current component\r\n     *\r\n     * @param {String} eventNames\r\n     *  One or more event names to listen for (space delimiter)\r\n     *\r\n     * @param {Function} callback\r\n     *\r\n     * @param {Boolean} [capture=false]\r\n     *\r\n     * @returns {DOMEventListener}\r\n     */\r\n    on(eventNames, callback, capture) {\r\n        return domAddEventListener(this, eventNames, callback, capture);\r\n    }\r\n\r\n    /**\r\n     * Add callback to be called when props change\r\n     *\r\n     * @param {Function} callback\r\n     * @param {String} [propName]\r\n     *  Optional. The specific prop to watch.\r\n     *\r\n     * @return {Function}\r\n     */\r\n    onPropsChange(callback, propName) {\r\n        return getState(this).ev.on(propName || EVENT_ANY, callback);\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~ NATIVE METHODS ~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    // Reflects changed html attributes to state.props\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const propsDef =  getPropsDefinition(this.constructor);\r\n        if (propsDef[name]) {\r\n            name = propsDef[name].name;\r\n        }\r\n        this.props[name] = newValue;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const state = getState(this);\r\n\r\n        if (state.destroyQueued) {\r\n            clearTimeout(state.destroyQueued);\r\n            state.destroyQueued = null;\r\n        }\r\n\r\n        if (!supportsNativeShadowDom()) {\r\n            styleComponentInstanceElement(this);\r\n        }\r\n\r\n        state.isMounted = true;\r\n        this.didMount();\r\n        this.update();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        // Delay calling .destroy() by 60s, just in case user re-attaches component back to dom.\r\n        // This seems to be currently the only way to ensure attached `onDestroy` logic run when\r\n        // the element is no longer needed.\r\n        if (PRIVATE.has(this)) {\r\n            const state = getState(this);\r\n            if (!state.destroyQueued) {\r\n                state.destroyQueued = setTimeout(this.destroy.bind(this), this.constructor.delayDestroy);\r\n            }\r\n            state.isMounted = false;\r\n        }\r\n\r\n        this.didUnmount();\r\n    }\r\n}\r\n\r\n\r\nfunction setupComponent (component) {\r\n    const { useShadow, shadowMode } = component.constructor;\r\n    if (useShadow && SHADOW_DOM_SUPPORTED) {\r\n        if (component.shadowRoot) {\r\n            component._$ui = component.shadowRoot;\r\n        }\r\n        else {\r\n            component._$ui = component.attachShadow({ mode: shadowMode });\r\n        }\r\n    }\r\n    else {\r\n        component._$ui = component;\r\n    }\r\n\r\n    component.onPropsChange(component.update);\r\n    component.didInit();\r\n}\r\n\r\n//=======================================================================================\r\n//                                                               MODULE EXPORTS\r\n//=======================================================================================\r\nexport default ComponentElement;\r\nexport { ComponentElement }\r\n","import objectExtend from \"@purtuga/common/src/jsutils/objectExtend\"\r\nimport {defineProperty, removeAttribute, setAttribute } from \"@purtuga/common/src/jsutils/runtime-aliases\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype\"\r\nimport {getKebabCase, elementHasAttributeForProp} from \"../utils\"\r\n\r\n//===============================================================================\r\nconst RE_UPPER_CASE_LETTERS = /[A-Z]/;\r\nconst NOOP = val => val;\r\n\r\n/**\r\n * Create a ComponentElement property.\r\n *\r\n * @param {Object|ComponentElement~PropDefinition} [options|Descriptor]\r\n *\r\n * @returns {Function|Descriptor}\r\n */\r\nexport function prop(options = {}) {\r\n    if (options.key && options.kind) {\r\n        return _propDecorator({}, options);\r\n    }\r\n    return _propDecorator.bind(null, options);\r\n}\r\n\r\nfunction _propDecorator(options, {key, initializer, descriptor}) {\r\n    const propDefinition = getPropSetup(\r\n        key,\r\n        initializer || descriptor.get,\r\n        descriptor.set,\r\n        options\r\n    );\r\n    const newDescriptor = getDecoratorDescriptor(key, key, propDefinition);\r\n\r\n    // Setup the aliases to proxy the values to the same `key`\r\n    if (propDefinition.aliases) {\r\n        newDescriptor.extras = propDefinition\r\n            .aliases\r\n            .filter(aliasName => aliasName !== key) // Skip the Key name, which is also in the list of aliases\r\n            .map(aliasName => getDecoratorDescriptor(aliasName, key));\r\n    }\r\n\r\n    return newDescriptor;\r\n\r\n    //--------------------------------------------------------------------\r\n    // typical Descriptor, for something done like:\r\n    //          @prop myTest = \"value here\"\r\n    //  {\r\n    //     \"kind\": \"field\",\r\n    //     \"key\": \"myTest\",\r\n    //     \"placement\": \"field\",\r\n    //     \"initializer\": function(){ return \"value here\"; },\r\n    //     \"descriptor\": {\r\n    //         \"configurable\": true,\r\n    //         \"writable\": true,\r\n    //         \"enumerable\": true\r\n    //     }\r\n    // }\r\n    //--------------------------------------------------------------------\r\n}\r\n\r\nfunction getDecoratorDescriptor(key, proxyToPropName, componentPropDefinition) {\r\n    const DecoratorDescriptor = {\r\n        key,\r\n        kind: \"method\",\r\n        placement: \"prototype\",\r\n        descriptor: {\r\n            configurable: true,\r\n            get() {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName];\r\n            },\r\n            set(newValue) {\r\n                throwIfThisIsPrototype(this);\r\n                return this.props[proxyToPropName] = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    if (componentPropDefinition) {\r\n        DecoratorDescriptor.finisher = function (Klass) {\r\n            // Create Class \"propsDef\" that inherits from super class\r\n            if (!Klass.hasOwnProperty(\"propsDef\")) {\r\n                defineProperty(\r\n                    Klass,\r\n                    \"propsDef\",\r\n                    objectExtend(Object.create(null), Klass.propsDef)\r\n                );\r\n            }\r\n            Klass.propsDef[key] = componentPropDefinition;\r\n        };\r\n    }\r\n\r\n    return DecoratorDescriptor;\r\n}\r\n\r\n\r\n/**\r\n * A property definition\r\n *\r\n * @private\r\n *\r\n * @param name\r\n * @param {Function} initializer\r\n * @param {Function} validator\r\n * @param {Object} propDef\r\n *\r\n * @returns {ComponentElement~PropDefinition}\r\n */\r\nfunction getPropSetup(name, initializer, validator, propDef) {\r\n    /**\r\n     * A Class prop definition\r\n     *\r\n     * @typedef {Object} ComponentElement~PropDefinition\r\n     * @property {String} name              Then name of the prop\r\n     * @property {Boolean} attr             Can the prop be set via an HTML attribute\r\n     * @property {Boolean} required         Is the prop required\r\n     * @property {Boolean} boolean          Is the prop value meant to be a boolean (note: also forces `attr` to true)\r\n     * @property {Function} default         Function that returns default value (the `getter` when decorator is used)\r\n     * @property {Function} filter          Function that filters the value being set (the `setter` when decorator is used)\r\n     * @property {Array<String>} aliases    An array of aliases for the prop, including the prop name itself\r\n     */\r\n    const propertyDefinition = objectExtend(\r\n        {\r\n            name,\r\n            attr: false,\r\n            required: false,\r\n            boolean: false,\r\n            default: initializer || NOOP,\r\n            filter: validator || NOOP,\r\n            aliases: [ name ]\r\n            // _isAlias: --- used in getPropsDefinition()\r\n        },\r\n        propDef\r\n    );\r\n\r\n    // If this is a boolean, then force `attr` to `true`, and\r\n    // redefine default adn filter values\r\n    if (propertyDefinition.boolean) {\r\n        propertyDefinition.attr = true;\r\n        propertyDefinition.default = propertyDefinition.filter = function (newValue) {\r\n            const realHtmlPropValue = elementHasAttributeForProp(this, propertyDefinition);\r\n\r\n            // If called with a Boolean, then it must have been set via a instance prop,\r\n            // and thus its value takes precedence over HTML property. In this case, we\r\n            // reflect the value to the HTML prop - because in most cases, styles are\r\n            // driven boolean attributes\r\n            if (\"boolean\" === typeof newValue) {\r\n                if (realHtmlPropValue !== newValue) {\r\n                    if (newValue) {\r\n                        setAttribute(this, name, newValue);\r\n                    } else {\r\n                        removeAttribute(this, name);\r\n                    }\r\n                }\r\n                return newValue;\r\n            }\r\n\r\n            return realHtmlPropValue;\r\n        }\r\n    }\r\n\r\n    // Add name lowercase alias - if applicable\r\n    if (name.toLowerCase() !== name) {\r\n        propertyDefinition.aliases.push(name.toLowerCase());\r\n    }\r\n\r\n    // If the prop name has upper case letters, then its possible that it is\r\n    // defined as camelCase - create ka-bab alias.\r\n    if (RE_UPPER_CASE_LETTERS.test(name)) {\r\n        propertyDefinition.aliases.push(getKebabCase(name));\r\n    }\r\n\r\n    return propertyDefinition;\r\n}\r\n","import {defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases\";\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\n/**\r\n * Binds the given method to the Class instance on first `get`.\r\n *\r\n * @return {Function|Object}\r\n */\r\nexport function bind(options) {\r\n    if (options.key && options.kind) {\r\n        return _bound(options);\r\n    }\r\n    return _bound;\r\n}\r\n\r\nfunction _bound(decoratorDescriptor) {\r\n    const {kind, key, descriptor} = decoratorDescriptor;\r\n    if (kind === \"method\" && descriptor.value) {\r\n        let isDoingLazySetup = false; // Fuck you IE!\r\n        const method = descriptor.value;\r\n\r\n        delete descriptor.value;\r\n        delete descriptor.writable;\r\n\r\n        descriptor.get = function () {\r\n            throwIfThisIsPrototype(this);\r\n\r\n            if (isDoingLazySetup) {\r\n                return;\r\n            }\r\n            isDoingLazySetup = true;\r\n\r\n            const boundMethod = method.bind(this);\r\n            defineProperty(this, key, boundMethod);\r\n            isDoingLazySetup = false;\r\n\r\n            return boundMethod;\r\n        }\r\n    }\r\n\r\n    return decoratorDescriptor;\r\n\r\n    // {\r\n    //     \"kind\": \"method\",\r\n    //     \"key\": \"private\",\r\n    //     \"placement\": \"prototype\",\r\n    //     \"descriptor\": {\r\n    //         \"writable\": true,\r\n    //         \"configurable\": true,\r\n    //         \"enumerable\": false,\r\n    //         \"value\": function(){}\r\n    //     }\r\n    // }\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import {throwIfThisIsPrototype} from \"./throwIfThisIsPrototype.js\";\r\n\r\n\r\n//=================================================================================\r\nconst storage = new WeakMap();\r\nconst createObject = () => Object.create(null);\r\n\r\n/**\r\n * Generate a getter/setter function to be used `Object.defineProperty` that allows\r\n * for a callback to be executed when the prop's value changes.\r\n *\r\n * @param {String} key\r\n *\r\n * @param {Function} [valueInitializer]\r\n *  A callback whose return value will be used as the initial value for the prop.\r\n *  If this is defined, then `value` argument will be ignored.\r\n * @param {*} [value]\r\n *  The initial property value.\r\n * @param {Function} [notifier]\r\n *  A callback to be executed when the value changes\r\n * @param {*} [thisContext=this]\r\n *  The context for when calling `notifier`. Defaults to the object instance\r\n * @param {Array} [args=[]]\r\n *  Any argument to be passed on to the notifier\r\n * @returns {function(): any}\r\n *\r\n * @example\r\n *\r\n * const descriptor = { configurable: true };\r\n * descriptor.get = descriptor.set = generatePropGetterSetter(() => console.log(\"prop updated\"));\r\n * const obj = Object.create({}, { name: descriptor });\r\n *\r\n * obj.name = \"paul\"; // console output: prop updated\r\n */\r\nexport function generatePropGetterSetter (key, valueInitializer, value, notifier, thisContext, args = []) {\r\n    if (!key){\r\n        throw new TypeError(\"key is required\");\r\n    }\r\n\r\n    function getterSetter () {\r\n        throwIfThisIsPrototype(this);\r\n        let contextStorage;\r\n\r\n        if (!storage.has(this)) {\r\n            contextStorage = createObject();\r\n            contextStorage.isNotifying = false;\r\n            contextStorage.props = createObject();\r\n\r\n            storage.set(this, contextStorage);\r\n\r\n        } else {\r\n            contextStorage = storage.get(this);\r\n        }\r\n\r\n        if (!(key in contextStorage.props)) {\r\n            contextStorage.props[key] = valueInitializer ? valueInitializer() : value;\r\n        }\r\n\r\n        if (arguments.length && arguments[0] !== contextStorage.props[key]) {\r\n            contextStorage.props[key] = arguments[0];\r\n\r\n            if (notifier && !contextStorage.isNotifying) {\r\n                contextStorage.isNotifying = true;\r\n                try {\r\n                    notifier.call(thisContext || this, ...args);\r\n                } catch(e) {\r\n                    contextStorage.isNotifying = false;\r\n                    throw e;\r\n                }\r\n                contextStorage.isNotifying = false;\r\n            }\r\n        }\r\n\r\n        return contextStorage.props[key];\r\n    }\r\n    getterSetter.isGetterSetter = true;\r\n    return getterSetter;\r\n}\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    arrayIndexOf,\r\n    arraySplice,\r\n    objectDefineProperty,\r\n    objectDefineProperties,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//======================================================\r\n\r\nexport const Map = GLOBAL.Map && GLOBAL.Map.prototype[SymbolIterator] ? GLOBAL.Map : FakeMap;\r\nexport default Map;\r\n\r\nexport function FakeMap() {\r\n    // FIXME: support for iterable input param\r\n}\r\n\r\nobjectDefineProperties(FakeMap.prototype, {\r\n    constructor: { value: FakeMap, configurable: true },\r\n    _: {\r\n        get() {\r\n            objectDefineProperty(this, \"_\", { value: {\r\n                keys: [],\r\n                values: []\r\n            } });\r\n            return this._;\r\n        }\r\n    },\r\n    get: {\r\n        value(key) {\r\n            return this._.values[arrayIndexOf(this._.keys, key)];\r\n        }\r\n    },\r\n    set: {\r\n        value(key, value) {\r\n            if (arrayIndexOf(this._.keys, key) === -1) {\r\n                this._.keys.push(key);\r\n                this._.values.push(value);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(key) { return arrayIndexOf(this._.keys, key) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.keys.length; }\r\n    },\r\n    clear: {\r\n        value() {\r\n            arraySplice(this._.keys, 0);\r\n            arraySplice(this._.values, 0);\r\n        }\r\n    },\r\n    delete: {\r\n        value(key) {\r\n            const idx = arrayIndexOf(this._.keys, key);\r\n            if (idx !== -1) {\r\n                arraySplice(this._.keys, idx, 1);\r\n                arraySplice(this._.values, idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    keys: {\r\n        value() {\r\n            return new FakeIterator(this._.keys);\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._.values);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._.keys, this._.values);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.keys.forEach((item, i) => cb.call(thisArg, this._.values[i], item));\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.entries();\r\n        }\r\n    }\r\n});\r\n\r\n","// Some of the code below was taken from from https://github.com/ericelliott/cuid/\r\n\r\n/**\r\n * Generates a unique id. This is really a CUID.\r\n *\r\n * @namespace uuid\r\n */\r\nvar\r\n    base    = 36,\r\n    counter = 1,\r\n    letter  = \"c\",\r\n    pad     = function(num, size) {\r\n        var s = \"000000000\" + num;\r\n        return s.substr(s.length-size);\r\n    },\r\n\r\n    globalCount = (function() {\r\n        var i, count = 0; // eslint-disable-line\r\n        for (i in window) {\r\n            count++;\r\n        }\r\n        return count;\r\n    }()),\r\n\r\n    fingerprint = (function() {\r\n        return pad(\r\n            (navigator.mimeTypes.length + navigator.userAgent.length).toString(36) + globalCount.toString(36),\r\n            4\r\n        );\r\n    }());\r\n\r\n\r\nvar uuid = Object.create(/** @lends uuid */{\r\n    generate: function(){\r\n        var\r\n            timestamp   = (new Date().getTime()).toString(base),\r\n            nextCounter = pad((counter++).toString(base), 4),\r\n            random      = 'xxxxxxxx'.replace(/[x]/g, function() {\r\n            // This code from: http://stackoverflow.com/a/2117523/471188\r\n                var v = Math.random()*16|0;\r\n                return v.toString(16);\r\n            });\r\n\r\n        return (letter + timestamp + nextCounter + fingerprint + random);\r\n\r\n    }\r\n});\r\n\r\nexport default uuid;\r\nexport { uuid };\r\n","import dataStore    from \"@purtuga/common/src/jsutils/dataStore.js\"\r\nimport {Map}        from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {\r\n    functionBindCall,\r\n    isObject,\r\n    isString,\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    consoleError,\r\n    functionBind\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport {isTemplateElement} from \"@purtuga/common/src/domutils/isTemplateElement.js\"\r\n\r\n//=====================================================\r\nconst DOCUMENT              = document;\r\nconst FUNCTION              = Function;\r\nconst ELEMENT_PROTOTYPE     = Element.prototype;\r\nconst VALUE_GETTERS         = new Map();\r\nlet counter = 1;\r\n\r\nexport {\r\n    arrayForEach,\r\n    arraySlice,\r\n    hasAttribute,\r\n    setAttribute,\r\n    getAttribute,\r\n    removeAttribute,\r\n    insertBefore,\r\n    createElement,\r\n    createTextNode,\r\n    createDocFragment,\r\n    isString\r\n};\r\n\r\nexport const DOM_DATA_BIND_PROP = \"DomDataBind\";\r\nexport const PRIVATE            = dataStore.create();\r\nexport const UUID               = `D-${ Date.now() }-${ Math.random().toString(36).replace(/[^a-z0-9]+/g, '') }`;\r\nexport const escapeString       = str => String(str).replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\nexport const bindCallTo         = functionBindCall;\r\nexport const isPureObject       = isObject;\r\nexport const removeChild        = functionBindCall(ELEMENT_PROTOTYPE.removeChild);\r\nexport const createComment      = functionBind(DOCUMENT.createComment, DOCUMENT);\r\nexport const isTemplate         = isTemplateElement;\r\nexport const logError           = consoleError;\r\n\r\n\r\n/**\r\n * Create a Function to be used in retrieving a given value from a data structure\r\n * @param evalCode\r\n * @param name\r\n * @returns {*}\r\n */\r\nexport function createValueGetter(evalCode, name = \"runtime\") {\r\n    evalCode = evalCode.trim();\r\n\r\n    if (VALUE_GETTERS.has(evalCode)) {\r\n        return VALUE_GETTERS.get(evalCode);\r\n    }\r\n\r\n    const fn = new FUNCTION(\"$DATA\", `\r\nwith ($DATA) {\r\n    if ($DATA.$data) {\r\n        with ($DATA.$data) {\r\n            return (${ evalCode });\r\n        }\r\n    } \r\n    return (${ evalCode });\r\n}\r\n//# sourceURL=valueGetter:${name}.${counter++}.js`);\r\n\r\n    VALUE_GETTERS.set(evalCode, fn);\r\n    return fn;\r\n}\r\n\r\n/**\r\n * Returns an array of attributes names found on a given HTML node\r\n *\r\n * @param {HTMLElement} node\r\n * @returns {Array}\r\n */\r\nexport function getNodeAttrNames(node){\r\n    const attrNames = [];\r\n    const total = node.attributes.length;\r\n\r\n    for(let i = 0; i < total; i++) {\r\n        attrNames.push(node.attributes.item(i).name);\r\n    }\r\n\r\n    return attrNames;\r\n}\r\n\r\n/**\r\n * Parses a directive string and returns an object with its values.\r\n * @param directiveString\r\n * @returns {{value: string, hasModifiers: boolean, modifiers: object}}\r\n */\r\nexport function parseDirectiveString(directiveString) {\r\n    const response = {\r\n        value: \"\",\r\n        hasModifiers: true,\r\n        modifiers: directiveString.split(/\\./)\r\n    };\r\n    response.value = response.modifiers.shift();\r\n    response.hasModifiers = Boolean(response.modifiers.length);\r\n    response.modifiers = response.modifiers.reduce((modifiers, key) => {\r\n        modifiers[key] = true;\r\n        return modifiers;\r\n    }, {});\r\n    return response;\r\n}","import {toString} from \"../jsutils/runtime-aliases.js\";\r\n\r\n/**\r\n * Returns a boolean indicating if provided element on input is a HTML Template element (like).\r\n *\r\n * @param {HTMLElement} ele\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isTemplateElement(ele) {\r\n    const eleToStringValue = toString(ele);\r\n    return eleToStringValue === \"[object HTMLTemplateElement]\" ||\r\n        (eleToStringValue === \"[object HTMLUnknownElement]\" && !!ele.content);\r\n}","/**\r\n * Shortcut/Functional alias to `Node.insertBefore` method.\r\n *\r\n * @param {Node|DocumentFragment} newNode\r\n * @param {Node} referenceNode\r\n *\r\n * @returns {Node|DocumentFragment}\r\n */\r\nexport function domInsertBefore(newNode, referenceNode) {\r\n    if (referenceNode && referenceNode.parentNode && referenceNode.parentNode.insertBefore) {\r\n        referenceNode.parentNode.insertBefore(newNode, referenceNode);\r\n    }\r\n    return newNode;\r\n}\r\nexport default domInsertBefore;\r\n\r\n","/**\r\n * Safely remove a node from its parent. Check if node has a parent and if so,\r\n * then it removes it from that parent.\r\n *\r\n * @param {Node} childNode\r\n * @returns {Node}\r\n */\r\nexport function domRemoveChild(childNode) {\r\n    if (childNode && childNode.parentNode) {\r\n        childNode.parentNode.removeChild(childNode);\r\n    }\r\n    return childNode;\r\n}\r\n","import { GLOBAL } from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf,\r\n    SymbolIterator\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = GLOBAL.Set && GLOBAL.Set.prototype[SymbolIterator] ? GLOBAL.Set : FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb, thisArg) {\r\n            this._.forEach(item => cb.call(thisArg, item, item));\r\n        }\r\n    },\r\n    [SymbolIterator]: {\r\n        value() {\r\n            return this.values();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while ((cb = cbList.shift())) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n","import objectExtend from \"./objectExtend\"\r\nimport dataStore from \"./dataStore\"\r\nimport queueCallback from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\";\r\nimport {PRIVATE} from \"../utils.js\";\r\n\r\n//============================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A Directive Node handler\r\n *\r\n * @extends Compose\r\n *\r\n * @param {Directive} directive Directive instance\r\n * @param {Node} node\r\n */\r\nexport class NodeHandler extends Compose {\r\n    init(directive, node, directives) {\r\n        this._directives = directives;\r\n        this._d = this._directive = directive;\r\n        this._n = this._node = node;\r\n    }\r\n\r\n    /**\r\n     * List of directives that were used during parsing of the template\r\n     * @name NodeHandler#_directives\r\n     * @type Array<Directive>\r\n     */\r\n\r\n    /**\r\n     * The Directive instance that is tied to this node handler\r\n     * @name NodeHandler#_directive\r\n     * @type Directive\r\n     * @protected\r\n     */\r\n\r\n    /**\r\n     * The Node associated with this node handler\r\n     * @name NodeHandler#_node\r\n     * @type Node\r\n     * @protected\r\n     */\r\n\r\n    // Override destroy (which is by default \"async\" and ensure that notifications\r\n    // are turned off immediately for this Node\r\n    destroy() {\r\n        const state = PRIVATE.get(this);\r\n        if (state){\r\n            if (state.tracker && state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            if (state.data) {\r\n                state.data = null;\r\n            }\r\n        }\r\n        super.destroy();\r\n        PRIVATE.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the data given on input to the Template.\r\n     * (By default, it proxies to the Directive#render())\r\n     *\r\n     * @param data\r\n     */\r\n    render(data) {\r\n        this._d.render(this, this._n, data);\r\n    }\r\n\r\n    /**\r\n     * Shoudl be overwritten to contain the logic as to how a new value (generated by the Directive's `render()`)\r\n     * should be applied to the live HTML. Should be overwritten.\r\n     *\r\n     * @param {*} newValue\r\n     */\r\n    update(/*newValue*/) {}// eslint-disable-line\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport {logError, PRIVATE, removeAttribute} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//===================================================================================\r\n\r\n// FIXME: replace use of Compose.js\r\n\r\n/**\r\n * A DOM element directive.\r\n * NOte that any directive that removes the original DOM element from its parent\r\n * will prevent all subsequent directives from running.\r\n *\r\n * @class Directive\r\n * @extends Compose\r\n *\r\n * @param {String} directiveAttr\r\n *  The directive html element attribute as found in the element.\r\n * @param {String} attrValue\r\n *  The value of the attribute\r\n */\r\nexport class Directive extends Compose {\r\n    /**\r\n     * Checks a given element has an element attribute that matches the Directive.\r\n     * If a match is found, the html Element's attribute that was matched must be\r\n     * returned.\r\n     *\r\n     * @param {HTMLElement} ele\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static has(/*ele*/) { return \"\"; }\r\n\r\n    /**\r\n     * A boolean indicating whether this directive manages the element. If set to true, then\r\n     * `DomDataBind` will not process any other directives after this one.\r\n     */\r\n    static manages() { return false; }\r\n\r\n    /**\r\n     * The Class that will be used to initialize a new node handler for the directive\r\n     *\r\n     * @type NodeHandler\r\n     * @constructor\r\n     */\r\n    static NodeHandlerConstructor = NodeHandler;\r\n\r\n    /**\r\n     * Render the Directive with given data\r\n     *\r\n     * @param {NodeHandler} handler\r\n     * @param {Node} node\r\n     * @param {Object} data\r\n     */\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            /**\r\n             * Directive Node Handler state\r\n             *\r\n             * @typedef {Object} NodeHandlerState\r\n             *\r\n             * @property {*} data\r\n             * @property {*} value\r\n             * @property {Boolean} isQueued\r\n             * @property {Function} tracker\r\n             * @property {Function} update\r\n             */\r\n            state = {\r\n                data:       null,\r\n                value:      \"\",\r\n                isQueued:   false,\r\n                tracker:    () => this.render(handler, node, state.data)\r\n                //update: () => {} --- should be defined by Directive subclass\r\n            };\r\n            PRIVATE.set(handler, state);\r\n\r\n        }\r\n\r\n        if (state.data !== data) {\r\n            // With use of observables, the tracker function get a `stopWatchingAll()` method\r\n            // which removes this tracker from all property dependency lists.\r\n            if (state.tracker.stopWatchingAll) {\r\n                state.tracker.stopWatchingAll();\r\n            }\r\n            state.data = data;\r\n        }\r\n\r\n        this.update(handler);\r\n    }\r\n\r\n    /**\r\n     * Updates a node by generating a new value for the Directive, storing it\r\n     * in the handler `state.value` and calling `handle.update` after it.\r\n     *\r\n     * @param {NodeHandler} handler\r\n     */\r\n    update(handler) {\r\n        // destruction happens 1ms after .destroy() (Componse#destroy()) is called,\r\n        // so its possible that a handler might come in here having its `.isDestroyed`\r\n        // flag set.\r\n        if (handler.isDestroyed) {\r\n            return;\r\n        }\r\n\r\n        const handlerState = PRIVATE.get(handler);\r\n\r\n        if (handlerState) {\r\n            let newValue = \"\";\r\n\r\n            try {\r\n                newValue = this._tokenValueGetter(handlerState.data || {});\r\n\r\n                // Update node\r\n                if (handler.update) {\r\n                    handler.update(newValue);\r\n                }\r\n            }\r\n            catch(e) {\r\n                logError(e);\r\n            }\r\n\r\n            if (handlerState.value !== newValue) {\r\n                handlerState.value = newValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans the node by removing Directive specific attribute. By default, the `_attr`\r\n     * that was given to this constructor will be removed from the node.\r\n     *\r\n     * @param {Node} node\r\n     */\r\n    cleanNode(node) {\r\n        if (this._attr && node.nodeType !== 8 /* don't process comment nodes */) {\r\n            removeAttribute(node, this._attr);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a node handler for this Directive on the provided Node\r\n     *\r\n     * @param {Node} node\r\n     * @param {Array<Directive>} [directives]\r\n     *\r\n     * @return {NodeHandler}\r\n     */\r\n    getNodeHandler(node, directives) {\r\n        this.cleanNode(node);\r\n        return new this.constructor.NodeHandlerConstructor(this, node, directives);\r\n    }\r\n}\r\nexport default Directive;\r\n\r\n","import {arraySlice} from \"./utils.js\";\r\n\r\n/**\r\n * Interface for a template instance.\r\n */\r\nexport class TemplateInstance {\r\n    /**\r\n     *\r\n     * @param {DocumentFragment} docFrag\r\n     * @param {Array<NodeHandler>} bindings\r\n     * @param {String} [templateId]\r\n     */\r\n    constructor(docFrag, bindings, templateId = \"\") {\r\n        this._frag = docFrag;\r\n        this._bindings = bindings;\r\n        this._childNodes = arraySlice(docFrag.childNodes, 0);\r\n        this.fromTemplateId = templateId;\r\n    }\r\n\r\n    /**\r\n     * Recovers the original nodes rendered from the template into\r\n     * the DocumentFragment\r\n     */\r\n    recover() {\r\n        this._childNodes.forEach(nodeEle => this._frag.appendChild(nodeEle));\r\n    }\r\n\r\n    /**\r\n     * Destroys all bindings of the Template\r\n     */\r\n    destroy() {\r\n        this.recover();\r\n        if (this._bindings) {\r\n            for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n                this._bindings[i].destroy();\r\n            }\r\n            this._bindings.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets data on the Template by passing it to all directives to act on.\r\n     * @param data\r\n     */\r\n    setData(data) {\r\n        for (let i = 0, t = this._bindings.length; i < t; i++) {\r\n            this._bindings[i].render(data);\r\n        }\r\n    }\r\n}\r\n","import {view} from \"./view.js\";\r\nimport {DOM_DATA_BIND_PROP} from \"./utils.js\";\r\nimport {TemplateInstance} from \"./TemplateInstance.js\";\r\nimport {applyBindingsToTemplateInstance, Template} from \"./Template.js\";\r\n\r\n\r\n//==========================================================================\r\n\r\n/**\r\n * Returns a DocumentFragment representation of the given `html` code provided on\r\n * input bound to the given data.\r\n *\r\n * @param {String|HTMLTemplateElement|Template} html\r\n * @param {Object} [data]\r\n * @param {Array<Directive>} [directives]\r\n *\r\n * @return {DocumentFragment}\r\n *  Document Fragment returned will have a property named 'DomDataBind', which is\r\n *  a TemplateInstance class instance\r\n */\r\nexport function render(html, data, directives) {\r\n    const viewTemplate = html instanceof Template ? html : view(html, directives);\r\n    const response = document.importNode(viewTemplate.ele.content, true);\r\n\r\n    response[DOM_DATA_BIND_PROP] = new TemplateInstance(\r\n        response,\r\n        applyBindingsToTemplateInstance(response, viewTemplate._bindings, viewTemplate._directives),\r\n        viewTemplate.id\r\n    );\r\n    response[DOM_DATA_BIND_PROP].setData(data);\r\n    return response;\r\n}\r\n\r\nexport default render;\r\n","import {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {domRemoveChild} from \"@purtuga/common/src/domutils/domRemoveChild.js\"\r\nimport {\r\n    isUndefined,\r\n    isNull,\r\n    isDocFragment\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"../directives/Directive.js\"\r\nimport {\r\n    UUID,\r\n    PRIVATE,\r\n    createTextNode,\r\n    createValueGetter,\r\n    createComment,\r\n    arraySlice\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"../directives/NodeHandler.js\";\r\nimport {Template} from \"../Template.js\";\r\nimport {render} from \"../render.js\";\r\n\r\n//===========================================================\r\nconst ID = \"text.binding\";\r\nconst isAttached = node => !!node.parentNode;\r\n\r\nclass TextBindingNodeHandler extends NodeHandler {\r\n    init(...args) {\r\n        super.init(...args);\r\n\r\n        let node = this._node;\r\n\r\n        // Text nodes are processed in a special way in `DomDataBind.getTemplateForDomElement`, where\r\n        // free-floating textnode are replaced with HTML comments in order to not lose their place when\r\n        // converted to text and then back to dom elements.\r\n        // If that is the case here, then use that HTMLComment as a placeholder\r\n        // and create a \"real\" textNode for the content\r\n        if (node.nodeType === 8 && node.nodeValue === UUID) {\r\n            this._placeholderEle = node;\r\n            this._placeholderEle.data = ID;\r\n            this._node = domInsertBefore(createTextNode(\"\"), this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n\r\n        // If no placeholder element yet, create it now\r\n        if (!this._placeholderEle) {\r\n            this._placeholderEle = createComment(ID);\r\n        }\r\n\r\n        this._externalNodes = null; // Array\r\n        this._template = null;\r\n        this._templateInst = null;\r\n    }\r\n\r\n    update(newValue) {\r\n        // Null and Undefined values\r\n        if (isNull(newValue) || isUndefined(newValue)) {\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            return;\r\n        }\r\n\r\n        // Is it a Template?\r\n        if (newValue instanceof Template) {\r\n            const data = PRIVATE.get(this).data;\r\n            if (this._template && this._template.id === newValue.id) {\r\n                this._templateInst.DomDataBind.setData(data);\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this._template = newValue;\r\n            this._templateInst = render(newValue, data, this._directives);\r\n            domInsertBefore(this._templateInst, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // A regular HTML node(s)\r\n        if (newValue instanceof Node) {\r\n            // Is it already displayed here? - then do nothing\r\n            if (this.isCurrentExternal(newValue)) {\r\n                return;\r\n            }\r\n\r\n            this.clear();\r\n            this.setPlaceholder();\r\n            this.storeExternals(newValue);\r\n            domInsertBefore(newValue, this._placeholderEle);\r\n            return;\r\n        }\r\n\r\n        // ElSE, handle text content (or something can be stringified (toString))\r\n        if (!isAttached(this._node)) {\r\n            this.clear();\r\n            domInsertBefore(this._node, this._placeholderEle);\r\n            domRemoveChild(this._placeholderEle);\r\n        }\r\n        if (newValue !== this._node.nodeValue) {\r\n            this._node.nodeValue = newValue;\r\n        }\r\n    }\r\n\r\n    storeExternals(nodeEle) {\r\n        if (this._externalNodes) {\r\n            this.removeExternals();\r\n        }\r\n        this._externalNodes = isDocFragment(nodeEle) ? arraySlice(nodeEle.childNodes, 0) : [ nodeEle ];\r\n    }\r\n\r\n    removeExternals() {\r\n        if (this._externalNodes) {\r\n            for (let i = 0, t = this._externalNodes.length; i < t; i++) {\r\n                domRemoveChild(this._externalNodes[i]);\r\n            }\r\n            this._externalNodes = null;\r\n        }\r\n    }\r\n\r\n    isCurrentExternal(nodeEle) {\r\n        return this._externalNodes &&\r\n            (\r\n                (\r\n                    !isDocFragment(nodeEle) &&\r\n                    this._externalNodes.length === 1 &&\r\n                    this._externalNodes[0] === nodeEle\r\n                ) ||\r\n                arraySlice(nodeEle).every((newNodeEle, i) => newNodeEle === this._externalNodes[i])\r\n            );\r\n    }\r\n\r\n    destroyTemplateView() {\r\n        if (this._templateInst) {\r\n            this._templateInst.DomDataBind.destroy();\r\n            this._templateInst = this._template = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.removeExternals();\r\n        this.destroyTemplateView();\r\n        this._node.nodeValue = \"\";\r\n    }\r\n\r\n    setPlaceholder() {\r\n        if (!isAttached(this._placeholderEle)) {\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            domRemoveChild(this._node);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        this.clear();\r\n    }\r\n}\r\n\r\nexport class TextBinding extends Directive {\r\n    static NodeHandlerConstructor = TextBindingNodeHandler;\r\n\r\n    init(tokenText) {\r\n        this._tokenText = tokenText;\r\n        this._tokenValueGetter = createValueGetter(tokenText, ID);\r\n    }\r\n}\r\n\r\nexport default TextBinding;\r\n\r\n","import domFind from \"@purtuga/common/src/domutils/domFind.js\"\r\nimport {uuid} from \"@purtuga/common/src/jsutils/uuid.js\"\r\nimport {\r\n    PRIVATE,\r\n    UUID,\r\n    bindCallTo,\r\n    removeAttribute,\r\n    getAttribute,\r\n    arrayForEach,\r\n    createComment,\r\n    createDocFragment,\r\n    createTextNode,\r\n    logError,\r\n    createElement,\r\n    isTemplate\r\n} from \"./utils.js\"\r\nimport TextBinding from \"./bindings/text-binding.js\"\r\n\r\n\r\n//=========================================================================================\r\nconst DATA_TOKEN_REG_EXP_STR    = \"{{(.*?)}}\";\r\nconst DROPS_NODES_ON_CLONE = (() => {   // FUCK YOU IE!\r\n    const frag = createDocFragment();\r\n    frag.appendChild(createTextNode(\"test\"));\r\n    frag.appendChild(createTextNode(\"\"));\r\n    return frag.cloneNode(true).childNodes.length === 1;\r\n})();\r\nconst NODE_CONTAINS_MISSES_TEXT_NODES = (() => {    // FUCK YOU IE!\r\n    const div = createElement(\"div\");\r\n    const text = createTextNode(\"test\");\r\n    div.appendChild(text);\r\n    return !div.contains(text);\r\n})();\r\n\r\n\r\n// Local aliases\r\nconst nodeSplitText         = bindCallTo(Text.prototype.splitText);\r\n\r\n// short helpers\r\nconst reHasDataToken        = new RegExp(DATA_TOKEN_REG_EXP_STR);\r\nconst reTokenMatch          = new RegExp(DATA_TOKEN_REG_EXP_STR, \"g\");\r\nconst getNodeValue          = node => node ? node.nodeValue : \"\";\r\nconst hasToken              = node => reHasDataToken.test(getNodeValue(node));\r\n\r\n// FIXME: use insertBefore() alias in several places below\r\n\r\n\r\n/**\r\n * A Dom template along with its set of know directives (after parsing it)\r\n */\r\nexport class Template {\r\n    constructor(html, directives = []) {\r\n        this.id = uuid.generate();\r\n\r\n        if (!isTemplate(html)) {\r\n            this.ele = createElement(\"template\");\r\n            this.ele.innerHTML = html;\r\n        } else {\r\n            this.ele = html;\r\n        }\r\n\r\n        this._directives = directives;\r\n\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            // DEV MODE:: warn about directive positioning\r\n            if (directives.length) {\r\n                const directivesPosition = directives.reduce(function(positions, Directive, index){\r\n                    positions[Directive.name] = index;\r\n                    positions[`has${Directive.name}`] = true;\r\n                    return positions;\r\n                }, {});\r\n\r\n                if (directivesPosition.hasEachDirective && directivesPosition.EachDirective !== 0) {\r\n                    console.warn(`DomDataBind: 'EachDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                }\r\n\r\n                if (!directivesPosition.hasEachDirective && directivesPosition.hasIfDirective) {\r\n                    if (directivesPosition.hasEachDirective && directivesPosition.IfDirective !== 1) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 1 (right after 'EachDirective')!`); // eslint-disable-line\r\n                    } else if (directivesPosition.IfDirective !== 0) {\r\n                        console.warn(`DomDataBind: 'IfDirective' position in 'directives' array should be 0!`); // eslint-disable-line\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this._bindings = getBindingFor(this.ele.content, directives);\r\n    }\r\n\r\n    /**\r\n     * The template unique id\r\n     * @name Template#id\r\n     * @type {String}\r\n     */\r\n\r\n    /**\r\n     * The HTMLTemplateElement\r\n     * @name Template#ele\r\n     * @type {HTMLTemplateElement}\r\n     */\r\n}\r\nexport default Template;\r\n\r\n/**\r\n * Returns a Map() that includes the paths to nodes in the Dom template that\r\n * are using Directives or have bindings.\r\n * The map \"key\" is an array of `childNodes` paths from the root of the template\r\n * all the way to the node.\r\n * The map \"value\" is an array Directive instances for that node\r\n *\r\n * @return {Map}\r\n */\r\nexport function getBindingFor(ele, directives) {\r\n    // FIXME: refactor this entire function to be faster and more efficient\r\n\r\n\r\n    // template bindings Map() structure:\r\n    //\r\n    //      bindings = Map(\r\n    //          [path, via, childNodes, to, element]: [ directive instances ],\r\n    //          // example:\r\n    //          [0,1,3]: [ directiveInstance1, directiveInstance2 ]\r\n    //      )\r\n    //  }\r\n    //\r\n\r\n    // The goal is to be able to provide a path to each elements for which a group of directives will be applied.\r\n    const bindings          = new Map(); // FIXME: these can be global and reusable - since we only ever have one call in flight to this function\r\n    const eleToBindings     = new Map();\r\n    const ignoredChildren   = new Set();\r\n    let domEle;\r\n\r\n    // FIXME: convert to singleton function\r\n    //          Arguments should be:\r\n    //                  Directive, domEle, eleToBindings, ignoreChildren\r\n    //          Returns a boolean\r\n    const directiveIterator = Directive => {\r\n        let attrName;\r\n        let attrValue;\r\n        let managesNode;\r\n        let elePlaceholder = domEle;\r\n\r\n        while ((attrName = Directive.has(domEle))) {\r\n            attrValue = getAttribute(domEle, attrName);\r\n            managesNode = Directive.manages();\r\n\r\n            if (managesNode) {\r\n                elePlaceholder = createComment(\"\");\r\n            }\r\n\r\n            getArrayForNodeFromMap(eleToBindings, elePlaceholder).push(\r\n                getDirectiveForAttribute(Directive, attrName, attrValue)\r\n            );\r\n\r\n            removeAttribute(domEle, attrName);\r\n\r\n            if (managesNode) {\r\n                ignoredChildren.add(domEle);\r\n\r\n                // Replace this node with a Comment, and store the node's html\r\n                // as the comment data, which is then used by the directive instance\r\n                // to `render()` it to DOM when applicable\r\n                domEle.parentNode.insertBefore(elePlaceholder, domEle);\r\n                const fakeEle = createElement(\"div\");\r\n                fakeEle.appendChild(domEle);\r\n                elePlaceholder.data = fakeEle.innerHTML;\r\n            }\r\n        }\r\n        return managesNode;\r\n    };\r\n\r\n    // FIXME: convert to singleton Function\r\n    //          Arguments needed:\r\n    //              child, eleToBindings,\r\n    const processTextNode = child => {\r\n        if (hasToken(child)) {\r\n            reTokenMatch.lastIndex = 0;\r\n            let nodeValue = getNodeValue(child);\r\n            let childTokenMatches = reTokenMatch.exec(nodeValue);\r\n\r\n            while (childTokenMatches) {\r\n                // If no need to split the text node, then just create a binding for it and exit\r\n                if (nodeValue === \"{{\" + childTokenMatches[1] + \"}}\") {\r\n                    getArrayForNodeFromMap(eleToBindings, child).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n                    childTokenMatches = null;\r\n                }\r\n                else {\r\n                    let tokenTextNode = nodeSplitText(child, childTokenMatches.index);\r\n\r\n                    // IF browser drops empty nodes, then fix the child node (which now is the left portion\r\n                    // of the split)\r\n                    if (DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n\r\n                    // Split again at the end of token, so that we have a dedicated text node for the token value.\r\n                    // Because this will be used as a template, also need to replace this token value node\r\n                    // with an HTML comment, which will be replaced later during directive initialization\r\n                    // The remainder of the Text value is assigned back to `child` so that we can continue\r\n                    // to check it for other text tokens.\r\n                    child = nodeSplitText(tokenTextNode, childTokenMatches[0].length);\r\n                    const tokenPlaceholder = tokenTextNode.parentNode.insertBefore(createComment(UUID), tokenTextNode);\r\n                    tokenTextNode.parentNode.removeChild(tokenTextNode);\r\n\r\n                    getArrayForNodeFromMap(eleToBindings, tokenPlaceholder).push(getTextBindingForToken(TextBinding, childTokenMatches[1]));\r\n\r\n                    // Reset the regular expression (since `child` was also \"reset\") and execute\r\n                    // the regular expression again on the remaining text\r\n                    reTokenMatch.lastIndex = 0;\r\n                    childTokenMatches = reTokenMatch.exec(getNodeValue(child));\r\n\r\n                    if (!childTokenMatches && DROPS_NODES_ON_CLONE) {\r\n                        fixEmptyTextNode(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FIXME: convert to for() loop - Perf!\r\n    findAllNodes(ele).forEach(node => {\r\n        let skip = false;\r\n\r\n        if (ignoredChildren.size) {\r\n            for (let ignoredParent of ignoredChildren.values()) {\r\n                if (NODE_CONTAINS_MISSES_TEXT_NODES && node.nodeType === 3) {\r\n                    if (ignoredParent.compareDocumentPosition(node) & 16) {\r\n                        skip = true;\r\n                    }\r\n                }\r\n                else if (ignoredParent.contains(node)) {\r\n                    skip = true;\r\n                }\r\n\r\n                if (skip) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        domEle = node;\r\n\r\n        if (!skip) {\r\n            // Process Element level Directives\r\n            if (node.nodeType === 1) {\r\n                directives.some(directiveIterator);\r\n            }\r\n            // TEXT nodes\r\n            else if (node.nodeType === 3) {\r\n                processTextNode(node);\r\n            }\r\n        }\r\n    });\r\n\r\n    domEle = null;\r\n\r\n\r\n    // Create the list array of node indexes for each binding processed\r\n    eleToBindings.forEach((directiveBindings, bindingEle) => {\r\n        if (ele === bindingEle) {\r\n            bindings.set([], directiveBindings);\r\n            return;\r\n        }\r\n\r\n        const path  = [];\r\n        let walkEle = bindingEle;\r\n        let parent  = walkEle.parentNode;\r\n\r\n        while (walkEle !== ele) {\r\n            path.unshift(path.indexOf.call(parent.childNodes, walkEle));\r\n            walkEle = walkEle.parentNode;\r\n            parent  = walkEle.parentNode;\r\n        }\r\n\r\n        bindings.set(path, directiveBindings);\r\n    });\r\n\r\n    eleToBindings.clear();\r\n    ignoredChildren.clear();\r\n\r\n    return bindings;\r\n}\r\n\r\n/**\r\n * Applies the bindings in the given Map to the DocumentFragment provided on input.\r\n *\r\n * @param {DocumentFragment} frag\r\n * @param {Map<Array<Number>, Array<Directive>>} bindings\r\n * @param {Array<Directive>} Directives\r\n *\r\n * @return {Array<NodeHandler>}\r\n *  An array of Node directive handlers is returned.\r\n */\r\nexport function applyBindingsToTemplateInstance(frag, bindings, Directives) {\r\n    const response = [];\r\n\r\n    bindings.forEach((directivesInstances, path) => {\r\n        const node = getNodeAt(frag, path);\r\n        if (!node) {\r\n            logError(new Error(`dom-data-bind#render(): Unable to find node!`));\r\n            return;\r\n        }\r\n\r\n        for (let i=0, t=directivesInstances.length; i < t; i++) {\r\n            response.push(directivesInstances[i].getNodeHandler(node, Directives));\r\n        }\r\n    });\r\n\r\n    return response;\r\n}\r\n\r\nfunction getNodeAt(root, path) {\r\n    if (!path.length) {\r\n        return root;\r\n    }\r\n    // FIXME: use for loop here.\r\n    arrayForEach(path, index => root = root.childNodes[index]);\r\n    return root;\r\n}\r\n\r\nfunction getArrayForNodeFromMap(map, node) {\r\n    if (!map.has(node)) {\r\n        map.set(node, []);\r\n    }\r\n    return map.get(node);\r\n}\r\n\r\n/**\r\n * Returns a node handlers for the given directive\r\n *\r\n * @param {Directive} Directive\r\n * @param {String} tokenText\r\n *  The token text (no curly braces)\r\n *\r\n * @returns {Directive}\r\n *  Returns a Directive instance. Call `.getNodeHandler` to get a handler for a given node\r\n */\r\nfunction getTextBindingForToken(Directive, tokenText) {\r\n    tokenText = tokenText.trim();\r\n\r\n    let directiveInstances = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[tokenText]) {\r\n        directiveInstances[tokenText] = new Directive(tokenText);\r\n    }\r\n\r\n    return directiveInstances[tokenText];\r\n}\r\n\r\nfunction getDirectiveForAttribute (Directive, attrName, attrValue) {\r\n    attrValue = attrValue.trim();\r\n\r\n    const directiveSignature    = `${attrName}-${ UUID }-${ attrValue }`;\r\n    let directiveInstances      = PRIVATE.get(Directive);\r\n\r\n    if (!directiveInstances) {\r\n        directiveInstances = {};\r\n        PRIVATE.set(Directive, directiveInstances);\r\n    }\r\n\r\n    if (!directiveInstances[directiveSignature]) {\r\n        directiveInstances[directiveSignature] = new Directive(attrName, attrValue);\r\n    }\r\n\r\n    return directiveInstances[directiveSignature];\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n * @returns {boolean}\r\n */\r\nfunction onlyElementsWithAttributes(ele/*, index, arr*/) {\r\n    return ele.nodeType !== 1 || (ele.nodeType === 1 && ele.attributes.length > 0);\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {Array} resultArr\r\n * @param {HTMLElement} ele\r\n * @returns {Array}\r\n */\r\nfunction addTextNodes(resultArr, ele /*, index, arr*/) {\r\n    resultArr.push(ele);\r\n    if (ele.hasChildNodes()) {\r\n        ele = ele.firstChild;\r\n        for (;ele;) {\r\n            const nextSibling = ele.nextSibling;\r\n\r\n            // IF Text node and it has the token\r\n            if (ele.nodeType === 3 && !!ele.nodeValue && reHasDataToken.test(getNodeValue(ele))) {\r\n                resultArr.push(ele);\r\n            }\r\n\r\n            if (DROPS_NODES_ON_CLONE) {\r\n                fixEmptyTextNode(ele);\r\n            }\r\n\r\n            ele = nextSibling;\r\n        }\r\n    }\r\n    return resultArr;\r\n}\r\n\r\nfunction fixEmptyTextNode(node) {\r\n    if (node.nodeType === 3 && DROPS_NODES_ON_CLONE && !node.nodeValue) {\r\n        node.parentNode.insertBefore(createComment(\"\"), node);\r\n        node.parentNode.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @private\r\n * @param {HTMLElement} ele\r\n *\r\n * @return {Array<Node>}\r\n */\r\nfunction findAllNodes(ele) {\r\n    return [ele]\r\n        .concat(domFind(ele, \"*\"))\r\n        .reduce(addTextNodes, [])\r\n        .filter(onlyElementsWithAttributes);\r\n}\r\n\r\n\r\n","import {Map} from \"@purtuga/common/src/jsutils/Map.js\";\r\nimport Template from \"./Template.js\"\r\nimport {isString} from \"./utils.js\";\r\nimport {isTemplate} from \"./utils.js\";\r\n\r\n\r\n//==========================================================================\r\n// Keeps a map between `html string` and `Template` instance\r\nconst TEMPLATES = new Map();\r\n\r\n/**\r\n * Create a UI view template for the given html string. Returned view (Template) are cached (memoized)\r\n * and thus a previously view template will just return the previous Template instance\r\n *\r\n * @param {String|HTMLTemplateElement} html\r\n * @param {Array<Directive>} directives\r\n *\r\n * @returns {Template}\r\n */\r\nexport function view(html, directives = view.directives || []) {\r\n    const isHtmlString = isString(html);\r\n    const cacheKey = isHtmlString ? html : html.innerHTML;\r\n\r\n    if (!hasTemplate(cacheKey)) {\r\n        TEMPLATES.set(\r\n            cacheKey,\r\n            new Template(html, directives)\r\n        );\r\n    }\r\n\r\n    // DEVELOPMENT MODE (is removed during webpack build)\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        if (!isString(html) && !isTemplate(html)) {\r\n            console.warn(`dom-data-bind.view(): 'html' argument must be either String or HTMLTemplateElement!`); //eslint-disable-line\r\n        }\r\n    }\r\n\r\n    return TEMPLATES.get(cacheKey);\r\n}\r\n\r\n/**\r\n * A list of directives that might be used in views. Used as the default value to the\r\n * `directives` input argument of `view()`.\r\n *\r\n * @type {Array<Directive>>|null}\r\n */\r\nview.directives = null;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n *\r\n * @type {function(*=): boolean}\r\n */\r\nview.has = hasTemplate;\r\n\r\n/**\r\n * Checks if a view template already exists for the given html\r\n * @param html\r\n * @returns {boolean}\r\n */\r\nfunction hasTemplate(html) {\r\n    return TEMPLATES.has(html);\r\n}\r\n","import Compose from \"@purtuga/common/src/jsutils/Compose.js\"\r\nimport { PRIVATE, arrayForEach, isString } from \"./utils.js\"\r\nimport { getBindingFor, applyBindingsToTemplateInstance } from \"./Template.js\"\r\nimport { render } from \"./render.js\";\r\n\r\n//======================================================================\r\n\r\n/**\r\n * Bind data to a DOM element and automatically persist changes in that data to the UI.\r\n * By default, this constructor provides interpolation of Text tokens found in the DOM\r\n * structure (represented with double curly braces: `{{ }}`). Directives can be used\r\n * by extending this constructor and adding them to the [directives]{@link DomDataBind.directives}\r\n * static property.\r\n *\r\n * @class DomDataBind\r\n * @extends Compose\r\n *\r\n * @param {String |HTMLElement} html\r\n *  The HTML element that will be view and to which `data` will be bound.\r\n *\r\n * @param {Object} data\r\n *  An object whose data will be used to bind to `html` element (once crated) .\r\n *\r\n */\r\nexport const DomDataBind = Compose.extend({\r\n    /**\r\n     * The Element whose data was bound to.\r\n     * When a string is used on input, this will be a DocumentFragment, which\r\n     * means that it could be empty if its content was inserted into DOM\r\n     */\r\n    $ele: null,\r\n\r\n    init(html, data) {\r\n        const Factory = this.getFactory();\r\n        const state = {\r\n            html,\r\n            data,\r\n            directives: Factory.directives.slice(0)\r\n        };\r\n\r\n        PRIVATE.set(this, state);\r\n\r\n        if (isString(html)) {\r\n            this.$ele = render(html, data, state.directives);\r\n            state.bindings = this.$ele._bindings;\r\n        } else {\r\n            this.$ele = html;\r\n            state.bindings = applyBindingsToTemplateInstance(html, getBindingFor(html, state.directives), state.directives);\r\n            if (data) {\r\n                this.setData(data);\r\n            }\r\n        }\r\n\r\n        this.onDestroy(() => {\r\n            arrayForEach(state.bindings, binding => binding.destroy());\r\n\r\n            delete state.data;\r\n            delete state.directives;\r\n            delete state.bindings;\r\n\r\n            Factory.getDestroyCallback(state, PRIVATE)();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Set data on to the DOM provided during initialization.\r\n     * In most cases, you should never have the need to call this method. Data\r\n     * provided during initialization is \"live\" and changes are automatically\r\n     * reflected to dom.\r\n     */\r\n    setData(data) {\r\n        const bindings = PRIVATE.get(this).bindings;\r\n        arrayForEach(bindings, binding => binding.render(data));\r\n    }\r\n});\r\nexport default DomDataBind;\r\n\r\n/**\r\n * A list of Directives to be used.\r\n *\r\n * @name DomDataBind.directives\r\n * @type {Array}\r\n */\r\nDomDataBind.directives = [];\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    removeAttribute,\r\n    setAttribute,\r\n    createValueGetter,\r\n    getNodeAttrNames } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst attrRegExp = /^_attr\\.(.*)/;\r\n\r\nexport class AttrDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            const state = PRIVATE.get(this);\r\n            const _htmlAttr = this._directive._htmlAttr;\r\n\r\n            if (this._directive.constructor._isProp) {\r\n                if (newValue !== state.value) {\r\n                    this._node[_htmlAttr] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                if (newValue && state.value !== newValue) {\r\n                    setAttribute(this._node, _htmlAttr, newValue);\r\n                }\r\n                else if (state.value && !newValue) {\r\n                    removeAttribute(this._node, _htmlAttr);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static _matches = attrRegExp;\r\n\r\n    static _isProp = false;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => this._matches.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"attr\");\r\n        this._htmlAttr          = (new RegExp(this.constructor._matches)).exec(attr)[1];\r\n    }\r\n}\r\n\r\nexport default AttrDirective;\r\n","/**\r\n * Check if an element has a given class\r\n *\r\n * @function domHasClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *\r\n * @return {Boolean}\r\n */\r\nexport function domHasClass(el, cssClass){\r\n    if (el && cssClass) {\r\n        return el.classList.contains(cssClass);\r\n    }\r\n    return false;\r\n}\r\nexport default domHasClass;\r\n","/**\r\n * Adds class to an element\r\n *\r\n * @function domAddClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n *  Multiple classes can be set using spaces as a delimiter\r\n */\r\nexport function domAddClass(el, cssClass){\r\n    let classNameList = String(cssClass).trim().split(/\\s+/).map(className => className.trim());\r\n    if (el && classNameList.length) {\r\n        classNameList.forEach((cssClass) => el.classList.add(cssClass));\r\n    }\r\n}\r\nexport default domAddClass;","/**\r\n * removes a class from an element\r\n *\r\n * @function domRemoveClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domRemoveClass(el, cssClass){\r\n    return el.classList.remove(cssClass);\r\n}\r\nexport default domRemoveClass;","import domHasClass      from \"@purtuga/common/src/domutils/domHasClass.js\"\r\nimport domAddClass      from \"@purtuga/common/src/domutils/domAddClass.js\"\r\nimport domRemoveClass   from \"@purtuga/common/src/domutils/domRemoveClass.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute  } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_class\";\r\n\r\nexport class ClassDirective extends Directive {\r\n    static NodeHandlerConstructor = class ClassDirectiveNodeHandler extends NodeHandler {\r\n        update(newClasses) {\r\n            const { _node: node } = this;\r\n            const oldClasses = PRIVATE.get(this).value || {};\r\n\r\n            Object.keys(newClasses)\r\n                .concat(Object.keys(oldClasses))\r\n                .forEach(className => {\r\n                    if (newClasses[className] && !domHasClass(node, className)) {\r\n                        domAddClass(node, className);\r\n                    }\r\n                    else if (!newClasses[className] && domHasClass(node, className)) {\r\n                        domRemoveClass(node, className);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"class\");\r\n    }\r\n}\r\n\r\nexport default ClassDirective;\r\n\r\n","import {Map} from \"@purtuga/common/src/jsutils/Map.js\"\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\nimport {\r\n    arraySplice,\r\n    isArray,\r\n    objectKeys\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\nimport Directive from \"./Directive.js\"\r\nimport {\r\n    arrayForEach,\r\n    createComment,\r\n    createValueGetter,\r\n    DOM_DATA_BIND_PROP,\r\n    getAttribute,\r\n    hasAttribute,\r\n    isPureObject,\r\n    PRIVATE,\r\n    removeAttribute,\r\n    removeChild\r\n} from \"../utils\"\r\n\r\nimport {render} from \"../render.js\";\r\nimport {view} from \"../view.js\";\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst EACH = Symbol(\"directive.each.setup\");\r\nconst DIRECTIVE     = \"_each\";\r\nconst KEY_DIRECTIVE = \"_key\";\r\nconst destroyBinder = binder => binder && binder._destroy();\r\nconst defaultRowKey = data => data;\r\nconst isEmptyList   = list => (isArray(list) && !list.length) || (isPureObject(list) && !objectKeys(list).length);\r\n\r\nclass EachDirectiveNodeHandler extends NodeHandler {\r\n\r\n    binders = [];\r\n\r\n    bindersByKey = new Map();\r\n\r\n    listIterator = () => this._directive.iterateOverList(this, PRIVATE.get(this).value);\r\n\r\n    init(directive, node, directives) {\r\n        super.init(directive, node, directives);\r\n        this._placeholderEle = createComment(\"directive.each\");\r\n        this._isSoleChild = hasDedicatedParent(this._node);\r\n\r\n        // create the template for the row content, which is stored in the Comment node data\r\n        this._viewTemplate = view(node.data, directives);\r\n        if (!this._viewTemplate[EACH]) {\r\n            setupViewTemplate(this._viewTemplate);\r\n        }\r\n\r\n        domInsertBefore(this._placeholderEle, node);\r\n        removeChild(node.parentNode, node);\r\n    }\r\n\r\n\r\n    update(newList) {\r\n        const state = PRIVATE.get(this);\r\n\r\n        if (newList !== state.value) {\r\n            state.value = null;\r\n\r\n            if (this.listIterator.stopWatchingAll) {\r\n                this.listIterator.stopWatchingAll();\r\n            }\r\n        }\r\n\r\n        if (!newList) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n            return;\r\n        }\r\n\r\n        state.value = newList;\r\n\r\n        if (isEmptyList(newList) && this.binders) {\r\n            this._directive.destroyChildBinders(this.binders, this);\r\n        }\r\n        else {\r\n            this.listIterator();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        // Support for Observables\r\n        if (this.listIterator.stopWatchingAll) {\r\n            this.listIterator.stopWatchingAll();\r\n        }\r\n        this.bindersByKey.clear();\r\n        this._directive.destroyChildBinders(this.binders, this);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Directive to loop through an array or object. In addition, it also support an\r\n * internal binding directive called `b:key`\r\n *\r\n * @class EachDirective\r\n * @extends Directive\r\n *\r\n * @example\r\n *\r\n * // Use with array:\r\n * _each=\"item of arrayList\"\r\n * _each=\"(item, index) of arrayList\"\r\n *\r\n * // Use with Object\r\n * _each=\"value of objectList\"\r\n * _each=\"(value, key) of objectList\"\r\n */\r\nexport class EachDirective extends Directive {\r\n    static NodeHandlerConstructor = EachDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        const [ iteratorArgs, listVar ] = parseDirectiveValue((attrValue || \"\").trim());\r\n        this._attr              = attr;\r\n        this._iteratorArgs      = iteratorArgs;\r\n        this._tokenValueGetter  = createValueGetter((listVar || \"\"), \"each\");\r\n    }\r\n\r\n    /**\r\n     * Destroy the binder instances and remove Elements from DOM.\r\n     *\r\n     * @param binders\r\n     * @param handler\r\n     */\r\n    destroyChildBinders(binders, handler) {\r\n        if (!binders || !binders.length) {\r\n            return;\r\n        }\r\n\r\n        binders = binders.splice(0);\r\n\r\n        if (handler._isSoleChild) { // Supper fast way to just clear the UI\r\n            const parentEle = handler._placeholderEle.parentNode;\r\n            parentEle.textContent = \"\";\r\n            parentEle.appendChild(handler._placeholderEle);\r\n            setTimeout(() => {\r\n                arrayForEach(binders, binder => binder._destroy());\r\n            });\r\n        }\r\n        else {\r\n            arrayForEach(binders, binder => binder._destroy());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns an object (`dataObj` if provided on input) with additional keys - each\r\n     * one being the argNames that the user defined in their HTML `_each` template.\r\n     *\r\n     * It essentially matches up two array by using the keys from one array and mapping to\r\n     * values from the second array at exactly the same location.\r\n     * Example:\r\n     *\r\n     *      _each=\"item in arrayList\"\r\n     *      arrayList = [ \"value 1\" ]\r\n     *\r\n     *      // Array Keys           // Array values             // result: object\r\n     *      // Defined in the       // Data in actual           // Matches the key\r\n     *      // template             // Array                    // to the data\r\n     *      //-------------------   //-----------------         //---------------------\r\n     *      [                       [                   ===     {\r\n     *          \"item\"                  \"value 1\"       ===         item: \"value1\"\r\n     *      ]                       ]                   ===     }\r\n     *\r\n     * @param {Array} values\r\n     * @param {Object} [dataObj]\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getDataForIteration(values, dataObj) {\r\n        return this._iteratorArgs.reduce(\r\n            (rowData, argName) => {\r\n                rowData[argName] = values.shift();\r\n                return rowData;\r\n            },\r\n            dataObj || {}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Iterates over a new set (list) and eitehr updates or builds out new elements for each item\r\n     * in that list.\r\n     *\r\n     * @param handler\r\n     * @param newData\r\n     */\r\n    iterateOverList(handler, newData) {\r\n        /** @type NodeHandlerState */\r\n        const state = PRIVATE.get(handler);\r\n        let isDataArray             = isArray(newData);\r\n        let iterationDataList;\r\n\r\n\r\n        if (isDataArray) {\r\n            isDataArray = true;\r\n            iterationDataList = newData;\r\n        }\r\n        else if (isPureObject(newData)) {\r\n            iterationDataList = objectKeys(newData);\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        const currentBinders        = handler.binders;\r\n        const binderToBeDestroyed   = new Map();    // Will be recycled\r\n        const totalItems            = iterationDataList.length;\r\n        const { usesKey, getKey }   = handler._viewTemplate[EACH];\r\n\r\n        // Loop through each piece of data and build a DOM binder for it.\r\n        // The data should be in sync with `currentBinders`\r\n        for (let i = 0; i < totalItems; i++) {\r\n            let rowData = { // FIXME: can this object creation be avoided? For Arrays - it should be possible. Objects - not sure.\r\n                $root: state.data.$root || state.data,\r\n                $parent: state.data,\r\n                $data: state.data.$data || state.data\r\n            };\r\n\r\n            // Adjust the rowData to have the `key` and/or `value` and `index` as top level items\r\n            // These are added to the rowData object just created above.\r\n            if (isDataArray) {\r\n                this.getDataForIteration([ iterationDataList[i], i ], rowData);\r\n            }\r\n            else {\r\n                this.getDataForIteration([ newData[ iterationDataList[i] ], iterationDataList[i], i ], rowData);\r\n            }\r\n\r\n            const rowKey = getKey(\r\n                usesKey\r\n                    ? rowData                               // => Use rowData created above - getKey() will run a value getter on it.\r\n                    : isDataArray\r\n                        ? iterationDataList[i]              // => Use the object from the newData\r\n                        : newData[ iterationDataList[i] ]   // => Use the Object key\r\n            );\r\n\r\n            // If a binder currently exists, then see if it is the one previously\r\n            // created for this row's data\r\n            if (currentBinders[i] && currentBinders[i]._loop.rowKey === rowKey) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // If there is a binder at the current position, then its not the one need.\r\n            // move it to the `to be destroyed` list.\r\n            if (currentBinders[i]) {\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                binderToBeDestroyed.set(\r\n                    currentBinders[i]._loop.rowKey,\r\n                    currentBinders[i]\r\n                );\r\n                currentBinders[i] = null;\r\n            }\r\n\r\n            // Do we have a rowBinder for this data item in the existing list,\r\n            // but perhaps at a different location? Get it and move it to the new position.\r\n            // Old position in the existing array is set to null (avoids mutating array)\r\n            let binder = handler.bindersByKey.get(rowKey);\r\n\r\n            if (binder) {\r\n                if (binder._loop.pos !== null && currentBinders[binder._loop.pos] === binder) {\r\n                    currentBinders[binder._loop.pos] = null;\r\n                }\r\n            } else {\r\n                binder = binderToBeDestroyed.get(rowKey);\r\n\r\n                if (binder) {\r\n                    binderToBeDestroyed.delete(rowKey);\r\n                }\r\n            }\r\n\r\n            if (binder) {\r\n                currentBinders[i] = binder;\r\n                binder._loop.pos = i;\r\n                currentBinders[i][DOM_DATA_BIND_PROP].recover();\r\n                positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n                currentBinders[i][DOM_DATA_BIND_PROP].setData(rowData);\r\n                continue;\r\n            }\r\n\r\n            // Create new binder\r\n            // First check if we can recycle one that is tagged to be destroyed.\r\n            // if not, then create a new one.\r\n            if (binderToBeDestroyed.size) {\r\n                const [recycleBinderKey, recycleBinder] = binderToBeDestroyed.entries().next().value;\r\n                binder = recycleBinder;\r\n                binder[DOM_DATA_BIND_PROP].setData(rowData);\r\n                binderToBeDestroyed.delete(recycleBinderKey);\r\n                binder._loop.rowKey = rowKey;\r\n                binder._loop.pos = i;\r\n            } else {\r\n                binder = render(handler._viewTemplate, rowData, handler._directives);\r\n                binder._destroy = destroyRowElement;\r\n                binder._handler = handler; // needed by destroyRowElement()\r\n                binder._loop  = { rowKey, pos: i };\r\n            }\r\n\r\n            currentBinders[i] = binder;\r\n            handler.bindersByKey.set(rowKey, binder);\r\n            positionRowInDom(currentBinders, i, handler._placeholderEle);\r\n        }\r\n\r\n        // Destroy binders that were not used\r\n        if (binderToBeDestroyed.size) {\r\n            arrayForEach(binderToBeDestroyed.values(), destroyBinder);\r\n            binderToBeDestroyed.clear();\r\n        }\r\n\r\n        // remove any left over items in currentBinders where is no longer part of newData\r\n        if (totalItems < currentBinders.length) {\r\n            arrayForEach(arraySplice(currentBinders, totalItems), destroyBinder);\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupViewTemplate (viewTemplate) {\r\n    if (!viewTemplate[EACH]) {\r\n        viewTemplate[EACH] = {\r\n            usesKey: false,\r\n            getKey: defaultRowKey\r\n        };\r\n        const firstChildNode = viewTemplate.ele.content.firstChild;\r\n\r\n        if (\r\n            firstChildNode &&\r\n            firstChildNode.hasAttribute &&\r\n            hasAttribute(firstChildNode, KEY_DIRECTIVE)\r\n        ) {\r\n            viewTemplate[EACH].usesKey = true;\r\n            viewTemplate[EACH].getKey = createValueGetter(getAttribute(firstChildNode, KEY_DIRECTIVE), \"each.key\");\r\n            removeAttribute(firstChildNode, KEY_DIRECTIVE);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction positionRowInDom(currentBinders, binderIndex, defaultInsertMarkerElement) {\r\n    const binder = currentBinders[binderIndex];\r\n\r\n    // Get all original nodes from binder back to the DocumentFragment\r\n    binder[DOM_DATA_BIND_PROP].recover();\r\n\r\n    // If we have a binder after this one, then do an insertBefore using the first node of the nextSibling\r\n    if (currentBinders[binderIndex + 1]) {\r\n        domInsertBefore(binder, currentBinders[binderIndex + 1][DOM_DATA_BIND_PROP]._childNodes[0]);\r\n    } else {\r\n        // Just place the binder before the marker\r\n        domInsertBefore(binder, defaultInsertMarkerElement);\r\n    }\r\n}\r\n\r\nfunction destroyRowElement () {\r\n    // remove all elements/nodes of this row from DOM\r\n    this[DOM_DATA_BIND_PROP].recover();\r\n\r\n    if (this._loop.rowKey) {\r\n        this._handler.bindersByKey.delete(this._loop.rowKey);\r\n    }\r\n\r\n    this[DOM_DATA_BIND_PROP].destroy();\r\n}\r\n\r\nfunction parseDirectiveValue(attrValue) {\r\n    let matches = /\\(?(.+?)\\)?\\W?(?:of|in)\\W(.*)/.exec(attrValue);\r\n    if (matches) {\r\n        matches = matches.slice(1);\r\n        matches[0] = matches[0].split(/,/).map(argName => String(argName).trim());\r\n        return matches;\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction hasDedicatedParent(node) {\r\n    return Array.prototype.every.call(node.parentNode.childNodes, childNode => {\r\n        return childNode === node || (childNode.nodeType === 3 && !childNode.textContent.trim());\r\n    });\r\n}\r\n\r\n\r\nexport default EachDirective;\r\n","import Directive                from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    createValueGetter,\r\n    hasAttribute } from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n//============================================\r\nconst DIRECTIVE = \"_html\";\r\n\r\nexport class HtmlDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            if (newValue === PRIVATE.get(this).value) {\r\n                return;\r\n            }\r\n\r\n            this._node.innerHTML = newValue;\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"html\");\r\n    }\r\n}\r\n\r\nexport default HtmlDirective;\r\n\r\n","import Directive    from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    DOM_DATA_BIND_PROP,\r\n    hasAttribute,\r\n    createComment,\r\n    removeChild,\r\n    createValueGetter } from \"../utils.js\"\r\nimport {render} from \"../render.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domInsertBefore} from \"@purtuga/common/src/domutils/domInsertBefore.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_if\";\r\n\r\nexport class IfDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n\r\n        _renderedEle = null;\r\n\r\n        _renderTemplate = this._node.data;\r\n\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._placeholderEle = createComment(\"directive.if\");\r\n            domInsertBefore(this._placeholderEle, this._node);\r\n            removeChild(this._node.parentNode, this._node);\r\n        }\r\n        update(showElement) {\r\n            const state = PRIVATE.get(this);\r\n\r\n            // If there is no change in Element visibility, then only update its data.\r\n            if (state.value === showElement) {\r\n                if (this._renderedEle) {\r\n                    this._renderedEle[DOM_DATA_BIND_PROP].setData(state.data);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (showElement && !this._renderedEle) {\r\n                this._renderedEle = render(this._renderTemplate, state.data, this._directives);\r\n                domInsertBefore(this._renderedEle, this._placeholderEle);\r\n            } else if (!showElement)  {\r\n                this.teardown();\r\n            }\r\n        }\r\n\r\n        teardown() {\r\n            if (this._renderedEle) {\r\n                this._renderedEle[DOM_DATA_BIND_PROP].recover();\r\n                this._renderedEle[DOM_DATA_BIND_PROP].destroy();\r\n                this._renderedEle = null;\r\n            }\r\n        }\r\n\r\n        destroy() {\r\n            this.teardown();\r\n            super.destroy();\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    static manages() { return true; }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"if\");\r\n    }\r\n}\r\n\r\nexport default IfDirective;\r\n","import domAddEventListener  from \"@purtuga/common/src/domutils/domAddEventListener.js\"\r\nimport Directive            from \"./Directive.js\"\r\nimport {\r\n    PRIVATE,\r\n    escapeString,\r\n    createValueGetter,\r\n    getNodeAttrNames,\r\n    logError,\r\n    parseDirectiveString\r\n} from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {objectKeys} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_on.\";\r\nconst matchesDirective      = new RegExp(`^${ escapeString(DIRECTIVE) }(.*)`);\r\nconst isNumber = /^\\d+$/;\r\nconst keyAliases = {\r\n    \"13\": \"enter\",\r\n    \"27\": \"esc\",\r\n    \"9\":  \"tab\",\r\n    \"46\": \"delete\",\r\n    \"32\": \"space\",\r\n    \"38\": \"up\",\r\n    \"40\": \"down\",\r\n    \"37\": \"left\",\r\n    \"39\": \"right\"\r\n};\r\nconst keyCodesAliases = Object.values(keyAliases);\r\n\r\nclass OnDirectiveNodeHandler extends NodeHandler {\r\n\r\n    init(...args) {\r\n        super.init(...args);\r\n        this.setup();\r\n    }\r\n\r\n    handleEvent(domEv) {\r\n        const {hasModifiers, modifiers} = this._directive._info;\r\n        const whichKey = domEv.which;\r\n\r\n        // If this is a Keyboard event and the directive has modifiers that filters\r\n        // out the type of events to which the callback should be invoked, then\r\n        // only proceed if they match\r\n        if (\r\n            this._directive._filter &&\r\n            domEv instanceof KeyboardEvent &&\r\n            !modifiers[whichKey] &&\r\n            !modifiers[keyAliases[whichKey]]\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const state = PRIVATE.get(this);\r\n\r\n        let tokenValue;\r\n        let returnValue;\r\n        state.data.$ev = domEv;\r\n\r\n        // The call to the token value getter is done with the context of the HTML Node.\r\n        try {\r\n            tokenValue = this._directive._tokenValueGetter.call(this._node, state.data);\r\n        }\r\n        catch(e) {\r\n            logError(e);\r\n            return;\r\n        }\r\n\r\n        delete state.data.$ev;\r\n\r\n        if (\"function\" === typeof tokenValue) {\r\n            returnValue = tokenValue.call(this._node, domEv);\r\n        }\r\n        else if (tokenValue && \"function\" === tokenValue.handleEvent) {\r\n            // DOM EventHandler interface: object having a `handleEvent` method\r\n            returnValue = tokenValue.handleEvent(domEv);\r\n        }\r\n\r\n        // Handle post callback modifiers\r\n        if (hasModifiers) {\r\n            if (modifiers.once) {\r\n                this.teardown();\r\n            }\r\n            if (modifiers.stop) {\r\n                domEv.stopPropagation();\r\n            }\r\n            if (modifiers.prevent) {\r\n                domEv.preventDefault();\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    setup() {\r\n        this._evListener = domAddEventListener(\r\n            this._node,\r\n            this._directive._eventName,\r\n            this\r\n        );\r\n    }\r\n\r\n    teardown() {\r\n        if (this._evListener) {\r\n            this._evListener.remove();\r\n            this._evListener = null;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.teardown();\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nexport class OnDirective extends Directive {\r\n    static NodeHandlerConstructor = OnDirectiveNodeHandler;\r\n\r\n    static has(ele) {\r\n        let directiveAttr = \"\";\r\n        getNodeAttrNames(ele).some(attr => matchesDirective.test(attr) && (directiveAttr = attr));\r\n        return directiveAttr;\r\n    }\r\n\r\n    init(directiveAttr, attrValue) {\r\n        this._attr              = directiveAttr;\r\n        this._info              = parseDirectiveString((new RegExp(matchesDirective)).exec(directiveAttr)[1]);\r\n        this._eventName         = this._info.value;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"on\");\r\n\r\n        // Set the flag that indicates there are Events should be filtered\r\n        const modifiers = this._info.modifiers;\r\n        this._filter = objectKeys(modifiers).some(modifier => (\r\n            keyCodesAliases.indexOf(modifier) !== -1 || isNumber.test(modifier)\r\n        ));\r\n    }\r\n\r\n    // takes care of only storing the data on the node, for when the event is triggered\r\n    render(handler, node, data) {\r\n        let state = PRIVATE.get(handler);\r\n\r\n        if (!state) {\r\n            state = {\r\n                data:       { $data: {} },\r\n                tracker:    () => this.render(handler, node, state.data)\r\n            };\r\n            PRIVATE.set(handler, state);\r\n        }\r\n\r\n        if (data) {\r\n            if (data.$data) {\r\n                state.data = data;\r\n            }\r\n            else {\r\n                state.data.$data = data;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default OnDirective;\r\n","import AttrDirective from \"./attr-directive.js\"\r\n\r\n//==========================================================\r\n\r\nconst matchRegExp = /^_prop\\.(.*)/;\r\nexport class PropDirective extends AttrDirective {\r\n    static get _matches() { return matchRegExp; }\r\n    static _isProp() { return true; }\r\n}\r\nexport default PropDirective;\r\n","import Directive        from \"./Directive.js\"\r\nimport {\r\n    createValueGetter,\r\n    hasAttribute    }   from \"../utils.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\n\r\n//============================================\r\nconst DIRECTIVE             = \"_show\";\r\nconst HIDDEN                = \"none\";\r\n\r\nexport class ShowDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        init(...args) {\r\n            super.init(...args);\r\n            this._origDisplayStyle = this._node.style.display || \"\";\r\n        }\r\n        update(newValue) {\r\n            const eleStyleList = this._node.style;\r\n\r\n            if (newValue) {\r\n                eleStyleList.display = this._origDisplayStyle;\r\n            }\r\n            else if (eleStyleList.display !== HIDDEN)  {\r\n                eleStyleList.display = HIDDEN;\r\n            }\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"show\");\r\n    }\r\n}\r\n\r\nexport default ShowDirective;","/**\r\n * Sets styles on an element\r\n *\r\n * @function domSetStyle\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} styles\r\n *\r\n * @example\r\n *\r\n * domSetStyle(document.body, {\"background-color\", \"yellow\"});\r\n */\r\nexport function domSetStyle(el, styles){\r\n    if (!el || typeof styles !== \"object\"){\r\n        return;\r\n    }\r\n    Object.keys(styles).forEach(function(prop){\r\n        el.style[prop] = styles[prop];\r\n    });\r\n}\r\nexport default domSetStyle;\r\n","import {\r\n    createValueGetter,\r\n    hasAttribute\r\n}   from \"../utils.js\"\r\nimport Directive        from \"./Directive.js\"\r\nimport {NodeHandler} from \"./NodeHandler.js\";\r\nimport {domSetStyle} from \"@purtuga/common/src/domutils/domSetStyle.js\"\r\n\r\n//============================================\r\nconst DIRECTIVE = \"_style\";\r\n\r\nexport class StyleDirective extends Directive {\r\n    static NodeHandlerConstructor = class extends NodeHandler {\r\n        update(newValue) {\r\n            domSetStyle(this._node, newValue);\r\n        }\r\n    };\r\n\r\n    static has(ele) {\r\n        return hasAttribute(ele, DIRECTIVE) ? DIRECTIVE : \"\";\r\n    }\r\n\r\n\r\n    init(attr, attrValue) {\r\n        this._attr              = attr;\r\n        this._tokenValueGetter  = createValueGetter((attrValue || \"\"), \"style\");\r\n    }\r\n}\r\n\r\nexport default StyleDirective;","import {DomDataBind}        from \"./DomDataBind.js\"\r\nimport {render}             from \"./render.js\"\r\nimport {view}               from \"./view.js\";\r\nimport {Directive}          from \"./directives/Directive.js\"\r\nimport * as directives   from \"./directives/index.js\";\r\n\r\n//----------------------------------------------------------------------\r\n\r\nconst DomDataBindAll = DomDataBind.extend();\r\nconst allDirectives = [directives.EachDirective, directives.IfDirective];\r\n\r\nObject.keys(directives).forEach(directiveName => {\r\n    if (allDirectives.indexOf(directives[directiveName]) === -1) {\r\n        allDirectives.push(directives[directiveName]);\r\n    }\r\n});\r\n\r\nDomDataBindAll.directives = allDirectives;\r\n\r\nexport * from \"./directives/index.js\"\r\nexport default DomDataBindAll;\r\nexport {\r\n    DomDataBindAll,\r\n    DomDataBind,\r\n    render,\r\n    view,\r\n    allDirectives,\r\n    directives,\r\n    Directive\r\n};","//------------------------------------------------------------------------\r\n//\r\n//  NOTE:   THIS MODULE IS NOT INCLUDED IN A BUILD.\r\n//          TO USE IT, YOU MUST FIRST INSTALL ComponentElement\r\n//          AND THEN IMPORT THIS DIRECTLY FROM SOURCE\r\n//\r\n//------------------------------------------------------------------------\r\nimport {ComponentElement} from \"@purtuga/component-element/src/ComponentElement.js\"\r\nimport {\r\n    prepareRenderedContent,\r\n    supportsNativeShadowDom,\r\n    reStyleComponentInstanceSubtree\r\n} from \"@purtuga/component-element/src/polyfill-support.js\"\r\nimport {objectExtend} from \"@purtuga/common/src/jsutils/objectExtend.js\"\r\nimport {throwIfThisIsPrototype} from \"@purtuga/common/src/jsutils/throwIfThisIsPrototype.js\"\r\nimport {createElement, defineProperty} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport {generatePropGetterSetter} from \"@purtuga/common/src/jsutils/generatePropGetterSetter.js\";\r\nimport {view} from \"./view.js\"\r\nimport {render} from \"./render.js\"\r\n\r\n\r\n//==============================================================================\r\nexport * from \"@purtuga/component-element\"\r\nexport * from \"./index\"\r\n\r\nconst BINDING = Symbol(\"dom-data-bind\");\r\nconst STATE_OBSERVABLE = \"__$STATE$\";\r\nconst SHADOW_DOM_SUPPORTED = supportsNativeShadowDom();\r\n\r\n/**\r\n * Base class around ComponentElement that allows for `template` to\r\n * take advantage of DomDataBind as its templating engine.\r\n *\r\n * Private state data can be assigned to the `this.state` property (an `Object`),\r\n * which will automatically trigger `render()` to be executed if any of its shallow\r\n * properties change.\r\n *\r\n * Render templates will be given the entire component instance as input (`data`) for\r\n * rendering, thus the entire component members (like `props` and `state`) will be available\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @example\r\n *\r\n * import {DomDataBindElement} from \"@purtuga/dom-data-bind/src/DomDataBindElement.js\"\r\n *\r\n * export class TestComponent extends DomDataBindElement {\r\n *      static tagName = \"test-component\";\r\n *\r\n *      didInit() {\r\n *          this.state = {\r\n *              title: \"test\"\r\n *          };\r\n *      }\r\n *\r\n *      willRender() {\r\n *          return this._templateDone;\r\n *      }\r\n *\r\n *      render() {\r\n *          this._templateDone = true; // will cancel future .render()'s\r\n *         return `<h1>{{state.title}}</h1>`;\r\n *      }\r\n * }\r\n *\r\n */\r\nexport class DomDataBindElement extends ComponentElement {\r\n\r\n    /**\r\n     * The list of directives that will be used when rendering the template.\r\n     * By default, no directives are defined\r\n     * @type {Array}\r\n     */\r\n    static directives = [];\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    _setView(renderOutput) {\r\n        // the view template is rendered with `this` as the `data` argument\r\n\r\n\r\n        // FIXME: needs to handle DOMElements + DocumentFragments?\r\n\r\n        const binding = getDomDataBindMeta(this);\r\n\r\n        if (!SHADOW_DOM_SUPPORTED) {\r\n            // renderOutput, before being recreated as a View Template, MUST\r\n            // be processed by ShadyCSS - so that the resulting string has scoped DOM.\r\n            // This is needed because DomDataBind will manipulate the html for the\r\n            // template and may actually remove nodes (ex. if, each directives) that\r\n            // are inserted/added dynamically later.\r\n            const scopeTemplate = createElement(\"template\");\r\n            scopeTemplate.innerHTML = renderOutput;\r\n            prepareRenderedContent(scopeTemplate, this);\r\n            renderOutput = scopeTemplate.innerHTML;\r\n        }\r\n\r\n        let viewTemplate = view(renderOutput, this.constructor.directives);\r\n\r\n        // If it is the same as the template currently displayed - exit; Nothing to do.\r\n        if (binding.current && binding.current.DomDataBind.fromTemplateId === viewTemplate.id) {\r\n            binding.current.DomDataBind.setData(this);\r\n            reStyleComponentInstanceSubtree(this);\r\n            return;\r\n        }\r\n\r\n        if (binding.current) {\r\n            binding.current.DomDataBind.destroy();\r\n        }\r\n\r\n        // Create a new instance of this template\r\n        binding.current = render(viewTemplate, this, this.constructor.directives);\r\n\r\n        this.$ui.textContent = \"\";\r\n        this.$ui.appendChild(binding.current);\r\n\r\n        if (!SHADOW_DOM_SUPPORTED) {\r\n            reStyleComponentInstanceSubtree(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds the members of a given object ot the state object. Use this when wanting to\r\n     * add additional props to state after it has already been initialized\r\n     *\r\n     * @param {Object} obj\r\n     */\r\n    addToState(obj) {\r\n        return stateSetter.call(this, obj);\r\n    }\r\n\r\n    /**\r\n     * Element's private state. Object is an observable structure.\r\n     *\r\n     * @property DomDataBindElement#state\r\n     * @type {Object}\r\n     */\r\n    get state() {\r\n        throwIfThisIsPrototype(this);\r\n        return setupState(this)\r\n    }\r\n    set state(data) {\r\n        throwIfThisIsPrototype(this);\r\n        return setupState(this, data);\r\n    }\r\n}\r\n\r\nfunction getDomDataBindMeta(instance) {\r\n    if (!instance[BINDING]) {\r\n        instance[BINDING] = {\r\n            current: null\r\n        };\r\n    }\r\n    return instance[BINDING];\r\n}\r\n\r\nfunction setupState(instance, data = {}) {\r\n    if (instance._isSettingUp) {\r\n        return;\r\n    }\r\n    instance._isSettingUp = true;\r\n    defineProperty(instance, STATE_OBSERVABLE, data);\r\n    defineProperty(instance, \"state\", undefined, stateGetter, stateSetter);\r\n    addReactivityToState(instance);\r\n    delete instance._isSettingUp;\r\n    return data;\r\n}\r\n\r\nfunction stateGetter() {\r\n    return this[STATE_OBSERVABLE];\r\n}\r\n\r\nfunction stateSetter(data) {\r\n    objectExtend(true, this[STATE_OBSERVABLE], data);\r\n    addReactivityToState(this);\r\n    return this[STATE_OBSERVABLE];\r\n}\r\n\r\nfunction addReactivityToState(instance) {\r\n    // this === DomDataBindElement!!!!\r\n    Object\r\n        .entries(Object.getOwnPropertyDescriptors(instance[STATE_OBSERVABLE]))\r\n        .forEach(([key, descriptor]) => {\r\n            if (!descriptor.get || !descriptor.get.isGetterSetter) {\r\n                const getterSetter = generatePropGetterSetter(\r\n                    key,\r\n                    undefined,\r\n                    instance[STATE_OBSERVABLE][key],\r\n                    instance._queueUpdate,\r\n                    instance\r\n                );\r\n                defineProperty(instance[STATE_OBSERVABLE], key, undefined, getterSetter, getterSetter, true, true);\r\n            }\r\n        });\r\n}\r\n\r\nexport default DomDataBindElement;\r\n","import {DomDataBindElement} from \"./DomDataBindElement.js\";\r\n\r\n//======================================================================\r\nconst DomDataBindEleProto = DomDataBindElement.prototype;\r\nconst memberToApply = [\r\n    \"_setView\",\r\n    \"addToState\",\r\n    \"state\"\r\n];\r\n\r\n/**\r\n * Decorates a sub-class of `@purtuga/ComponentElement` so that rendered content\r\n * uses data binding. (essentially, copies the methods from `DomDataBindElement`\r\n * to the given class.\r\n *\r\n * @param {Object} [optionsOrClassDescriptor]\r\n * @param {Array} [optionsOrClassDescriptor.directives]\r\n *\r\n * @returns {function(*): *}\r\n *\r\n * @example\r\n *\r\n * @dataBoundTemplates()\r\n * class NewElement extends ComponentElement {}\r\n */\r\nexport function dataBoundTemplates(optionsOrClassDescriptor) {\r\n    const opt = optionsOrClassDescriptor;\r\n\r\n    function applyDirectiveToClass(classDescriptor) {\r\n        memberToApply.forEach(memberName => {\r\n            classDescriptor.elements.push({\r\n                key: memberName,\r\n                kind: \"method\",\r\n                placement: \"prototype\",\r\n                descriptor: Object.getOwnPropertyDescriptor(DomDataBindEleProto, memberName)\r\n            });\r\n        });\r\n\r\n        // Add directive list if one was set\r\n        if (opt && opt.directives) {\r\n            classDescriptor.elements.push({\r\n                kind: \"field\",\r\n                key: \"directives\",\r\n                placement: \"static\",\r\n                descriptor: { configurable: true },\r\n                initializer() {\r\n                    return opt.directives;\r\n                }\r\n            });\r\n        }\r\n\r\n        return classDescriptor\r\n    }\r\n\r\n    // If this is being called with the actual Class decoratorDescriptor,\r\n    // then decorate the class\r\n    if (optionsOrClassDescriptor && optionsOrClassDescriptor.kind) {\r\n        applyDirectiveToClass(optionsOrClassDescriptor);\r\n    }\r\n\r\n    return applyDirectiveToClass;\r\n}","import {\r\n    ComponentElement,\r\n    prop,\r\n    bind\r\n} from \"@purtuga/component-element/src/index.js\"\r\nimport {\r\n    appendChild,\r\n    createElement,\r\n    createTextNode,\r\n    setAttribute,\r\n    doc\r\n} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//=============================================================\r\nconst SOURCE_SETUP = Symbol(\"SOURCE_SETUP\");\r\nconst SOURCE_STYLES = Symbol(\"SOURCE_STYLES\");\r\nconst STATE = Symbol(\"STATE\");\r\nconst SOURCES = {};\r\nconst CACHE = Object.create(null);\r\n\r\n// Aliases\r\nconst fromCharCode = String.fromCharCode;\r\n\r\n/**\r\n * Display icons from various sources.\r\n *\r\n * Usage:\r\n *\r\n * ```html\r\n * <i-con\r\n *      from=\"source-name\"\r\n *      name=\"icon-name\"\r\n *      size=\"xs|sm|md|lg\"\r\n *  ></i-con>\r\n * ```\r\n *\r\n * __Supported CSS Variables__\r\n *\r\n * -    `--icon-size`: set custom icon size\r\n *\r\n * @extends ComponentElement\r\n */\r\nexport class Icon extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"i-con\";\r\n\r\n    /**\r\n     * An array of icons sources. Object key is the value that should be used in\r\n     * the `from` attribute.\r\n     *\r\n     * @returns {Object<String, IconSource>}\r\n     */\r\n    static sources = SOURCES;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n    /**\r\n     * Fetches a given svg Icon from the given url, unless its already cached,\r\n     * in which case, the cached value is returned\r\n     *\r\n     * @param {String} iconUrl\r\n     * @returns {Promise<String, Error>}\r\n     */\r\n    static fetchSvg(iconUrl) {\r\n        if (!CACHE[iconUrl]) {\r\n            CACHE[iconUrl] = new Promise((resolve, reject) => {\r\n                const request = new XMLHttpRequest();\r\n                request.addEventListener('load', function () {\r\n                    if (this.status < 200 || this.status >= 300) {\r\n                        reject(new Error(`${this.status} ${this.responseText}`));\r\n                        return;\r\n                    }\r\n                    resolve(this.responseText);\r\n                });\r\n                request.onerror = reject;\r\n                request.onabort = reject;\r\n                request.open(\"GET\", iconUrl);\r\n                request.send();\r\n            });\r\n        }\r\n\r\n        return CACHE[iconUrl];\r\n    }\r\n\r\n    /**\r\n     * Sets up a Font for use in Font icons.\r\n     *\r\n     * @param {String} fontFaceCss\r\n     *  The css `@font-face` definition.\r\n     */\r\n    static setupFont(fontFaceCss) {\r\n        doc.head.appendChild(getStyleEle(fontFaceCss));\r\n    }\r\n\r\n    /**\r\n     * Given an HEX Unicode codepoint, returns UTF16 surrogate pairs.\r\n     *\r\n     * @param   string  generic codepoint, i.e. '1F4A9'\r\n     * @return  string  codepoint transformed into utf16 surrogates pair,\r\n     *          i.e. \\uD83D\\uDCA9\r\n     *\r\n     * @link https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n     *\r\n     * @example\r\n     *  twemoji.convert.fromCodePoint('1f1e8');\r\n     *  // \"\\ud83c\\udde8\"\r\n     *\r\n     *  '1f1e8-1f1f3'.split('-').map(twemoji.convert.fromCodePoint).join('')\r\n     *  // \"\\ud83c\\udde8\\ud83c\\uddf3\"\r\n     */\r\n    static fromCodePoint(codepoint) {\r\n        // From: https://unpkg.com/twemoji@11.2.0/2/twemoji.js\r\n        //       But changed to string up `U+` if its present in the given value\r\n\r\n        // TODO: should we momoize?\r\n        var code = typeof codepoint === 'string' ?\r\n            parseInt(codepoint.replace(/U\\+/i, \"\"), 16) : codepoint;\r\n        if (code < 0x10000) {\r\n            return fromCharCode(code);\r\n        }\r\n        code -= 0x10000;\r\n        return fromCharCode(\r\n            0xD800 + (code >> 10),\r\n            0xDC00 + (code & 0x3FF)\r\n        );\r\n    }\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The source from where the icon should be served\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    from = \"\";\r\n\r\n    /**\r\n     * The icons name. Source should know how ot deal with this value\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    name = \"\";\r\n\r\n    /**\r\n     * The icon code. Optional approach to defining an icon when using Font based icons.\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true })\r\n    code = \"\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    didInit() {\r\n        if (!this[STATE]) {\r\n            this[STATE] = {\r\n                $icon: null,\r\n                from: null,\r\n                name: null\r\n            };\r\n            this[SOURCE_STYLES] = {};\r\n            this.onPropsChange(this._handlePropChanges);\r\n        }\r\n    }\r\n\r\n    willRender() {\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        this._renderDone = true;\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        display: inline-block;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        contain: content;\r\n        font-size: initial;\r\n        width: 24px;\r\n        height: 24px;\r\n        vertical-align: baseline;\r\n        overflow: hidden;\r\n        \r\n        /* -- var support -- */\r\n        width: var(--icon-size, 24px);\r\n        height: var(--icon-size, 24px);\r\n    }\r\n    \r\n    .i-con-font {\r\n        font-size: 24px;\r\n        font-size: var(--icon-size, 24px);\r\n    }\r\n    \r\n    /* -------------------------------------------\r\n            SIZES\r\n       ------------------------------------------- */\r\n    :host([size=xs]) {\r\n        width: 0.8rem;\r\n        height: 0.8rem;\r\n    }\r\n    :host([size=xs]) .i-con-font {\r\n        font-size: 0.8rem;\r\n    }\r\n    \r\n    :host([size=sm]) {\r\n        width: 1.55rem;\r\n        height: 1.55rem;\r\n    }\r\n    :host([size=sm]) .i-con-font {\r\n        font-size: 1.55rem;\r\n    }\r\n    \r\n    :host([size=md]) {\r\n        width: 2.25rem;\r\n        height: 2.25rem;\r\n    }\r\n    :host([size=md]) .i-con-font {\r\n        font-size: 2.25rem;\r\n    }\r\n    \r\n    :host([size=lg]) {\r\n        width: 3.0rem;\r\n        height: 3.0rem;\r\n    }\r\n    :host([size=lg]) .i-con-font {\r\n        font-size: 3.0rem;\r\n    }\r\n    :host([size=xl]) {\r\n        width: 3.75rem;\r\n        height: 3.75rem;\r\n    }\r\n    :host([size=xl]) .i-con-font {\r\n        font-size: 3.75rem;\r\n    }\r\n    \r\n    .i-con,\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .i-con {\r\n        box-sizing: border-box;\r\n    } \r\n</style>\r\n`;\r\n    }\r\n\r\n    didRender() {\r\n        this._handlePropChanges();\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n\r\n    @bind\r\n    _handlePropChanges() {\r\n        const state = this[STATE];\r\n        const props = this.props;\r\n\r\n        // Reset current state\r\n        if (\r\n            props.name !== state.name ||\r\n            props.code !== state.code ||\r\n            props.from !== state.from\r\n        ) {\r\n            // If there is a source currently in use, and that source has a custom stylesheet,\r\n            // then remove it from DOM.\r\n            if (\r\n                state.from &&\r\n                this[SOURCE_STYLES][state.from]\r\n            ) {\r\n                this[SOURCE_STYLES][state.from].remove();\r\n            }\r\n\r\n            state.name = state.from = state.code = state.source = null;\r\n\r\n            if (state.$icon) {\r\n                if (state.$icon.parentNode) {\r\n                    state.$icon.parentNode.removeChild(state.$icon);\r\n                }\r\n                state.$icon = null;\r\n            }\r\n        }\r\n\r\n        if ((props.name || props.code) && props.from) {\r\n            state.name = props.name;\r\n            state.code = props.code;\r\n            state.from = props.from;\r\n\r\n            const iconSource = this.constructor.sources[props.from];\r\n\r\n            if (iconSource) {\r\n                state.source = iconSource;\r\n\r\n                // If this source needs setup, do it now\r\n                if (!iconSource[SOURCE_SETUP]) {\r\n                    iconSource[SOURCE_SETUP] = true;\r\n\r\n                    if (\"doSetup\" in iconSource) {\r\n                        iconSource.doSetup(this.constructor);\r\n                    }\r\n                }\r\n\r\n                // If this source has Styles, then set them up now for this instance\r\n                if (!this[SOURCE_STYLES][state.from] && \"getStyles\" in iconSource) {\r\n                    this[SOURCE_STYLES][state.from] = getStyleEle(iconSource.getStyles());\r\n                }\r\n\r\n                iconSource\r\n                    .getIcon(this.props, this)\r\n                    .then(this._showIconElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _showIconElement(iconEle) {\r\n        if (iconEle && this.props.name === this[STATE].name) {\r\n            // If iconEle is a documentFragment, then use only its first element\r\n            // TODO: maybe in the future support everything in the fagment\r\n            if (iconEle.nodeType === 11) {\r\n                iconEle = iconEle.firstChild;\r\n\r\n                if (!iconEle) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this[STATE].$icon = iconEle;\r\n            appendChild(this.$ui, iconEle);\r\n\r\n            // If this source requires some styles to be injected, do it now\r\n            if (this[SOURCE_STYLES][this[STATE].from]) {\r\n                this.$ui.insertBefore(\r\n                    this[SOURCE_STYLES][this[STATE].from],\r\n                    this[STATE].$icon\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction getStyleEle(cssCode, id) {\r\n    const styleEle = createElement(\"style\");\r\n    styleEle.type = \"text/css\";\r\n    appendChild(styleEle, createTextNode(cssCode));\r\n    if (id) {\r\n        setAttribute(styleEle, \"data-id\", id);\r\n    }\r\n    return styleEle;\r\n}\r\n\r\n\r\n/**\r\n * An Icon Source definition\r\n *\r\n * @typedef {Object} IconSource\r\n *\r\n * @property {Function} getIcon\r\n *  Must return a promise that resolves to an Element that represents the icon.\r\n *  This icon, if not an SVG, should have a CSS class name of `i-con`\r\n *\r\n * @property {Function} doSetup\r\n *  Called only once to do global setup. Example: to load font-face for font icons\r\n *\r\n * @property {Function} getStyles\r\n *  Called to get styles for the icon.\r\n */\r\n\r\nexport default Icon;\r\n","import { consoleError, createElement } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//============================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n/**\r\n * Support for [BoxIcons](https://boxicons.com/)\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const boxicons = {\r\n    cdnUrl: \"//unpkg.com/boxicons@latest/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.name) {\r\n            const iconUrl = `${this.cdnUrl}/regular/bx-${props.name}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"boxicon 'name' missing\"));\r\n    }\r\n};\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}\r\n","import { createElement, doc } from \"@purtuga/common/src/jsutils/runtime-aliases.js\"\r\n\r\n//===========================================================================\r\nconst OFFICE_ICON_ELEMENT = Symbol(\"OFFICE\");\r\nconst ICON_TEMPLATE = createElement(\"template\");\r\nconst IS_CODEPOINT = /^U\\+/i;\r\nlet fromCodePoint;\r\n\r\nICON_TEMPLATE.innerHTML = `<span class=\"i-con i-con-font ms-Icon\"></span>`;\r\n\r\n/**\r\n * Font support for [Office UI Fabric](https://developer.microsoft.com/en-us/fabric#/styles/icons)\r\n * Icon can be defined by name, using the `iconMap` property below, or by `code` - the Unicode that\r\n * represents the icon. The `code` value can the actual unicode character (the escape sequence -\r\n * ex. `\\uF505`) or the Unicode codepoint (ex. `U+F505`).\r\n *\r\n * @type {IconSource}\r\n *\r\n * @example\r\n *\r\n * // Extend to icon name to code maps\r\n *\r\n * import {officeUiFabric} from \"common-widget-elements/src/Icon/source.office-ui-fabric\"\r\n * import * as iconMap from \"common-widget-elements/src/Icon/source.office-ui-fabric-icon-codes\"\r\n *\r\n * officeUiFabric.iconMap = iconMap;\r\n * officeUiFabric.iconAliases = {\r\n *    \"12PointStar\": iconMap.twelvePointStar,\r\n *    \"6PointStar\": iconMap.sixPointStar\r\n * };\r\n *\r\n * export { officeUiFabric };\r\n */\r\nexport const officeUiFabric = {\r\n    cdnUrl: \"//static2.sharepointonline.com/files/fabric/assets/icons\",\r\n    isIconLoaded: false,\r\n\r\n    /**\r\n     * A map (object) of \"icon name\" to \"icon Unicode code point\" that represents the icon.\r\n     * (NOTE: unicode should be represented as `U+<code>`, not the UTF16 escaped sequence).\r\n     * See `source.office-ui-fabric-icon-codes.js` for a list of code along with names, which\r\n     * can be used set this object.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconMap: {},\r\n\r\n    /**\r\n     * A map of \"icon name alias\" to \"Icon unicode\". These names might have had to be\r\n     * changed due to constrains in the icon-codes.js file\r\n     *\r\n     * @type {Object}\r\n     */\r\n    iconAliases: {},\r\n\r\n    doSetup(IconClass) {\r\n        fromCodePoint = IconClass.fromCodePoint;\r\n        IconClass.setupFont(this.getFontFaceCss());\r\n    },\r\n\r\n    getIcon({ code, name }, iconInstance) {\r\n        // Setup the instance\r\n        // Create the Internal element that will be used to display the icon\r\n        if (!iconInstance[OFFICE_ICON_ELEMENT]) {\r\n            iconInstance[OFFICE_ICON_ELEMENT] = doc.importNode(ICON_TEMPLATE.content, true).firstChild;\r\n\r\n        }\r\n        iconInstance[OFFICE_ICON_ELEMENT].textContent = code\r\n            ? IS_CODEPOINT.test(code)\r\n                ? fromCodePoint(code)\r\n                : code\r\n            : fromCodePoint(this.iconMap[name] || this.iconAliases[name]);\r\n        return Promise.resolve(iconInstance[OFFICE_ICON_ELEMENT]);\r\n    },\r\n\r\n    getFontFaceCss() {\r\n        return `\r\n@font-face {\r\n    font-family: FabricMDL2Icons;\r\n    src: url(${this.cdnUrl}/fabricmdl2icons-2.68.woff2) format(\"woff2\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.woff) format(\"woff\"),\r\n         url(${this.cdnUrl}/fabricmdl2icons-2.68.ttf) format(\"truetype\");\r\n    font-weight: 400;\r\n    font-style: normal;\r\n}\r\n`;\r\n    },\r\n\r\n    getStyles() {\r\n        return `\r\n${this.getFontFaceCss()}\r\n\r\n.ms-Icon {\r\n    display: inline-block;\r\n    font-family: FabricMDL2Icons;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    speak: none;\r\n}\r\n`;\r\n    }\r\n};\r\n","import {consoleError, createElement} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\n//======================================================================\r\nconst TEMPLATE = createElement(\"template\");\r\n\r\n// FIXME: create emoji tables - similar to: https://unicode.org/emoji/charts/full-emoji-list.html\r\n\r\n/**\r\n * Shows Emoji from Twenmoji.\r\n * Get code from https://unicode.org/emoji/charts/full-emoji-list.html\r\n * Images served from unpkg - https://unpkg.com/twemoji@latest/2/svg/\r\n *\r\n * @type {IconSource}\r\n */\r\nexport const twemoji = {\r\n    cdnUrl: \"//unpkg.com/twemoji@latest/2/svg\",\r\n    getIcon(props, iconInstance) {\r\n        if (props.code) {\r\n            const iconUrl = `${this.cdnUrl}/${getSvgImgNameFromCode(props.code)}.svg`;\r\n\r\n            return iconInstance.constructor\r\n                .fetchSvg(iconUrl)\r\n                .then(returnNewElement)\r\n                .catch(handleReject);\r\n        }\r\n        return Promise.reject(new Error(\"twemoji 'node' missing\"));\r\n    }\r\n};\r\n\r\nfunction getSvgImgNameFromCode(code) {\r\n    return code\r\n        .toLowerCase()\r\n        .replace(/^u\\+/, \"\");\r\n}\r\n\r\nfunction handleReject(error) {\r\n    consoleError(error);\r\n    return Promise.reject(error);\r\n}\r\n\r\nfunction returnNewElement(svgString) {\r\n    TEMPLATE.innerHTML = svgString;\r\n    return document.importNode(TEMPLATE.content, true).firstChild;\r\n}","//--------------------------------------------------------------------------------\r\n// Exports `Icon` with all currently available sources.\r\n// If wanting to avoid the \"bulk\", use the `Icon/Base/Icon` class instead\r\n// add your own custom sources to that.\r\n//--------------------------------------------------------------------------------\r\nimport Icon from \"./base/Icon.js\";\r\nimport {boxicons} from \"./source.boxicons.js\";\r\nimport {officeUiFabric} from \"./source.office-ui-fabric.js\";\r\nimport {twemoji} from \"./source.twemoji.js\";\r\n\r\nIcon.sources.boxicons = boxicons;\r\nIcon.sources.twemoji = twemoji;\r\nIcon.sources[\"office-ui-fabric\"] = officeUiFabric;\r\n\r\n\r\nexport { Icon };\r\nexport default Icon;\r\n","/**\r\n * Toggles a CSS class on/off on an element\r\n *\r\n * @function domToggleClass\r\n *\r\n * @param {HTMLElement} el\r\n * @param {String} cssClass\r\n */\r\nexport function domToggleClass(el, cssClass){\r\n    if (el) {\r\n        return el.classList.toggle(cssClass);\r\n    }\r\n}\r\nexport default domToggleClass;","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport {domToggleClass} from \"@purtuga/common/src/domutils/domToggleClass.js\";\r\nimport {domAddClass} from \"@purtuga/common/src/domutils/domAddClass.js\";\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\nimport {hasAttribute} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * Provides the user with a confirmation upon clicking the component that\r\n * allows them to either proceed or cancel\r\n *\r\n * __SUPPORTED CSS VARS__\r\n *\r\n * tbd...\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @property disabled\r\n *\r\n * @fires ConfirmAction#confirmed\r\n */\r\nclass ConfirmAction extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"confirm-action\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop({ boolean: true }) disabled = false;\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n\r\n    willRender(){\r\n        return !this._renderDone;\r\n    }\r\n\r\n    render() {\r\n        if (this._renderDone) {\r\n            return;\r\n        }\r\n\r\n        return `\r\n<style>\r\n    :host {\r\n        --confirm-bg: var(--theme-color-bg, white);\r\n        --confirm-border-radius: 0;\r\n        --yes-bg: var(--theme-color-accent-success-0, #b6eeb5);\r\n        --yes-bg-hover: var(--theme-color-accent-success-1, #9ecf99);\r\n        --no-bg: transparent;\r\n        --no-bg-hover: var(--theme-color-1, #e8e8e8);\r\n    }\r\n    ${ hostStyles  }\r\n    .action {\r\n        cursor: pointer;\r\n    }\r\n    .confirm {\r\n        display: flex;\r\n        align-content: space-between;\r\n        position: absolute;\r\n        white-space: nowrap;\r\n        background-color: var(--confirm-bg);\r\n        color: var(--theme-color-fg);\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--confirm-border-radius, 0);\r\n        left: -1px;\r\n        top: -1px;\r\n        height: calc(100% + 4px);\r\n        min-width: calc(100% + 4px);\r\n        max-width: var(--confirm-width, 300px);\r\n        line-height: 1.3em;\r\n        user-select: none;\r\n        overflow: hidden;\r\n    }\r\n    .confirm > * {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    :host([confirm-align-right]) .confirm {\r\n        left: auto;\r\n        right: -1px;\r\n    }\r\n    .hide {\r\n        display: none;\r\n    }\r\n    .msg {\r\n        flex: auto;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        padding: 0 var(--theme-spacing-1, 0.2em);\r\n    }\r\n    .no,\r\n    .yes {\r\n        padding-left: var(--theme-spacing, 0.5em);\r\n        padding-right: var(--theme-spacing, 0.5em);\r\n        transition: background-color 0.3s;\r\n    }\r\n    .no {\r\n        background-color: var(--no-bg);\r\n    }\r\n    .no:hover {\r\n        background-color: var(--no-bg-hover);\r\n    }\r\n    .yes {\r\n        background-color: var(--yes-bg);\r\n    }\r\n    .yes:hover {\r\n        background-color: var(--yes-bg-hover);\r\n    }\r\n\r\n    :host([disabled]) {\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    }\r\n    :host([disabled]) .action {\r\n        cursor: auto;\r\n    }\r\n</style>\r\n<span class=\"action\"><slot>&#9654;</slot></span>\r\n<div class=\"confirm hide\">\r\n    <span class=\"msg\">\r\n        <slot name=\"message\">Proceed?</slot>\r\n    </span>\r\n    <span class=\"no action\">\r\n        <slot name=\"cancel\">No</slot>\r\n    </span>\r\n    <span class=\"yes action\">\r\n        <slot name=\"confirm\">Yes</slot>\r\n    </span>\r\n</div>`;\r\n    }\r\n\r\n    didRender() {\r\n        if (!this._renderDone) {\r\n            this._renderDone = true;\r\n            this._$confirm = this.$(\".confirm\");\r\n            domAddEventListener(this.$(\".action\"), \"click\", this._handleShowHideConfirm);\r\n            domAddEventListener(this.$(\".yes\"), \"click\", this._handleConfirm);\r\n            domAddEventListener(this.$(\".no\"), \"click\", this._handleShowHideConfirm);\r\n            this.onPropsChange(this._handlePropsChange, \"disabled\");\r\n        }\r\n    }\r\n\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    @bind\r\n    _handlePropsChange() {\r\n        if (this.props.disabled) {\r\n            domAddClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleShowHideConfirm() {\r\n        if (!hasAttribute(this, \"disabled\")) {\r\n            domToggleClass(this._$confirm, \"hide\");\r\n        }\r\n    }\r\n\r\n    @bind\r\n    _handleConfirm() {\r\n        /**\r\n         * The action has been confirmed by the user\r\n         *\r\n         * @event ConfirmAction#confirmed\r\n         */\r\n        this.emit(\"confirmed\");\r\n        this._handleShowHideConfirm();\r\n    }\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n// Private functions here...\r\n\r\n//------------------------------------------ EXPORTS ----------\r\nexport default ConfirmAction;\r\nexport {\r\n    ConfirmAction\r\n}\r\n","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\";\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\";\r\nimport {\r\n    PropDirective,\r\n    AttrDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * The Todo item Input area (a textarea)\r\n * @extends ComponentElement\r\n * @fires TodoInput#change\r\n */\r\n@dataBoundTemplates({\r\n    directives: [PropDirective, AttrDirective, OnDirective]\r\n})\r\nclass TodoInput extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-input\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop()\r\n    value = \"\";\r\n\r\n    @prop({ attr: true })\r\n    placeholder = \"Enter value...\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        min-height: 1.5em;\r\n        border: var(--theme-border-light, 1px solid #eeeeee);\r\n    }\r\n    :host(:focus-within) {\r\n        border: var(--theme-border, 1px solid lightgrey);\r\n    }\r\n    input {\r\n        font-size: var(--theme-font-size, 16px);\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n        height: 100%;\r\n        border: none;\r\n        resize: none;\r\n        outline: none;\r\n        padding: var(--theme-spacing-3, 0.5em);\r\n    }\r\n</style>\r\n<input\r\n    type=\"text\"\r\n    _prop.value=\"props.value\"\r\n    _on.input=\"emit('change', $ev.target.value)\"\r\n    _attr.placeholder=\"props.placeholder\" />\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    focus() {\r\n        this.$(\"input\").focus();\r\n    }\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\nexport default TodoInput;\r\nexport {\r\n    TodoInput\r\n}","import {ComponentElement} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\n\r\n//=============================================================\r\n\r\n/**\r\n * Wraps an action. Action is initially faded and then emphasized on hover\r\n * @extends ComponentElement\r\n * @property {String} [invisible]\r\n *  Only as HTML Attribute. Makes action hidden and only visible on hover.\r\n */\r\nclass TodoAction extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-action\";\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    // static define(name) {}\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        fill: var(--theme-color-3, lightgrey);\r\n        color: var(--theme-color-3, lightgrey);\r\n        transition: all 0.3s;\r\n        cursor: pointer;\r\n    }\r\n    :host([invisible]) {\r\n        opacity: 0;\r\n    } \r\n    :host(:hover) {\r\n        fill: var(--theme-color-7, darkgrey);\r\n        color: var(--theme-color-7, darkgrey);\r\n        opacity: 1;\r\n    }\r\n</style>\r\n<slot></slot>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    // Other instance methods\r\n\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n// Private functions here...\r\n\r\n//------------------------------------------ EXPORTS ----------\r\nexport default TodoAction;\r\nexport {\r\n    TodoAction\r\n}\r\n","import {ComponentElement, prop, bind} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {Icon} from \"@purtuga/common-widget-elements/src/Icon/Icon.js\";\r\nimport {ConfirmAction} from \"@purtuga/common-widget-elements/src/ConfirmAction/ConfirmAction.js\";\r\nimport {\r\n    IfDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {view} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {domAddEventListener} from \"@purtuga/common/src/domutils/domAddEventListener.js\";\r\nimport {doc} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\nimport showOnHoverStyles from \"./styles/show-on-hover.css?inline\";\r\nimport {TodoInput} from \"./TodoInput.js\";\r\nimport {TodoAction} from \"./TodoAction.js\";\r\n\r\n//=============================================================\r\nconst directives = [\r\n    IfDirective,\r\n    AttrDirective,\r\n    PropDirective,\r\n    OnDirective\r\n];\r\nConfirmAction.define();\r\nIcon.define();\r\n\r\n/**\r\n * Display a TodoItem\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @fires TodoItem#item-check\r\n * @fires TodoItem#item-un-check\r\n * @fires TodoItem#item-edit\r\n * @fires TodoItem#item-edit-done\r\n * @fires TodoItem#item-edit-cancel\r\n * @fires TodoItem#item-delete\r\n */\r\n@dataBoundTemplates({ directives })\r\nclass TodoItem extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-item\";\r\n\r\n    /**\r\n     * The Input widget that will be used to collect user data\r\n     * @type {TodoInput}\r\n     */\r\n    static TodoInput = TodoInput;\r\n\r\n    /**\r\n     * The View Template for showing a Todo Item\r\n     * @type {Template}\r\n     */\r\n    static displayView = view(`\r\n<todo-action _on.click=\"_emitCheckUncheck()\" _attr.class=\"props.noCheck ? 'disabled' : ''\">\r\n    <i-con\r\n        class=\"checkmark\"\r\n        _attr.from=\"props.iconSource\" \r\n        _attr.name=\"props.done ? props.iconDoneName : props.iconNotDoneName\"></i-con>\r\n</todo-action>\r\n<span class=\"description\" _attr.title=\"props.noEdit ? '' : props.tooltipEdit\" _on.click=\"_emitEdit()\">\r\n    <slot></slot>\r\n</span>\r\n<confirm-action _if=\"!props.noDelete\" confirm-align-right _on.confirmed=\"emit('item-delete')\">\r\n    <todo-action class=\"show-on-hover\">\r\n        <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconTrashName\"></i-con>\r\n    </todo-action>\r\n    <span slot=\"message\">{{ props.confirmText }}</span>\r\n    <span slot=\"cancel\">{{ props.confirmCancelText }}</span>\r\n    <span slot=\"confirm\">{{ props.confirmProceedText }}</span>\r\n</confirm-action>\r\n`, directives);\r\n\r\n\r\n    /**\r\n     * The View Template for Editing a Todo Item\r\n     * @type {Template}\r\n     */\r\n    static editView = view(`\r\n<span class=\"description\">\r\n    <${ this.TodoInput.tagName } \r\n        _prop.value=\"_getDescription()\"\r\n        _on.change=\"_storeNewDescription($ev)\"\r\n        _on.keyup.enter=\"_emitSave()\"></${this.TodoInput.tagName}>\r\n</span>\r\n<todo-action _on.click=\"_emitSave()\">\r\n    <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconSaveName\"></i-con>\r\n</todo-action>\r\n<todo-action _on.click=\"_emitCancel()\">\r\n    <i-con _attr.from=\"props.iconSource\" _attr.name=\"props.iconCancelName\"></i-con>\r\n</todo-action>\r\n`, directives);\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoInput.define();\r\n        TodoAction.define(); // TODO: should it be exposed as class static?\r\n    }\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop\r\n    data = null;\r\n\r\n    /**\r\n     * Show the edit UI. Will only work if `noEdit` is false\r\n     * @type {boolean}\r\n     */\r\n    @prop({ boolean: true }) edit = false;\r\n\r\n    @prop({ boolean: true }) noEdit = false;\r\n\r\n    @prop({ boolean: true }) noCheck = false;\r\n\r\n    @prop({ boolean: true }) noDelete = false;\r\n\r\n    @prop({ boolean: true }) done = false;\r\n\r\n    @prop({ attr: true }) tooltipEdit = \"Click to Edit\";\r\n\r\n    @prop({ attr: true }) confirmText = \"Remove Item?\";\r\n\r\n    @prop({ attr: true }) confirmCancelText = \"No\";\r\n\r\n    @prop({ attr: true }) confirmProceedText = \"Yes\";\r\n\r\n    @prop({ attr: true }) iconSource = \"boxicons\";\r\n\r\n    @prop({ attr: true }) iconDoneName = \"check-circle\";\r\n\r\n    @prop({ attr: true }) iconNotDoneName = \"circle\";\r\n\r\n    @prop({ attr: true }) iconTrashName = \"trash\";\r\n\r\n    @prop({ attr: true }) iconSaveName = \"save\";\r\n\r\n    @prop({ attr: true }) iconCancelName = \"reset\";\r\n\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    didInit(){\r\n        this._docEv = null;\r\n        this._id = Symbol(\"todoitem\");\r\n        this._newDescription = \"\";\r\n    }\r\n\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        padding: var(--theme-spacing-2, 0.5em);\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--theme-border-radius, 6px);\r\n        margin-bottom: var(--theme-spacing-1, 0.2em);\r\n        transition: border 0.5s;\r\n    }\r\n    :host(:last-child) {\r\n        margin-bottom: 0;\r\n    }\r\n    ${ showOnHoverStyles }\r\n    .content {\r\n        display: flex;\r\n    }\r\n    .description {\r\n        flex: auto;\r\n        flex-wrap: wrap;\r\n        padding: 0 var(--theme-spacing-3, 1em);\r\n    }\r\n    :host([done]) .description {\r\n        text-decoration: line-through;\r\n    }\r\n    :host([done]:hover) .description {\r\n        text-decoration: none;\r\n    }\r\n    .clickable {\r\n        cursor: pointer;\r\n    }\r\n    :host(:hover) {\r\n        border-color: var(--theme-border-color, grey);\r\n    }\r\n    :host([done]) i-con.checkmark {\r\n        fill: var(--theme-color-accent-success-4, green);\r\n        color: var(--theme-color-accent-success-4, green);\r\n    }\r\n    .disabled {\r\n        cursor: auto;\r\n        pointer-events: none;\r\n    }\r\n</style>\r\n<div class=\"content\" _on.click=\"$ev[_id] = this\">\r\n    {{ _getView() }}\r\n</div>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    didDestroy() {\r\n        this._removeDocEv();\r\n    }\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _getView() {\r\n        this._newDescription = this._getDescription();\r\n\r\n        if (this.props.noEdit || !this.props.edit) {\r\n            this._removeDocEv();\r\n            return this.constructor.displayView;\r\n        }\r\n\r\n        setTimeout(this._setupDocEv, 200);\r\n        return this.constructor.editView;\r\n    }\r\n\r\n    @bind\r\n    _setupDocEv() {\r\n        if (!this._docEv && this.props.edit) {\r\n            this.$(this.constructor.TodoInput.tagName).focus();\r\n\r\n            this._docEv = domAddEventListener(doc, \"click\", event => {\r\n                if (!event[this._id] || !this.$ui.contains(event[this._id])) {\r\n                    this._emitSave();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _removeDocEv() {\r\n        if (this._docEv) {\r\n            this._docEv.remove();\r\n            this._docEv = null;\r\n        }\r\n    }\r\n\r\n    _getDescription() {\r\n        return this.textContent;\r\n    }\r\n\r\n    _storeNewDescription(event) {\r\n        this._newDescription = event.detail;\r\n    }\r\n\r\n    _emitEdit() {\r\n        if (!this.props.noEdit) {\r\n            this.emit('item-edit');\r\n        }\r\n    }\r\n\r\n    _emitCheckUncheck() {\r\n        if (!this.props.noCheck) {\r\n            this.emit(this.props.done ? 'item-un-check' : 'item-check', this.props.data);\r\n        }\r\n    }\r\n\r\n    _emitSave() {\r\n        // FIXME: document this event\r\n        this.emit(\"item-edit-done\", this._newDescription);\r\n        this._removeDocEv();\r\n    }\r\n\r\n    _emitCancel() {\r\n        // FIXME: document this event\r\n        this.emit(\"item-edit-cancel\");\r\n        this._removeDocEv();\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\n\r\n//================================================ EXPORTS ====\r\nexport default TodoItem;\r\nexport {\r\n    TodoItem\r\n}","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {OnDirective, PropDirective} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {TodoInput} from \"./TodoInput.js\";\r\nimport {TodoAction} from \"./TodoAction.js\";\r\nimport showOnHoverStyles from \"./styles/show-on-hover.css?inline\"\r\n\r\n//=============================================================\r\n\r\n/**\r\n *\r\n * @extends ComponentElement\r\n */\r\n@dataBoundTemplates({\r\n    directives: [PropDirective, OnDirective]\r\n})\r\nclass TodoAdd extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-add\";\r\n\r\n    /**\r\n     * The Input widget that will be used to collect user data\r\n     * @type {TodoInput}\r\n     */\r\n    static TodoInput = TodoInput;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoInput.define();\r\n        TodoAction.define(); // TODO: should TodoAction be exposed as Static prop\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    @prop() value = \"\";\r\n\r\n    @prop() placeholder=\"\";\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){}\r\n\r\n    render() {\r\n        const todoInputTagName = this.constructor.TodoInput.tagName;\r\n\r\n        return `\r\n<style>\r\n    ${ hostStyles }\r\n    :host {\r\n        display: block;\r\n        border: var(--theme-border-light, 1px solid lightgrey);\r\n        border-radius: var(--theme-border-radius, 6px);\r\n        overflow: hidden;\r\n    }\r\n    ${ showOnHoverStyles }\r\n    div {\r\n        display: flex;\r\n    }\r\n    ${todoInputTagName} {\r\n        margin: var(--theme-spacing-1, 0.2em);\r\n        flex: auto;\r\n        border: none;\r\n    }\r\n    todo-action {\r\n        padding: 0 var(--theme-spacing-2, 0.5em);\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n</style>\r\n<div>\r\n    <${ todoInputTagName }\r\n        _on.change=\"_handleNewValue($ev)\"\r\n        _on.keyup.enter=\"_handleAdd()\"\r\n        _on.keyup.esc=\"props.value = ''\"\r\n        _prop.placeholder=\"props.placeholder\"\r\n        _prop.value=\"value\"></${ todoInputTagName }>\r\n    <todo-action _on.click=\"_handleAdd()\" class=\"show-on-hover\">\r\n        <i-con from=\"boxicons\" name=\"plus-circle\">Add</i-con>\r\n    </todo-action>\r\n</div>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _handleNewValue(ev) {\r\n        this.value = ev.detail;\r\n    }\r\n\r\n    _handleAdd() {\r\n        this.value = this.value ? this.value.trim() : \"\";\r\n\r\n        if (this.value) {\r\n            this.emit(\"add\", this.value);\r\n            this.value = \"\";\r\n            this._queueUpdate();\r\n            this.focus();\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        this.$(this.constructor.TodoInput.tagName).focus();\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\nexport default TodoAdd;\r\nexport {\r\n    TodoAdd\r\n}","import {ComponentElement, prop} from \"@purtuga/component-element/src/index.js\"\r\nimport hostStyles from \"@purtuga/component-element/src/styles/host.css?inline\"\r\nimport {dataBoundTemplates} from \"@purtuga/dom-data-bind/src/ElementDecorator.js\";\r\nimport {\r\n    EachDirective,\r\n    IfDirective,\r\n    PropDirective,\r\n    AttrDirective,\r\n    OnDirective\r\n} from \"@purtuga/dom-data-bind/src/index.js\";\r\nimport {isObject} from \"@purtuga/common/src/jsutils/runtime-aliases.js\";\r\n\r\nimport {TodoItem} from \"./TodoItem.js\";\r\nimport {TodoAdd} from \"./TodoAdd.js\";\r\n\r\n//=============================================================\r\n\r\n/**\r\n * A container that displays a set of todo items.\r\n *\r\n * __Supported CSS Vars__\r\n *\r\n * TODO: document css vars\r\n *\r\n * @extends ComponentElement\r\n *\r\n * @fires TodoList#data-change\r\n */\r\n@dataBoundTemplates({\r\n    directives: [ EachDirective, IfDirective, PropDirective, AttrDirective, OnDirective ]\r\n})\r\nclass TodoList extends ComponentElement {\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                              STATIC MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC PROPERTIES ~~~~~\r\n    static tagName = \"todo-list\";\r\n\r\n    /**\r\n     * The Constructor (`CustomElement`) for each individual todo item\r\n     * @type {TodoItem}\r\n     */\r\n    static TodoItem = TodoItem;\r\n\r\n    /**\r\n     * The Todo Add area Constructor (`CustomElement)\r\n     * @type {TodoAdd}\r\n     */\r\n    static TodoAdd = TodoAdd;\r\n\r\n    // static get delayDestroy() {}\r\n    // static get useShadow() {}\r\n    // static get shadowMode() {}\r\n    // static getEventInitOptions(){}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ STATIC METHODS ~~~~~\r\n\r\n    static define(name) {\r\n        super.define(name);\r\n        this.TodoAdd.define();\r\n        this.TodoItem.define();\r\n    }\r\n\r\n\r\n    //-------------------------------------------------------------\r\n    //\r\n    //                                            INSTANCE MEMBERS\r\n    //\r\n    //-------------------------------------------------------------\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  PROPS AND ATTRIBUTES  ~~~~\r\n\r\n    /**\r\n     * The list of todo items. By default, it support an array of strings or\r\n     * array of objects, with each object having at least a `title` attribute\r\n     * @type {Array<String|Object>}\r\n     */\r\n    @prop data = [];\r\n\r\n    /**\r\n     * The message that should be shown when there are no items\r\n     * @type {string}\r\n     */\r\n    @prop({ attr: true }) emptyMsg = \"No Items\";\r\n\r\n    @prop({ attr: true, boolean: true}) noAdd = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noEdit = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noCheck = false;\r\n\r\n    @prop({ attr: true, boolean: true}) noDelete = false;\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LIFE CYCLE HOOKS  ~~~~~\r\n\r\n    // didInit(){}\r\n    // didMount(){}\r\n    // willRender(){ }\r\n\r\n    render() {\r\n        // this._renderDone = true;\r\n\r\n        const {\r\n            TodoItem: { tagName: todoItemTagName },\r\n            TodoAdd: { tagName: todoAddTagName }\r\n        } = this.constructor;\r\n\r\n        return `\r\n<style>\r\n    ${hostStyles}\r\n    :host {\r\n        display: block;\r\n        padding: var(--theme-spacing, 0.5em);\r\n        border: var(--theme-border-light, 1px solid, #ececec);\r\n        box-shadow: var(--them--e-box-shadow-s, 0 8px 10px 1px rgba(0,0,0,0.14));\r\n        border: var(--theme-border-light, 1px solid #efefef);\r\n        border-radius: var(--theme-border-radius, 5px);\r\n    }\r\n    .body {\r\n        min-height: 3em;\r\n    }\r\n    ${todoAddTagName} {\r\n        margin-top: var(--theme-spacing-5, 1em);\r\n    }\r\n</style>\r\n<div class=\"body\">\r\n    <div _if=\"!props.data.length\">{{ props.emptyMsg }}</div>\r\n    <${todoItemTagName}\r\n        _each=\"(todoData, i) in props.data\"\r\n        _attr.no-edit=\"props.noEdit\"\r\n        _attr.no-check=\"props.noCheck\"\r\n        _attr.no-delete=\"props.noDelete\"\r\n        _prop.data=\"todoData\"\r\n        _attr.done=\"todoData.done\"\r\n        _attr.edit=\"todoData.edit\"\r\n        _on.item-edit=\"todoData.edit = true, _queueUpdate()\"\r\n        _on.item-edit-done=\"_handleEditDone($ev, todoData, i)\"\r\n        _on.item-edit-cancel=\"todoData.edit = false, _queueUpdate()\"\r\n        _on.item-delete=\"_handleDelete($ev, todoData, i)\"\r\n        _on.item-check=\"todoData.done = true, _queueUpdate()\"\r\n        _on.item-un-check=\"todoData.done = false, _queueUpdate()\">{{ _isObject(todoData) ? todoData.title : todoData }}</${todoItemTagName}>\r\n</div>\r\n<${todoAddTagName} _if=\"!props.noAdd\" _on.add=\"_addNew($ev)\"></${todoAddTagName}>\r\n`;\r\n    }\r\n\r\n    // didRender() {}\r\n    // didUnmount() {}\r\n    // didDestroy() {}\r\n\r\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  INSTANCE METHODS  ~~~~\r\n\r\n    _isObject(obj) {\r\n        return isObject(obj);\r\n    }\r\n\r\n    _addNew(event) {\r\n        const newItem = { title: event.detail };\r\n        this.props.data.push(newItem);\r\n        this._queueUpdate();\r\n        this.emit(\"data-change\");\r\n    }\r\n\r\n    _handleEditDone(event, todoData) {\r\n        todoData.edit = false;\r\n        todoData.title = event.detail;\r\n        this._queueUpdate();\r\n        /**\r\n         * @event TodoList#data-change\r\n         */\r\n        this.emit(\"data-change\");\r\n    }\r\n\r\n    _handleDelete(event, todoData, i) {\r\n        this.props.data.splice(i, 1);\r\n        this._queueUpdate();\r\n        this.emit(\"data-change\");\r\n    }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n//\r\n//                                       CLASS PRIVATE MEMBERS\r\n//\r\n//-------------------------------------------------------------\r\n\r\n\r\n//------------------------------------------ OTHER EXPORTS ----\r\nexport default TodoList;\r\nexport {\r\n    TodoList,\r\n    TodoItem,\r\n    TodoAdd\r\n}\r\n","export * from \"./TodoList.js\";\r\n"],"sourceRoot":""}